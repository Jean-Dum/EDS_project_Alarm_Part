{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0","program":"/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","dw1000","/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=1","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=50f0e6389c37de37","-C","extra-filename=-50f0e6389c37de37","--out-dir","/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps","--target","thumbv6m-none-eabi","-L","dependency=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps","-L","dependency=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/debug/deps","--extern","embedded_hal=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libembedded_hal-51233085ad27e219.rmeta","--extern","ieee802154=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libieee802154-50c1c2eb756a3049.rmeta","--extern","nb=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libnb-aa3c8f0852d71716.rmeta","--extern","serde=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libserde-5aa0e1da57ef1b97.rmeta","--extern","serde_derive=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/debug/deps/libserde_derive-cf25ab25e11813f9.so","--extern","ssmarshal=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libssmarshal-1d0f22901ebb273b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libdw1000-50f0e6389c37de37.rmeta"},"prelude":{"crate_id":{"name":"dw1000","disambiguator":[1069463467243506053,4361522021490358978]},"crate_root":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src","external_crates":[{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17860656607429628872,7899905306774645774]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12612412396037403104,10036660482193044370]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14692023445700134427,11043489410451781886]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","num":4,"id":{"name":"embedded_hal","disambiguator":[12305884280043103651,13622907464616288457]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","num":5,"id":{"name":"nb","disambiguator":[7924499734892593888,4823303981110679680]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","num":6,"id":{"name":"void","disambiguator":[9640493596983872406,13458916636450077426]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","num":7,"id":{"name":"ssmarshal","disambiguator":[5723861887370112058,113813109790837695]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","num":8,"id":{"name":"serde","disambiguator":[964527896926630576,6769247574564035784]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","num":9,"id":{"name":"serde_derive","disambiguator":[12714016120798761864,9553498966570094254]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","num":10,"id":{"name":"encode_unicode","disambiguator":[1756890938908774450,14201072790108062982]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","num":11,"id":{"name":"ieee802154","disambiguator":[8639151780165315015,1762427668772351300]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","num":12,"id":{"name":"byteorder","disambiguator":[9039683859505188390,13436306012287321625]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","num":13,"id":{"name":"hash32_derive","disambiguator":[3896279198511964936,5255127497311482088]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","num":14,"id":{"name":"hash32","disambiguator":[17422249016312400433,4677296204588142184]}}],"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":0,"byte_end":1400,"line_start":1,"line_end":47,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":11,"index":4},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":1291,"byte_end":1294,"line_start":38,"line_end":38,"column_start":21,"column_end":24},"alias_span":null,"name":"mac","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":139},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":1322,"byte_end":1328,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"alias_span":null,"name":"DW1000","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":1334,"byte_end":1339,"line_start":42,"line_end":42,"column_start":5,"column_end":10},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4816},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":1345,"byte_end":1352,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":285},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":1358,"byte_end":1363,"line_start":44,"line_end":44,"column_start":5,"column_end":10},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":204},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":1369,"byte_end":1377,"line_start":45,"line_end":45,"column_start":5,"column_end":13},"alias_span":null,"name":"TxFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":1383,"byte_end":1396,"line_start":46,"line_end":46,"column_start":5,"column_end":18},"alias_span":null,"name":"Uninitialized","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":0,"byte_end":1400,"line_start":1,"line_end":47,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":124},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":359},{"krate":0,"index":376},{"krate":0,"index":377}],"decl_id":null,"docs":" Driver crate for the DW1000 UWB transceiver","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":1143,"byte_end":1153,"line_start":25,"line_end":25,"column_start":1,"column_end":11}},{"value":"deny(missing_docs)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":1155,"byte_end":1177,"line_start":27,"line_end":27,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ll","qualname":"::ll","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":16},{"krate":0,"index":20},{"krate":0,"index":28},{"krate":0,"index":42},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":59},{"krate":0,"index":63},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":390},{"krate":0,"index":394},{"krate":0,"index":4483},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":487},{"krate":0,"index":491},{"krate":0,"index":4488},{"krate":0,"index":4493},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":530},{"krate":0,"index":534},{"krate":0,"index":4498},{"krate":0,"index":4503},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":591},{"krate":0,"index":595},{"krate":0,"index":4508},{"krate":0,"index":4513},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1030},{"krate":0,"index":1034},{"krate":0,"index":4518},{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1073},{"krate":0,"index":1077},{"krate":0,"index":4523},{"krate":0,"index":4528},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1260},{"krate":0,"index":1264},{"krate":0,"index":4533},{"krate":0,"index":4538},{"krate":0,"index":1297},{"krate":0,"index":1299},{"krate":0,"index":1303},{"krate":0,"index":1307},{"krate":0,"index":4543},{"krate":0,"index":4548},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1490},{"krate":0,"index":1494},{"krate":0,"index":4553},{"krate":0,"index":4558},{"krate":0,"index":2013},{"krate":0,"index":2015},{"krate":0,"index":2019},{"krate":0,"index":2023},{"krate":0,"index":4563},{"krate":0,"index":4568},{"krate":0,"index":2650},{"krate":0,"index":2652},{"krate":0,"index":2656},{"krate":0,"index":2660},{"krate":0,"index":4573},{"krate":0,"index":2801},{"krate":0,"index":2803},{"krate":0,"index":2807},{"krate":0,"index":2811},{"krate":0,"index":4578},{"krate":0,"index":2898},{"krate":0,"index":2900},{"krate":0,"index":2904},{"krate":0,"index":2908},{"krate":0,"index":4583},{"krate":0,"index":2959},{"krate":0,"index":2961},{"krate":0,"index":2965},{"krate":0,"index":2969},{"krate":0,"index":4588},{"krate":0,"index":4593},{"krate":0,"index":3002},{"krate":0,"index":3004},{"krate":0,"index":3008},{"krate":0,"index":3012},{"krate":0,"index":4598},{"krate":0,"index":3027},{"krate":0,"index":3029},{"krate":0,"index":3033},{"krate":0,"index":3037},{"krate":0,"index":4603},{"krate":0,"index":4608},{"krate":0,"index":3070},{"krate":0,"index":3072},{"krate":0,"index":3076},{"krate":0,"index":3080},{"krate":0,"index":4613},{"krate":0,"index":4618},{"krate":0,"index":3113},{"krate":0,"index":3115},{"krate":0,"index":3119},{"krate":0,"index":3123},{"krate":0,"index":4623},{"krate":0,"index":4628},{"krate":0,"index":3156},{"krate":0,"index":3158},{"krate":0,"index":3162},{"krate":0,"index":3166},{"krate":0,"index":4633},{"krate":0,"index":4638},{"krate":0,"index":3271},{"krate":0,"index":3273},{"krate":0,"index":3277},{"krate":0,"index":3281},{"krate":0,"index":4643},{"krate":0,"index":4648},{"krate":0,"index":3314},{"krate":0,"index":3316},{"krate":0,"index":3320},{"krate":0,"index":3324},{"krate":0,"index":4653},{"krate":0,"index":4658},{"krate":0,"index":3375},{"krate":0,"index":3377},{"krate":0,"index":3381},{"krate":0,"index":3385},{"krate":0,"index":4663},{"krate":0,"index":4668},{"krate":0,"index":3418},{"krate":0,"index":3420},{"krate":0,"index":3424},{"krate":0,"index":3428},{"krate":0,"index":4673},{"krate":0,"index":4678},{"krate":0,"index":3461},{"krate":0,"index":3463},{"krate":0,"index":3467},{"krate":0,"index":3471},{"krate":0,"index":4683},{"krate":0,"index":4688},{"krate":0,"index":3504},{"krate":0,"index":3506},{"krate":0,"index":3510},{"krate":0,"index":3514},{"krate":0,"index":4693},{"krate":0,"index":4698},{"krate":0,"index":3547},{"krate":0,"index":3549},{"krate":0,"index":3553},{"krate":0,"index":3557},{"krate":0,"index":4703},{"krate":0,"index":4708},{"krate":0,"index":3680},{"krate":0,"index":3682},{"krate":0,"index":3686},{"krate":0,"index":3690},{"krate":0,"index":4713},{"krate":0,"index":3723},{"krate":0,"index":3725},{"krate":0,"index":3729},{"krate":0,"index":3733},{"krate":0,"index":4718},{"krate":0,"index":4723},{"krate":0,"index":3784},{"krate":0,"index":3786},{"krate":0,"index":3790},{"krate":0,"index":3794},{"krate":0,"index":4728},{"krate":0,"index":4733},{"krate":0,"index":3827},{"krate":0,"index":3829},{"krate":0,"index":3833},{"krate":0,"index":3837},{"krate":0,"index":4738},{"krate":0,"index":4743},{"krate":0,"index":3870},{"krate":0,"index":3872},{"krate":0,"index":3876},{"krate":0,"index":3880},{"krate":0,"index":4748},{"krate":0,"index":4753},{"krate":0,"index":3931},{"krate":0,"index":3933},{"krate":0,"index":3937},{"krate":0,"index":3941},{"krate":0,"index":4758},{"krate":0,"index":3974},{"krate":0,"index":3976},{"krate":0,"index":3980},{"krate":0,"index":3984},{"krate":0,"index":4763},{"krate":0,"index":4017},{"krate":0,"index":4019},{"krate":0,"index":4023},{"krate":0,"index":4027},{"krate":0,"index":4768},{"krate":0,"index":4773},{"krate":0,"index":4258},{"krate":0,"index":4260},{"krate":0,"index":4264},{"krate":0,"index":4268},{"krate":0,"index":4778},{"krate":0,"index":4783},{"krate":0,"index":4445},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":75},{"krate":0,"index":80},{"krate":0,"index":84},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":97},{"krate":0,"index":102},{"krate":0,"index":106},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":4788},{"krate":0,"index":4790},{"krate":0,"index":4795},{"krate":0,"index":4797},{"krate":0,"index":4802},{"krate":0,"index":4804},{"krate":0,"index":4809},{"krate":0,"index":4811}],"decl_id":null,"docs":" Low-level interface to the DW1000","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":2459,"byte_end":2465,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"name":"DW1000","qualname":"::ll::DW1000","value":"DW1000 {  }","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15}],"decl_id":null,"docs":" Entry point to the DW1000 driver's low-level API","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":2718,"byte_end":2721,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<DW1000<SPI, CS>>::new","value":"fn (spi: SPI, chip_select: CS) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `DW1000`","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":2980,"byte_end":2991,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"RegAccessor","qualname":"::ll::RegAccessor","value":"","parent":null,"children":[],"decl_id":null,"docs":" Provides access to a register","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":3227,"byte_end":3231,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"read","qualname":"<RegAccessor>::read","value":"fn (&mut self) -> Result<R::Read, Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Read from the register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":3693,"byte_end":3698,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"write","qualname":"<RegAccessor>::write","value":"fn <F> (&mut self, f: F) -> Result<(), Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Write to the register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":4248,"byte_end":4254,"line_start":106,"line_end":106,"column_start":12,"column_end":18},"name":"modify","qualname":"<RegAccessor>::modify","value":"fn <F> (&mut self, f: F) -> Result<(), Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Modify the register\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":44},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":5183,"byte_end":5191,"line_start":139,"line_end":139,"column_start":5,"column_end":13},"name":"Transfer","qualname":"::ll::Error::Transfer","value":"Error::Transfer(<SPI as spi::Transfer<u8>>::Error)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" SPI error occured during a transfer transaction\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":47},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":5286,"byte_end":5291,"line_start":142,"line_end":142,"column_start":5,"column_end":10},"name":"Write","qualname":"::ll::Error::Write","value":"Error::Write(<SPI as spi::Write<u8>>::Error)","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" SPI error occured during a write transaction\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":42},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":5060,"byte_end":5065,"line_start":135,"line_end":135,"column_start":10,"column_end":15},"name":"Error","qualname":"::ll::Error","value":"Error::{Transfer, Write}","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":47}],"decl_id":null,"docs":" An SPI error that can occur when communicating with the DW1000\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":55},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":7072,"byte_end":7080,"line_start":203,"line_end":203,"column_start":11,"column_end":19},"name":"Register","qualname":"::ll::Register","value":"Register","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":" Implemented for all registers","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":56},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":7120,"byte_end":7122,"line_start":205,"line_end":205,"column_start":11,"column_end":13},"name":"ID","qualname":"::ll::Register::ID","value":"u8","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" The register index\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":57},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":7173,"byte_end":7179,"line_start":208,"line_end":208,"column_start":11,"column_end":17},"name":"SUB_ID","qualname":"::ll::Register::SUB_ID","value":"u16","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" The registers's sub-index\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":58},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":7232,"byte_end":7235,"line_start":211,"line_end":211,"column_start":11,"column_end":14},"name":"LEN","qualname":"::ll::Register::LEN","value":"usize","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" The lenght of the register\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":59},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":7504,"byte_end":7512,"line_start":219,"line_end":219,"column_start":11,"column_end":19},"name":"Readable","qualname":"::ll::Readable","value":"Readable","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" Marker trait for registers that can be read from","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":60},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":7580,"byte_end":7584,"line_start":221,"line_end":221,"column_start":10,"column_end":14},"name":"Read","qualname":"::ll::Readable::Read","value":"type Read;","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" The type that is used to read from the register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":7641,"byte_end":7645,"line_start":224,"line_end":224,"column_start":8,"column_end":12},"name":"read","qualname":"::ll::Readable::read","value":"fn () -> Self::Read","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Return the read type for this register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":7718,"byte_end":7724,"line_start":227,"line_end":227,"column_start":8,"column_end":14},"name":"buffer","qualname":"::ll::Readable::buffer","value":"fn (r: &mut Self::Read) -> &mut [u8]","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Return the read type's internal buffer\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":63},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8020,"byte_end":8028,"line_start":235,"line_end":235,"column_start":11,"column_end":19},"name":"Writable","qualname":"::ll::Writable","value":"Writable","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"decl_id":null,"docs":" Marker trait for registers that can be written to","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":64},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8095,"byte_end":8100,"line_start":237,"line_end":237,"column_start":10,"column_end":15},"name":"Write","qualname":"::ll::Writable::Write","value":"type Write;","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" The type that is used to write to the register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8158,"byte_end":8163,"line_start":240,"line_end":240,"column_start":8,"column_end":13},"name":"write","qualname":"::ll::Writable::write","value":"fn () -> Self::Write","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Return the write type for this register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8238,"byte_end":8244,"line_start":243,"line_end":243,"column_start":8,"column_end":14},"name":"buffer","qualname":"::ll::Writable::buffer","value":"fn (w: &mut Self::Write) -> &mut [u8]","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Return the write type's internal buffer\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23454,"byte_end":23460,"line_start":598,"line_end":598,"column_start":24,"column_end":30},"name":"DEV_ID","qualname":"::ll::DEV_ID","value":"","parent":null,"children":[],"decl_id":null,"docs":" Device identifier\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":394},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23461,"byte_end":23467,"line_start":598,"line_end":598,"column_start":31,"column_end":37},"name":"dev_id","qualname":"::ll::dev_id","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":401},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":456}],"decl_id":null,"docs":" Device identifier\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23501,"byte_end":23504,"line_start":599,"line_end":599,"column_start":9,"column_end":12},"name":"rev","qualname":"<R>::rev","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Revision\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23543,"byte_end":23546,"line_start":600,"line_end":600,"column_start":9,"column_end":12},"name":"ver","qualname":"<R>::ver","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Version\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23584,"byte_end":23589,"line_start":601,"line_end":601,"column_start":9,"column_end":14},"name":"model","qualname":"<R>::model","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Model\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23623,"byte_end":23629,"line_start":602,"line_end":602,"column_start":9,"column_end":15},"name":"ridtag","qualname":"<R>::ridtag","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Register Identification Tag\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23501,"byte_end":23504,"line_start":599,"line_end":599,"column_start":9,"column_end":12},"name":"rev","qualname":"<W>::rev","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Revision\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23543,"byte_end":23546,"line_start":600,"line_end":600,"column_start":9,"column_end":12},"name":"ver","qualname":"<W>::ver","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Version\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23584,"byte_end":23589,"line_start":601,"line_end":601,"column_start":9,"column_end":14},"name":"model","qualname":"<W>::model","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Model\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23623,"byte_end":23629,"line_start":602,"line_end":602,"column_start":9,"column_end":15},"name":"ridtag","qualname":"<W>::ridtag","value":"fn (&mut self, value: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Register Identification Tag\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":481},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23705,"byte_end":23708,"line_start":604,"line_end":604,"column_start":24,"column_end":27},"name":"EUI","qualname":"::ll::EUI","value":"","parent":null,"children":[],"decl_id":null,"docs":" Extended Unique Identifier\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":491},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23709,"byte_end":23712,"line_start":604,"line_end":604,"column_start":28,"column_end":31},"name":"eui","qualname":"::ll::eui","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":498},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":517}],"decl_id":null,"docs":" Extended Unique Identifier\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23755,"byte_end":23760,"line_start":605,"line_end":605,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Extended Unique Identifier\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23755,"byte_end":23760,"line_start":605,"line_end":605,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Extended Unique Identifier\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":524},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23834,"byte_end":23840,"line_start":607,"line_end":607,"column_start":24,"column_end":30},"name":"PANADR","qualname":"::ll::PANADR","value":"","parent":null,"children":[],"decl_id":null,"docs":" PAN Identifier and Short Address\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":534},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23841,"byte_end":23847,"line_start":607,"line_end":607,"column_start":31,"column_end":37},"name":"panadr","qualname":"::ll::panadr","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":541},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":572}],"decl_id":null,"docs":" PAN Identifier and Short Address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23896,"byte_end":23906,"line_start":608,"line_end":608,"column_start":9,"column_end":19},"name":"short_addr","qualname":"<R>::short_addr","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Short Address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23947,"byte_end":23953,"line_start":609,"line_end":609,"column_start":9,"column_end":15},"name":"pan_id","qualname":"<R>::pan_id","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" PAN Identifier\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23896,"byte_end":23906,"line_start":608,"line_end":608,"column_start":9,"column_end":19},"name":"short_addr","qualname":"<W>::short_addr","value":"fn (&mut self, value: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Short Address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23947,"byte_end":23953,"line_start":609,"line_end":609,"column_start":9,"column_end":15},"name":"pan_id","qualname":"<W>::pan_id","value":"fn (&mut self, value: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" PAN Identifier\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":585},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24020,"byte_end":24027,"line_start":611,"line_end":611,"column_start":24,"column_end":31},"name":"SYS_CFG","qualname":"::ll::SYS_CFG","value":"","parent":null,"children":[],"decl_id":null,"docs":" System Configuration\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":595},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24028,"byte_end":24035,"line_start":611,"line_end":611,"column_start":32,"column_end":39},"name":"sys_cfg","qualname":"::ll::sys_cfg","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":602},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":885}],"decl_id":null,"docs":" System Configuration\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24072,"byte_end":24076,"line_start":612,"line_end":612,"column_start":9,"column_end":13},"name":"ffen","qualname":"<R>::ffen","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24131,"byte_end":24135,"line_start":613,"line_end":613,"column_start":9,"column_end":13},"name":"ffbc","qualname":"<R>::ffbc","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Behave As Coordinator\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24205,"byte_end":24209,"line_start":614,"line_end":614,"column_start":9,"column_end":13},"name":"ffab","qualname":"<R>::ffab","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Allow Beacon\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24270,"byte_end":24274,"line_start":615,"line_end":615,"column_start":9,"column_end":13},"name":"ffad","qualname":"<R>::ffad","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Allow Data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24333,"byte_end":24337,"line_start":616,"line_end":616,"column_start":9,"column_end":13},"name":"ffaa","qualname":"<R>::ffaa","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Allow Acknowledgement\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24407,"byte_end":24411,"line_start":617,"line_end":617,"column_start":9,"column_end":13},"name":"ffam","qualname":"<R>::ffam","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Allow MAC Command Frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24483,"byte_end":24487,"line_start":618,"line_end":618,"column_start":9,"column_end":13},"name":"ffar","qualname":"<R>::ffar","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Allow Reserved\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24550,"byte_end":24554,"line_start":619,"line_end":619,"column_start":9,"column_end":13},"name":"ffa4","qualname":"<R>::ffa4","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Allow Frame Type 4\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24621,"byte_end":24625,"line_start":620,"line_end":620,"column_start":9,"column_end":13},"name":"ffa5","qualname":"<R>::ffa5","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Allow Frame Type 5\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24692,"byte_end":24700,"line_start":621,"line_end":621,"column_start":9,"column_end":17},"name":"hirq_pol","qualname":"<R>::hirq_pol","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Host Interrupt Polarity\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24752,"byte_end":24760,"line_start":622,"line_end":622,"column_start":9,"column_end":17},"name":"spi_edge","qualname":"<R>::spi_edge","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" SPI Data Launch Edge\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24809,"byte_end":24816,"line_start":623,"line_end":623,"column_start":9,"column_end":16},"name":"dis_fce","qualname":"<R>::dis_fce","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Disable Frame Check Error Handling\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24880,"byte_end":24888,"line_start":624,"line_end":624,"column_start":9,"column_end":17},"name":"dis_drxb","qualname":"<R>::dis_drxb","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Disable Double RX Buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24941,"byte_end":24948,"line_start":625,"line_end":625,"column_start":9,"column_end":16},"name":"dis_phe","qualname":"<R>::dis_phe","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Disable Receiver Abort on PHR Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25013,"byte_end":25021,"line_start":626,"line_end":626,"column_start":9,"column_end":17},"name":"dis_rsde","qualname":"<R>::dis_rsde","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Disable Receiver Abort on RSD Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25085,"byte_end":25095,"line_start":627,"line_end":627,"column_start":9,"column_end":19},"name":"fcs_init2f","qualname":"<R>::fcs_init2f","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" FCS Seed Selection\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25140,"byte_end":25148,"line_start":628,"line_end":628,"column_start":9,"column_end":17},"name":"phr_mode","qualname":"<R>::phr_mode","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" PHR Mode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25185,"byte_end":25193,"line_start":629,"line_end":629,"column_start":9,"column_end":17},"name":"dis_stxp","qualname":"<R>::dis_stxp","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Disable Smart TX Power Control\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25252,"byte_end":25259,"line_start":630,"line_end":630,"column_start":9,"column_end":16},"name":"rxm110k","qualname":"<R>::rxm110k","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Receiver Mode 110kpbs Data Rate\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25320,"byte_end":25326,"line_start":631,"line_end":631,"column_start":9,"column_end":15},"name":"rxwtoe","qualname":"<R>::rxwtoe","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Receiver Wait Timeout Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25385,"byte_end":25391,"line_start":632,"line_end":632,"column_start":9,"column_end":15},"name":"rxautr","qualname":"<R>::rxautr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Receiver Auto-Re-Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25445,"byte_end":25452,"line_start":633,"line_end":633,"column_start":9,"column_end":16},"name":"autoack","qualname":"<R>::autoack","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Automatic Acknowledgement Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25514,"byte_end":25522,"line_start":634,"line_end":634,"column_start":9,"column_end":17},"name":"aackpend","qualname":"<R>::aackpend","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Automatic Acknowledgement Pending\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24072,"byte_end":24076,"line_start":612,"line_end":612,"column_start":9,"column_end":13},"name":"ffen","qualname":"<W>::ffen","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24131,"byte_end":24135,"line_start":613,"line_end":613,"column_start":9,"column_end":13},"name":"ffbc","qualname":"<W>::ffbc","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Behave As Coordinator\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24205,"byte_end":24209,"line_start":614,"line_end":614,"column_start":9,"column_end":13},"name":"ffab","qualname":"<W>::ffab","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Allow Beacon\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24270,"byte_end":24274,"line_start":615,"line_end":615,"column_start":9,"column_end":13},"name":"ffad","qualname":"<W>::ffad","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Allow Data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24333,"byte_end":24337,"line_start":616,"line_end":616,"column_start":9,"column_end":13},"name":"ffaa","qualname":"<W>::ffaa","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Allow Acknowledgement\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24407,"byte_end":24411,"line_start":617,"line_end":617,"column_start":9,"column_end":13},"name":"ffam","qualname":"<W>::ffam","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Allow MAC Command Frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24483,"byte_end":24487,"line_start":618,"line_end":618,"column_start":9,"column_end":13},"name":"ffar","qualname":"<W>::ffar","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Allow Reserved\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24550,"byte_end":24554,"line_start":619,"line_end":619,"column_start":9,"column_end":13},"name":"ffa4","qualname":"<W>::ffa4","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Allow Frame Type 4\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24621,"byte_end":24625,"line_start":620,"line_end":620,"column_start":9,"column_end":13},"name":"ffa5","qualname":"<W>::ffa5","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Frame Filtering Allow Frame Type 5\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24692,"byte_end":24700,"line_start":621,"line_end":621,"column_start":9,"column_end":17},"name":"hirq_pol","qualname":"<W>::hirq_pol","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Host Interrupt Polarity\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24752,"byte_end":24760,"line_start":622,"line_end":622,"column_start":9,"column_end":17},"name":"spi_edge","qualname":"<W>::spi_edge","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" SPI Data Launch Edge\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24809,"byte_end":24816,"line_start":623,"line_end":623,"column_start":9,"column_end":16},"name":"dis_fce","qualname":"<W>::dis_fce","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Disable Frame Check Error Handling\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24880,"byte_end":24888,"line_start":624,"line_end":624,"column_start":9,"column_end":17},"name":"dis_drxb","qualname":"<W>::dis_drxb","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Disable Double RX Buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24941,"byte_end":24948,"line_start":625,"line_end":625,"column_start":9,"column_end":16},"name":"dis_phe","qualname":"<W>::dis_phe","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Disable Receiver Abort on PHR Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25013,"byte_end":25021,"line_start":626,"line_end":626,"column_start":9,"column_end":17},"name":"dis_rsde","qualname":"<W>::dis_rsde","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Disable Receiver Abort on RSD Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25085,"byte_end":25095,"line_start":627,"line_end":627,"column_start":9,"column_end":19},"name":"fcs_init2f","qualname":"<W>::fcs_init2f","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" FCS Seed Selection\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25140,"byte_end":25148,"line_start":628,"line_end":628,"column_start":9,"column_end":17},"name":"phr_mode","qualname":"<W>::phr_mode","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" PHR Mode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25185,"byte_end":25193,"line_start":629,"line_end":629,"column_start":9,"column_end":17},"name":"dis_stxp","qualname":"<W>::dis_stxp","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Disable Smart TX Power Control\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25252,"byte_end":25259,"line_start":630,"line_end":630,"column_start":9,"column_end":16},"name":"rxm110k","qualname":"<W>::rxm110k","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Receiver Mode 110kpbs Data Rate\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25320,"byte_end":25326,"line_start":631,"line_end":631,"column_start":9,"column_end":15},"name":"rxwtoe","qualname":"<W>::rxwtoe","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Receiver Wait Timeout Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25385,"byte_end":25391,"line_start":632,"line_end":632,"column_start":9,"column_end":15},"name":"rxautr","qualname":"<W>::rxautr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Receiver Auto-Re-Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25445,"byte_end":25452,"line_start":633,"line_end":633,"column_start":9,"column_end":16},"name":"autoack","qualname":"<W>::autoack","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Automatic Acknowledgement Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25514,"byte_end":25522,"line_start":634,"line_end":634,"column_start":9,"column_end":17},"name":"aackpend","qualname":"<W>::aackpend","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Automatic Acknowledgement Pending\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1024},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25605,"byte_end":25613,"line_start":636,"line_end":636,"column_start":24,"column_end":32},"name":"SYS_TIME","qualname":"::ll::SYS_TIME","value":"","parent":null,"children":[],"decl_id":null,"docs":" System Time Counter\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":1034},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25614,"byte_end":25622,"line_start":636,"line_end":636,"column_start":33,"column_end":41},"name":"sys_time","qualname":"::ll::sys_time","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1041},{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1060}],"decl_id":null,"docs":" System Time Counter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25658,"byte_end":25663,"line_start":637,"line_end":637,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" System Time Counter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25658,"byte_end":25663,"line_start":637,"line_end":637,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" System Time Counter\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1067},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25730,"byte_end":25738,"line_start":639,"line_end":639,"column_start":24,"column_end":32},"name":"TX_FCTRL","qualname":"::ll::TX_FCTRL","value":"","parent":null,"children":[],"decl_id":null,"docs":" TX Frame Control\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":1077},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25739,"byte_end":25747,"line_start":639,"line_end":639,"column_start":33,"column_end":41},"name":"tx_fctrl","qualname":"::ll::tx_fctrl","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1084},{"krate":0,"index":1193},{"krate":0,"index":1195},{"krate":0,"index":1199}],"decl_id":null,"docs":" TX Frame Control\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25780,"byte_end":25785,"line_start":640,"line_end":640,"column_start":9,"column_end":14},"name":"tflen","qualname":"<R>::tflen","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" TX Frame Length\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25831,"byte_end":25835,"line_start":641,"line_end":641,"column_start":9,"column_end":13},"name":"tfle","qualname":"<R>::tfle","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" TX Frame Length Extension\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25892,"byte_end":25896,"line_start":642,"line_end":642,"column_start":9,"column_end":13},"name":"txbr","qualname":"<R>::txbr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" TX Bit Rate\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25939,"byte_end":25941,"line_start":643,"line_end":643,"column_start":9,"column_end":11},"name":"tr","qualname":"<R>::tr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" TX Ranging Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25992,"byte_end":25997,"line_start":644,"line_end":644,"column_start":9,"column_end":14},"name":"txprf","qualname":"<R>::txprf","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" TX Pulse Repetition Frequency\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26057,"byte_end":26062,"line_start":645,"line_end":645,"column_start":9,"column_end":14},"name":"txpsr","qualname":"<R>::txpsr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" TX Preamble Symbol Repetitions\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26123,"byte_end":26125,"line_start":646,"line_end":646,"column_start":9,"column_end":11},"name":"pe","qualname":"<R>::pe","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Preamble Extension\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26177,"byte_end":26184,"line_start":647,"line_end":647,"column_start":9,"column_end":16},"name":"txboffs","qualname":"<R>::txboffs","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" TX Buffer Index Offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26235,"byte_end":26243,"line_start":648,"line_end":648,"column_start":9,"column_end":17},"name":"ifsdelay","qualname":"<R>::ifsdelay","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Inter-Frame Spacing\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25780,"byte_end":25785,"line_start":640,"line_end":640,"column_start":9,"column_end":14},"name":"tflen","qualname":"<W>::tflen","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX Frame Length\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25831,"byte_end":25835,"line_start":641,"line_end":641,"column_start":9,"column_end":13},"name":"tfle","qualname":"<W>::tfle","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX Frame Length Extension\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25892,"byte_end":25896,"line_start":642,"line_end":642,"column_start":9,"column_end":13},"name":"txbr","qualname":"<W>::txbr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX Bit Rate\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25939,"byte_end":25941,"line_start":643,"line_end":643,"column_start":9,"column_end":11},"name":"tr","qualname":"<W>::tr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX Ranging Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25992,"byte_end":25997,"line_start":644,"line_end":644,"column_start":9,"column_end":14},"name":"txprf","qualname":"<W>::txprf","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX Pulse Repetition Frequency\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26057,"byte_end":26062,"line_start":645,"line_end":645,"column_start":9,"column_end":14},"name":"txpsr","qualname":"<W>::txpsr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX Preamble Symbol Repetitions\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26123,"byte_end":26125,"line_start":646,"line_end":646,"column_start":9,"column_end":11},"name":"pe","qualname":"<W>::pe","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Preamble Extension\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26177,"byte_end":26184,"line_start":647,"line_end":647,"column_start":9,"column_end":16},"name":"txboffs","qualname":"<W>::txboffs","value":"fn (&mut self, value: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX Buffer Index Offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26235,"byte_end":26243,"line_start":648,"line_end":648,"column_start":9,"column_end":17},"name":"ifsdelay","qualname":"<W>::ifsdelay","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Inter-Frame Spacing\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1254},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26311,"byte_end":26318,"line_start":650,"line_end":650,"column_start":24,"column_end":31},"name":"DX_TIME","qualname":"::ll::DX_TIME","value":"","parent":null,"children":[],"decl_id":null,"docs":" Delayed Send or Receive Time\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":1264},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26319,"byte_end":26326,"line_start":650,"line_end":650,"column_start":32,"column_end":39},"name":"dx_time","qualname":"::ll::dx_time","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1271},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1290}],"decl_id":null,"docs":" Delayed Send or Receive Time\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26371,"byte_end":26376,"line_start":651,"line_end":651,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Delayed Send or Receive Time\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26371,"byte_end":26376,"line_start":651,"line_end":651,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delayed Send or Receive Time\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1297},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26452,"byte_end":26460,"line_start":653,"line_end":653,"column_start":24,"column_end":32},"name":"SYS_CTRL","qualname":"::ll::SYS_CTRL","value":"","parent":null,"children":[],"decl_id":null,"docs":" System Control Register\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":1307},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26461,"byte_end":26469,"line_start":653,"line_end":653,"column_start":33,"column_end":41},"name":"sys_ctrl","qualname":"::ll::sys_ctrl","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1314},{"krate":0,"index":1423},{"krate":0,"index":1425},{"krate":0,"index":1429}],"decl_id":null,"docs":" System Control Register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26509,"byte_end":26514,"line_start":654,"line_end":654,"column_start":9,"column_end":14},"name":"sfcst","qualname":"<R>::sfcst","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Suppress Auto-FCS Transmission\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1327},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26575,"byte_end":26581,"line_start":655,"line_end":655,"column_start":9,"column_end":15},"name":"txstrt","qualname":"<R>::txstrt","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Transmit Start\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26625,"byte_end":26631,"line_start":656,"line_end":656,"column_start":9,"column_end":15},"name":"txdlys","qualname":"<R>::txdlys","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Transmitter Delayed Sending\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26688,"byte_end":26695,"line_start":657,"line_end":657,"column_start":9,"column_end":16},"name":"cansfcs","qualname":"<R>::cansfcs","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Cancel Auto-FCS Suppression\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26751,"byte_end":26757,"line_start":658,"line_end":658,"column_start":9,"column_end":15},"name":"trxoff","qualname":"<R>::trxoff","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Transceiver Off\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26802,"byte_end":26811,"line_start":659,"line_end":659,"column_start":9,"column_end":18},"name":"wait4resp","qualname":"<R>::wait4resp","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Wait for Response\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26855,"byte_end":26861,"line_start":660,"line_end":660,"column_start":9,"column_end":15},"name":"rxenab","qualname":"<R>::rxenab","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Enable Receiver\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26906,"byte_end":26912,"line_start":661,"line_end":661,"column_start":9,"column_end":15},"name":"rxdlye","qualname":"<R>::rxdlye","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Receiver Delayed Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26965,"byte_end":26970,"line_start":662,"line_end":662,"column_start":9,"column_end":14},"name":"hrbpt","qualname":"<R>::hrbpt","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Host Side RX Buffer Pointer Toggle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26509,"byte_end":26514,"line_start":654,"line_end":654,"column_start":9,"column_end":14},"name":"sfcst","qualname":"<W>::sfcst","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Suppress Auto-FCS Transmission\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26575,"byte_end":26581,"line_start":655,"line_end":655,"column_start":9,"column_end":15},"name":"txstrt","qualname":"<W>::txstrt","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Transmit Start\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26625,"byte_end":26631,"line_start":656,"line_end":656,"column_start":9,"column_end":15},"name":"txdlys","qualname":"<W>::txdlys","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Transmitter Delayed Sending\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26688,"byte_end":26695,"line_start":657,"line_end":657,"column_start":9,"column_end":16},"name":"cansfcs","qualname":"<W>::cansfcs","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Cancel Auto-FCS Suppression\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26751,"byte_end":26757,"line_start":658,"line_end":658,"column_start":9,"column_end":15},"name":"trxoff","qualname":"<W>::trxoff","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Transceiver Off\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26802,"byte_end":26811,"line_start":659,"line_end":659,"column_start":9,"column_end":18},"name":"wait4resp","qualname":"<W>::wait4resp","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Wait for Response\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26855,"byte_end":26861,"line_start":660,"line_end":660,"column_start":9,"column_end":15},"name":"rxenab","qualname":"<W>::rxenab","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable Receiver\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26906,"byte_end":26912,"line_start":661,"line_end":661,"column_start":9,"column_end":15},"name":"rxdlye","qualname":"<W>::rxdlye","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Receiver Delayed Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26965,"byte_end":26970,"line_start":662,"line_end":662,"column_start":9,"column_end":14},"name":"hrbpt","qualname":"<W>::hrbpt","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Host Side RX Buffer Pointer Toggle\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1484},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27056,"byte_end":27064,"line_start":664,"line_end":664,"column_start":24,"column_end":32},"name":"SYS_MASK","qualname":"::ll::SYS_MASK","value":"","parent":null,"children":[],"decl_id":null,"docs":" System Event Mask Register\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":1494},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27065,"byte_end":27073,"line_start":664,"line_end":664,"column_start":33,"column_end":41},"name":"sys_mask","qualname":"::ll::sys_mask","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1501},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1844}],"decl_id":null,"docs":" System Event Mask Register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27116,"byte_end":27123,"line_start":665,"line_end":665,"column_start":9,"column_end":16},"name":"mpclock","qualname":"<R>::mpclock","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask clock PLL lock\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27171,"byte_end":27178,"line_start":666,"line_end":666,"column_start":9,"column_end":16},"name":"mesyncr","qualname":"<R>::mesyncr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask external sync clock reset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27237,"byte_end":27241,"line_start":667,"line_end":667,"column_start":9,"column_end":13},"name":"maat","qualname":"<R>::maat","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask automatic acknowledge trigger\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27307,"byte_end":27314,"line_start":668,"line_end":668,"column_start":9,"column_end":16},"name":"mtxfrbm","qualname":"<R>::mtxfrbm","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask transmit frame begins\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27369,"byte_end":27375,"line_start":669,"line_end":669,"column_start":9,"column_end":15},"name":"mtxprs","qualname":"<R>::mtxprs","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask transmit preamble sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27432,"byte_end":27438,"line_start":670,"line_end":670,"column_start":9,"column_end":15},"name":"mtxphs","qualname":"<R>::mtxphs","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask transmit PHY Header Sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27497,"byte_end":27503,"line_start":671,"line_end":671,"column_start":9,"column_end":15},"name":"mtxfrs","qualname":"<R>::mtxfrs","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask transmit frame sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27557,"byte_end":27563,"line_start":672,"line_end":672,"column_start":9,"column_end":15},"name":"mrxprd","qualname":"<R>::mrxprd","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver preamble detected\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27624,"byte_end":27631,"line_start":673,"line_end":673,"column_start":9,"column_end":16},"name":"mrxsfdd","qualname":"<R>::mrxsfdd","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver SFD detected\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27686,"byte_end":27694,"line_start":674,"line_end":674,"column_start":9,"column_end":17},"name":"mldedone","qualname":"<R>::mldedone","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask LDE processing done\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27746,"byte_end":27752,"line_start":675,"line_end":675,"column_start":9,"column_end":15},"name":"mrxphd","qualname":"<R>::mrxphd","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver PHY header detect\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27813,"byte_end":27819,"line_start":676,"line_end":676,"column_start":9,"column_end":15},"name":"mrxphe","qualname":"<R>::mrxphe","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver PHY header error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27879,"byte_end":27885,"line_start":677,"line_end":677,"column_start":9,"column_end":15},"name":"mrxdfr","qualname":"<R>::mrxdfr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver data frame ready\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27945,"byte_end":27951,"line_start":678,"line_end":678,"column_start":9,"column_end":15},"name":"mrxfcg","qualname":"<R>::mrxfcg","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver FCS good\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28003,"byte_end":28009,"line_start":679,"line_end":679,"column_start":9,"column_end":15},"name":"mrxfce","qualname":"<R>::mrxfce","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver FCS error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28062,"byte_end":28069,"line_start":680,"line_end":680,"column_start":9,"column_end":16},"name":"mrxrfsl","qualname":"<R>::mrxrfsl","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver Reed Solomon Frame Sync loss\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28140,"byte_end":28147,"line_start":681,"line_end":681,"column_start":9,"column_end":16},"name":"mrxrfto","qualname":"<R>::mrxrfto","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask Receive Frame Wait Timeout\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28207,"byte_end":28214,"line_start":682,"line_end":682,"column_start":9,"column_end":16},"name":"mldeerr","qualname":"<R>::mldeerr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask leading edge detection processing error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28287,"byte_end":28294,"line_start":683,"line_end":683,"column_start":9,"column_end":16},"name":"mrxovrr","qualname":"<R>::mrxovrr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask Receiver Overrun\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28344,"byte_end":28350,"line_start":684,"line_end":684,"column_start":9,"column_end":15},"name":"mrxpto","qualname":"<R>::mrxpto","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask Preamble detection timeout\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28411,"byte_end":28419,"line_start":685,"line_end":685,"column_start":9,"column_end":17},"name":"mgpioirq","qualname":"<R>::mgpioirq","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask GPIO interrupt\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28466,"byte_end":28475,"line_start":686,"line_end":686,"column_start":9,"column_end":18},"name":"mslp2init","qualname":"<R>::mslp2init","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask SLEEP to INIT event\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28526,"byte_end":28534,"line_start":687,"line_end":687,"column_start":9,"column_end":17},"name":"mrfpllll","qualname":"<R>::mrfpllll","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask RF PLL Losing Lock warning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28593,"byte_end":28600,"line_start":688,"line_end":688,"column_start":9,"column_end":16},"name":"mcpllll","qualname":"<R>::mcpllll","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask Clock PLL Losing Lock warning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28663,"byte_end":28671,"line_start":689,"line_end":689,"column_start":9,"column_end":17},"name":"mrxsfdto","qualname":"<R>::mrxsfdto","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask Receive SFD timeout\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28723,"byte_end":28731,"line_start":690,"line_end":690,"column_start":9,"column_end":17},"name":"mhpdwarn","qualname":"<R>::mhpdwarn","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask Half Period Delay Warning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28789,"byte_end":28796,"line_start":691,"line_end":691,"column_start":9,"column_end":16},"name":"mtxberr","qualname":"<R>::mtxberr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask Transmit Buffer Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28851,"byte_end":28858,"line_start":692,"line_end":692,"column_start":9,"column_end":16},"name":"maffrej","qualname":"<R>::maffrej","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Mask Automatic Frame Filtering rejection\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27116,"byte_end":27123,"line_start":665,"line_end":665,"column_start":9,"column_end":16},"name":"mpclock","qualname":"<W>::mpclock","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask clock PLL lock\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1851},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27171,"byte_end":27178,"line_start":666,"line_end":666,"column_start":9,"column_end":16},"name":"mesyncr","qualname":"<W>::mesyncr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask external sync clock reset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27237,"byte_end":27241,"line_start":667,"line_end":667,"column_start":9,"column_end":13},"name":"maat","qualname":"<W>::maat","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask automatic acknowledge trigger\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27307,"byte_end":27314,"line_start":668,"line_end":668,"column_start":9,"column_end":16},"name":"mtxfrbm","qualname":"<W>::mtxfrbm","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask transmit frame begins\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27369,"byte_end":27375,"line_start":669,"line_end":669,"column_start":9,"column_end":15},"name":"mtxprs","qualname":"<W>::mtxprs","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask transmit preamble sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27432,"byte_end":27438,"line_start":670,"line_end":670,"column_start":9,"column_end":15},"name":"mtxphs","qualname":"<W>::mtxphs","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask transmit PHY Header Sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27497,"byte_end":27503,"line_start":671,"line_end":671,"column_start":9,"column_end":15},"name":"mtxfrs","qualname":"<W>::mtxfrs","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask transmit frame sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27557,"byte_end":27563,"line_start":672,"line_end":672,"column_start":9,"column_end":15},"name":"mrxprd","qualname":"<W>::mrxprd","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver preamble detected\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27624,"byte_end":27631,"line_start":673,"line_end":673,"column_start":9,"column_end":16},"name":"mrxsfdd","qualname":"<W>::mrxsfdd","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver SFD detected\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27686,"byte_end":27694,"line_start":674,"line_end":674,"column_start":9,"column_end":17},"name":"mldedone","qualname":"<W>::mldedone","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask LDE processing done\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27746,"byte_end":27752,"line_start":675,"line_end":675,"column_start":9,"column_end":15},"name":"mrxphd","qualname":"<W>::mrxphd","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver PHY header detect\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1911},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27813,"byte_end":27819,"line_start":676,"line_end":676,"column_start":9,"column_end":15},"name":"mrxphe","qualname":"<W>::mrxphe","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver PHY header error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27879,"byte_end":27885,"line_start":677,"line_end":677,"column_start":9,"column_end":15},"name":"mrxdfr","qualname":"<W>::mrxdfr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver data frame ready\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27945,"byte_end":27951,"line_start":678,"line_end":678,"column_start":9,"column_end":15},"name":"mrxfcg","qualname":"<W>::mrxfcg","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver FCS good\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28003,"byte_end":28009,"line_start":679,"line_end":679,"column_start":9,"column_end":15},"name":"mrxfce","qualname":"<W>::mrxfce","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver FCS error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28062,"byte_end":28069,"line_start":680,"line_end":680,"column_start":9,"column_end":16},"name":"mrxrfsl","qualname":"<W>::mrxrfsl","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask receiver Reed Solomon Frame Sync loss\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1941},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28140,"byte_end":28147,"line_start":681,"line_end":681,"column_start":9,"column_end":16},"name":"mrxrfto","qualname":"<W>::mrxrfto","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask Receive Frame Wait Timeout\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1947},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28207,"byte_end":28214,"line_start":682,"line_end":682,"column_start":9,"column_end":16},"name":"mldeerr","qualname":"<W>::mldeerr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask leading edge detection processing error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28287,"byte_end":28294,"line_start":683,"line_end":683,"column_start":9,"column_end":16},"name":"mrxovrr","qualname":"<W>::mrxovrr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask Receiver Overrun\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1959},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28344,"byte_end":28350,"line_start":684,"line_end":684,"column_start":9,"column_end":15},"name":"mrxpto","qualname":"<W>::mrxpto","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask Preamble detection timeout\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1965},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28411,"byte_end":28419,"line_start":685,"line_end":685,"column_start":9,"column_end":17},"name":"mgpioirq","qualname":"<W>::mgpioirq","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask GPIO interrupt\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1971},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28466,"byte_end":28475,"line_start":686,"line_end":686,"column_start":9,"column_end":18},"name":"mslp2init","qualname":"<W>::mslp2init","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask SLEEP to INIT event\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28526,"byte_end":28534,"line_start":687,"line_end":687,"column_start":9,"column_end":17},"name":"mrfpllll","qualname":"<W>::mrfpllll","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask RF PLL Losing Lock warning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1983},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28593,"byte_end":28600,"line_start":688,"line_end":688,"column_start":9,"column_end":16},"name":"mcpllll","qualname":"<W>::mcpllll","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask Clock PLL Losing Lock warning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28663,"byte_end":28671,"line_start":689,"line_end":689,"column_start":9,"column_end":17},"name":"mrxsfdto","qualname":"<W>::mrxsfdto","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask Receive SFD timeout\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28723,"byte_end":28731,"line_start":690,"line_end":690,"column_start":9,"column_end":17},"name":"mhpdwarn","qualname":"<W>::mhpdwarn","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask Half Period Delay Warning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28789,"byte_end":28796,"line_start":691,"line_end":691,"column_start":9,"column_end":16},"name":"mtxberr","qualname":"<W>::mtxberr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask Transmit Buffer Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28851,"byte_end":28858,"line_start":692,"line_end":692,"column_start":9,"column_end":16},"name":"maffrej","qualname":"<W>::maffrej","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Mask Automatic Frame Filtering rejection\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2013},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28948,"byte_end":28958,"line_start":694,"line_end":694,"column_start":24,"column_end":34},"name":"SYS_STATUS","qualname":"::ll::SYS_STATUS","value":"","parent":null,"children":[],"decl_id":null,"docs":" System Event Status Register\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":2023},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28959,"byte_end":28969,"line_start":694,"line_end":694,"column_start":35,"column_end":45},"name":"sys_status","qualname":"::ll::sys_status","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2030},{"krate":0,"index":2439},{"krate":0,"index":2441},{"krate":0,"index":2445}],"decl_id":null,"docs":" System Event Status Register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29014,"byte_end":29018,"line_start":695,"line_end":695,"column_start":9,"column_end":13},"name":"irqs","qualname":"<R>::irqs","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Interrupt Request Status\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29074,"byte_end":29080,"line_start":696,"line_end":696,"column_start":9,"column_end":15},"name":"cplock","qualname":"<R>::cplock","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Clock PLL Lock\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29124,"byte_end":29130,"line_start":697,"line_end":697,"column_start":9,"column_end":15},"name":"esyncr","qualname":"<R>::esyncr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" External Sync Clock Reset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29185,"byte_end":29188,"line_start":698,"line_end":698,"column_start":9,"column_end":12},"name":"aat","qualname":"<R>::aat","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Automatic Acknowledge Trigger\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29250,"byte_end":29255,"line_start":699,"line_end":699,"column_start":9,"column_end":14},"name":"txfrb","qualname":"<R>::txfrb","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" TX Frame Begins\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29301,"byte_end":29306,"line_start":700,"line_end":700,"column_start":9,"column_end":14},"name":"txprs","qualname":"<R>::txprs","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" TX Preamble Sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29353,"byte_end":29358,"line_start":701,"line_end":701,"column_start":9,"column_end":14},"name":"txphs","qualname":"<R>::txphs","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" TX PHY Header Sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29407,"byte_end":29412,"line_start":702,"line_end":702,"column_start":9,"column_end":14},"name":"txfrs","qualname":"<R>::txfrs","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" TX Frame Sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29456,"byte_end":29461,"line_start":703,"line_end":703,"column_start":9,"column_end":14},"name":"rxprd","qualname":"<R>::rxprd","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" RX Preamble Detected\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2139},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29512,"byte_end":29518,"line_start":704,"line_end":704,"column_start":9,"column_end":15},"name":"rxsfdd","qualname":"<R>::rxsfdd","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" RX SFD Detected\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29563,"byte_end":29570,"line_start":705,"line_end":705,"column_start":9,"column_end":16},"name":"ldedone","qualname":"<R>::ldedone","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" LDE Processing Done\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29618,"byte_end":29623,"line_start":706,"line_end":706,"column_start":9,"column_end":14},"name":"rxphd","qualname":"<R>::rxphd","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" RX PHY Header Detect\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2175},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29674,"byte_end":29679,"line_start":707,"line_end":707,"column_start":9,"column_end":14},"name":"rxphe","qualname":"<R>::rxphe","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" RX PHY Header Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29729,"byte_end":29734,"line_start":708,"line_end":708,"column_start":9,"column_end":14},"name":"rxdfr","qualname":"<R>::rxdfr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" RX Data Frame Ready\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29784,"byte_end":29789,"line_start":709,"line_end":709,"column_start":9,"column_end":14},"name":"rxfcg","qualname":"<R>::rxfcg","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" RX FCS Good\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29831,"byte_end":29836,"line_start":710,"line_end":710,"column_start":9,"column_end":14},"name":"rxfce","qualname":"<R>::rxfce","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" RX FCS Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29879,"byte_end":29885,"line_start":711,"line_end":711,"column_start":9,"column_end":15},"name":"rxrfsl","qualname":"<R>::rxrfsl","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" RX Reed-Solomon Frame Sync Loss\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29946,"byte_end":29952,"line_start":712,"line_end":712,"column_start":9,"column_end":15},"name":"rxrfto","qualname":"<R>::rxrfto","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" RX Frame Wait Timeout\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30003,"byte_end":30009,"line_start":713,"line_end":713,"column_start":9,"column_end":15},"name":"ldeerr","qualname":"<R>::ldeerr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Leading Edge Detection Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2259},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30067,"byte_end":30073,"line_start":714,"line_end":714,"column_start":9,"column_end":15},"name":"rxovrr","qualname":"<R>::rxovrr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" RX Overrun\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30113,"byte_end":30118,"line_start":715,"line_end":715,"column_start":9,"column_end":14},"name":"rxpto","qualname":"<R>::rxpto","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Preamble Detection Timeout\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30175,"byte_end":30182,"line_start":716,"line_end":716,"column_start":9,"column_end":16},"name":"gpioirq","qualname":"<R>::gpioirq","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" GPIO Interrupt\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30225,"byte_end":30233,"line_start":717,"line_end":717,"column_start":9,"column_end":17},"name":"slp2init","qualname":"<R>::slp2init","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" SLEEP to INIT\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30274,"byte_end":30282,"line_start":718,"line_end":718,"column_start":9,"column_end":17},"name":"rfpll_ll","qualname":"<R>::rfpll_ll","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" RF PLL Losing Lock\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30328,"byte_end":30337,"line_start":719,"line_end":719,"column_start":9,"column_end":18},"name":"clkpll_ll","qualname":"<R>::clkpll_ll","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Clock PLL Losing Lock\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2331},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30385,"byte_end":30392,"line_start":720,"line_end":720,"column_start":9,"column_end":16},"name":"rxsfdto","qualname":"<R>::rxsfdto","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Receive SFD Timeout\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30440,"byte_end":30447,"line_start":721,"line_end":721,"column_start":9,"column_end":16},"name":"hpdwarn","qualname":"<R>::hpdwarn","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Half Period Delay Warning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2355},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30501,"byte_end":30507,"line_start":722,"line_end":722,"column_start":9,"column_end":15},"name":"txberr","qualname":"<R>::txberr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" TX Buffer Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30552,"byte_end":30558,"line_start":723,"line_end":723,"column_start":9,"column_end":15},"name":"affrej","qualname":"<R>::affrej","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Auto Frame Filtering Rejection\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2379},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30618,"byte_end":30623,"line_start":724,"line_end":724,"column_start":9,"column_end":14},"name":"hsrbp","qualname":"<R>::hsrbp","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Host Side RX Buffer Pointer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2391},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30681,"byte_end":30686,"line_start":725,"line_end":725,"column_start":9,"column_end":14},"name":"icrbp","qualname":"<R>::icrbp","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" IC Side RX Buffer Pointer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30742,"byte_end":30748,"line_start":726,"line_end":726,"column_start":9,"column_end":15},"name":"rxrscs","qualname":"<R>::rxrscs","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" RX Reed-Solomon Correction Status\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30811,"byte_end":30817,"line_start":727,"line_end":727,"column_start":9,"column_end":15},"name":"rxprej","qualname":"<R>::rxprej","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" RX Preamble Rejection\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30868,"byte_end":30874,"line_start":728,"line_end":728,"column_start":9,"column_end":15},"name":"txpute","qualname":"<R>::txpute","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" TX Power Up Time Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2446},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29014,"byte_end":29018,"line_start":695,"line_end":695,"column_start":9,"column_end":13},"name":"irqs","qualname":"<W>::irqs","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Interrupt Request Status\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2452},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29074,"byte_end":29080,"line_start":696,"line_end":696,"column_start":9,"column_end":15},"name":"cplock","qualname":"<W>::cplock","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Clock PLL Lock\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29124,"byte_end":29130,"line_start":697,"line_end":697,"column_start":9,"column_end":15},"name":"esyncr","qualname":"<W>::esyncr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" External Sync Clock Reset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29185,"byte_end":29188,"line_start":698,"line_end":698,"column_start":9,"column_end":12},"name":"aat","qualname":"<W>::aat","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Automatic Acknowledge Trigger\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29250,"byte_end":29255,"line_start":699,"line_end":699,"column_start":9,"column_end":14},"name":"txfrb","qualname":"<W>::txfrb","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX Frame Begins\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29301,"byte_end":29306,"line_start":700,"line_end":700,"column_start":9,"column_end":14},"name":"txprs","qualname":"<W>::txprs","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX Preamble Sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29353,"byte_end":29358,"line_start":701,"line_end":701,"column_start":9,"column_end":14},"name":"txphs","qualname":"<W>::txphs","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX PHY Header Sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29407,"byte_end":29412,"line_start":702,"line_end":702,"column_start":9,"column_end":14},"name":"txfrs","qualname":"<W>::txfrs","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX Frame Sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29456,"byte_end":29461,"line_start":703,"line_end":703,"column_start":9,"column_end":14},"name":"rxprd","qualname":"<W>::rxprd","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RX Preamble Detected\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29512,"byte_end":29518,"line_start":704,"line_end":704,"column_start":9,"column_end":15},"name":"rxsfdd","qualname":"<W>::rxsfdd","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RX SFD Detected\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29563,"byte_end":29570,"line_start":705,"line_end":705,"column_start":9,"column_end":16},"name":"ldedone","qualname":"<W>::ldedone","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" LDE Processing Done\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29618,"byte_end":29623,"line_start":706,"line_end":706,"column_start":9,"column_end":14},"name":"rxphd","qualname":"<W>::rxphd","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RX PHY Header Detect\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29674,"byte_end":29679,"line_start":707,"line_end":707,"column_start":9,"column_end":14},"name":"rxphe","qualname":"<W>::rxphe","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RX PHY Header Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29729,"byte_end":29734,"line_start":708,"line_end":708,"column_start":9,"column_end":14},"name":"rxdfr","qualname":"<W>::rxdfr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RX Data Frame Ready\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29784,"byte_end":29789,"line_start":709,"line_end":709,"column_start":9,"column_end":14},"name":"rxfcg","qualname":"<W>::rxfcg","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RX FCS Good\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29831,"byte_end":29836,"line_start":710,"line_end":710,"column_start":9,"column_end":14},"name":"rxfce","qualname":"<W>::rxfce","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RX FCS Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29879,"byte_end":29885,"line_start":711,"line_end":711,"column_start":9,"column_end":15},"name":"rxrfsl","qualname":"<W>::rxrfsl","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RX Reed-Solomon Frame Sync Loss\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":29946,"byte_end":29952,"line_start":712,"line_end":712,"column_start":9,"column_end":15},"name":"rxrfto","qualname":"<W>::rxrfto","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RX Frame Wait Timeout\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2554},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30003,"byte_end":30009,"line_start":713,"line_end":713,"column_start":9,"column_end":15},"name":"ldeerr","qualname":"<W>::ldeerr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Leading Edge Detection Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30067,"byte_end":30073,"line_start":714,"line_end":714,"column_start":9,"column_end":15},"name":"rxovrr","qualname":"<W>::rxovrr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RX Overrun\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30113,"byte_end":30118,"line_start":715,"line_end":715,"column_start":9,"column_end":14},"name":"rxpto","qualname":"<W>::rxpto","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Preamble Detection Timeout\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2572},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30175,"byte_end":30182,"line_start":716,"line_end":716,"column_start":9,"column_end":16},"name":"gpioirq","qualname":"<W>::gpioirq","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" GPIO Interrupt\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2578},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30225,"byte_end":30233,"line_start":717,"line_end":717,"column_start":9,"column_end":17},"name":"slp2init","qualname":"<W>::slp2init","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" SLEEP to INIT\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2584},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30274,"byte_end":30282,"line_start":718,"line_end":718,"column_start":9,"column_end":17},"name":"rfpll_ll","qualname":"<W>::rfpll_ll","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RF PLL Losing Lock\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30328,"byte_end":30337,"line_start":719,"line_end":719,"column_start":9,"column_end":18},"name":"clkpll_ll","qualname":"<W>::clkpll_ll","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Clock PLL Losing Lock\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30385,"byte_end":30392,"line_start":720,"line_end":720,"column_start":9,"column_end":16},"name":"rxsfdto","qualname":"<W>::rxsfdto","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Receive SFD Timeout\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30440,"byte_end":30447,"line_start":721,"line_end":721,"column_start":9,"column_end":16},"name":"hpdwarn","qualname":"<W>::hpdwarn","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Half Period Delay Warning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30501,"byte_end":30507,"line_start":722,"line_end":722,"column_start":9,"column_end":15},"name":"txberr","qualname":"<W>::txberr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX Buffer Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2614},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30552,"byte_end":30558,"line_start":723,"line_end":723,"column_start":9,"column_end":15},"name":"affrej","qualname":"<W>::affrej","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Auto Frame Filtering Rejection\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30618,"byte_end":30623,"line_start":724,"line_end":724,"column_start":9,"column_end":14},"name":"hsrbp","qualname":"<W>::hsrbp","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Host Side RX Buffer Pointer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2626},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30681,"byte_end":30686,"line_start":725,"line_end":725,"column_start":9,"column_end":14},"name":"icrbp","qualname":"<W>::icrbp","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" IC Side RX Buffer Pointer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30742,"byte_end":30748,"line_start":726,"line_end":726,"column_start":9,"column_end":15},"name":"rxrscs","qualname":"<W>::rxrscs","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RX Reed-Solomon Correction Status\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30811,"byte_end":30817,"line_start":727,"line_end":727,"column_start":9,"column_end":15},"name":"rxprej","qualname":"<W>::rxprej","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RX Preamble Rejection\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30868,"byte_end":30874,"line_start":728,"line_end":728,"column_start":9,"column_end":15},"name":"txpute","qualname":"<W>::txpute","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX Power Up Time Error\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2650},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30947,"byte_end":30955,"line_start":730,"line_end":730,"column_start":24,"column_end":32},"name":"RX_FINFO","qualname":"::ll::RX_FINFO","value":"","parent":null,"children":[],"decl_id":null,"docs":" RX Frame Information\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":2660},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30956,"byte_end":30964,"line_start":730,"line_end":730,"column_start":33,"column_end":41},"name":"rx_finfo","qualname":"::ll::rx_finfo","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2667},{"krate":0,"index":2752},{"krate":0,"index":2754},{"krate":0,"index":2758}],"decl_id":null,"docs":" RX Frame Information\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31001,"byte_end":31007,"line_start":731,"line_end":731,"column_start":9,"column_end":15},"name":"rxflen","qualname":"<R>::rxflen","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Receive Frame Length\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31054,"byte_end":31059,"line_start":732,"line_end":732,"column_start":9,"column_end":14},"name":"rxfle","qualname":"<R>::rxfle","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Receive Frame Length Extension\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31117,"byte_end":31123,"line_start":733,"line_end":733,"column_start":9,"column_end":15},"name":"rxnspl","qualname":"<R>::rxnspl","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Receive Non-Standard Preamble Length\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31186,"byte_end":31190,"line_start":734,"line_end":734,"column_start":9,"column_end":13},"name":"rxbr","qualname":"<R>::rxbr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Receive Bit Rate Report\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31242,"byte_end":31245,"line_start":735,"line_end":735,"column_start":9,"column_end":12},"name":"rng","qualname":"<R>::rng","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Receiver Ranging\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31291,"byte_end":31297,"line_start":736,"line_end":736,"column_start":9,"column_end":15},"name":"rxprfr","qualname":"<R>::rxprfr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" RX Pulse Repetition Rate Report\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31355,"byte_end":31360,"line_start":737,"line_end":737,"column_start":9,"column_end":14},"name":"rxpsr","qualname":"<R>::rxpsr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" RX Preamble Repetition\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31001,"byte_end":31007,"line_start":731,"line_end":731,"column_start":9,"column_end":15},"name":"rxflen","qualname":"<W>::rxflen","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Receive Frame Length\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31054,"byte_end":31059,"line_start":732,"line_end":732,"column_start":9,"column_end":14},"name":"rxfle","qualname":"<W>::rxfle","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Receive Frame Length Extension\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31117,"byte_end":31123,"line_start":733,"line_end":733,"column_start":9,"column_end":15},"name":"rxnspl","qualname":"<W>::rxnspl","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Receive Non-Standard Preamble Length\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31186,"byte_end":31190,"line_start":734,"line_end":734,"column_start":9,"column_end":13},"name":"rxbr","qualname":"<W>::rxbr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Receive Bit Rate Report\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31242,"byte_end":31245,"line_start":735,"line_end":735,"column_start":9,"column_end":12},"name":"rng","qualname":"<W>::rng","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Receiver Ranging\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31291,"byte_end":31297,"line_start":736,"line_end":736,"column_start":9,"column_end":15},"name":"rxprfr","qualname":"<W>::rxprfr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RX Pulse Repetition Rate Report\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2795},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31355,"byte_end":31360,"line_start":737,"line_end":737,"column_start":9,"column_end":14},"name":"rxpsr","qualname":"<W>::rxpsr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RX Preamble Repetition\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2801},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31432,"byte_end":31439,"line_start":739,"line_end":739,"column_start":25,"column_end":32},"name":"RX_TIME","qualname":"::ll::RX_TIME","value":"","parent":null,"children":[],"decl_id":null,"docs":" Receive Time Stamp\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":2811},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31440,"byte_end":31447,"line_start":739,"line_end":739,"column_start":33,"column_end":40},"name":"rx_time","qualname":"::ll::rx_time","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2818},{"krate":0,"index":2867},{"krate":0,"index":2869},{"krate":0,"index":2873}],"decl_id":null,"docs":" Receive Time Stamp\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31482,"byte_end":31490,"line_start":740,"line_end":740,"column_start":9,"column_end":17},"name":"rx_stamp","qualname":"<R>::rx_stamp","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Fully adjusted time stamp\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31544,"byte_end":31552,"line_start":741,"line_end":741,"column_start":9,"column_end":17},"name":"fp_index","qualname":"<R>::fp_index","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" First Path Index\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31597,"byte_end":31605,"line_start":742,"line_end":742,"column_start":9,"column_end":17},"name":"fp_ampl1","qualname":"<R>::fp_ampl1","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" First Path Amplitude Point 1\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2855},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31662,"byte_end":31670,"line_start":743,"line_end":743,"column_start":9,"column_end":17},"name":"rx_rawst","qualname":"<R>::rx_rawst","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Raw time stamp\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31482,"byte_end":31490,"line_start":740,"line_end":740,"column_start":9,"column_end":17},"name":"rx_stamp","qualname":"<W>::rx_stamp","value":"fn (&mut self, value: u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Fully adjusted time stamp\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31544,"byte_end":31552,"line_start":741,"line_end":741,"column_start":9,"column_end":17},"name":"fp_index","qualname":"<W>::fp_index","value":"fn (&mut self, value: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" First Path Index\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2886},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31597,"byte_end":31605,"line_start":742,"line_end":742,"column_start":9,"column_end":17},"name":"fp_ampl1","qualname":"<W>::fp_ampl1","value":"fn (&mut self, value: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" First Path Amplitude Point 1\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2892},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31662,"byte_end":31670,"line_start":743,"line_end":743,"column_start":9,"column_end":17},"name":"rx_rawst","qualname":"<W>::rx_rawst","value":"fn (&mut self, value: u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Raw time stamp\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2898},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31735,"byte_end":31742,"line_start":745,"line_end":745,"column_start":25,"column_end":32},"name":"TX_TIME","qualname":"::ll::TX_TIME","value":"","parent":null,"children":[],"decl_id":null,"docs":" Transmit Time Stamp\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":2908},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31743,"byte_end":31750,"line_start":745,"line_end":745,"column_start":33,"column_end":40},"name":"tx_time","qualname":"::ll::tx_time","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2915},{"krate":0,"index":2940},{"krate":0,"index":2942},{"krate":0,"index":2946}],"decl_id":null,"docs":" Transmit Time Stamp\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31786,"byte_end":31794,"line_start":746,"line_end":746,"column_start":9,"column_end":17},"name":"tx_stamp","qualname":"<R>::tx_stamp","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Fully adjusted time stamp\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31847,"byte_end":31855,"line_start":747,"line_end":747,"column_start":9,"column_end":17},"name":"tx_rawst","qualname":"<R>::tx_rawst","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Raw time stamp\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2947},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31786,"byte_end":31794,"line_start":746,"line_end":746,"column_start":9,"column_end":17},"name":"tx_stamp","qualname":"<W>::tx_stamp","value":"fn (&mut self, value: u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Fully adjusted time stamp\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31847,"byte_end":31855,"line_start":747,"line_end":747,"column_start":9,"column_end":17},"name":"tx_rawst","qualname":"<W>::tx_rawst","value":"fn (&mut self, value: u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Raw time stamp\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2959},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31918,"byte_end":31925,"line_start":749,"line_end":749,"column_start":24,"column_end":31},"name":"TX_ANTD","qualname":"::ll::TX_ANTD","value":"","parent":null,"children":[],"decl_id":null,"docs":" TX Antenna Delay\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":2969},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31926,"byte_end":31933,"line_start":749,"line_end":749,"column_start":32,"column_end":39},"name":"tx_antd","qualname":"::ll::tx_antd","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":2970},{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2976},{"krate":0,"index":2989},{"krate":0,"index":2991},{"krate":0,"index":2995}],"decl_id":null,"docs":" TX Antenna Delay\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2977},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31966,"byte_end":31971,"line_start":750,"line_end":750,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" TX Antenna Delay\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2996},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31966,"byte_end":31971,"line_start":750,"line_end":750,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX Antenna Delay\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3002},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32035,"byte_end":32044,"line_start":752,"line_end":752,"column_start":24,"column_end":33},"name":"SYS_STATE","qualname":"::ll::SYS_STATE","value":"","parent":null,"children":[],"decl_id":null,"docs":" System State information\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3012},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32045,"byte_end":32054,"line_start":752,"line_end":752,"column_start":34,"column_end":43},"name":"sys_state","qualname":"::ll::sys_state","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3022},{"krate":0,"index":3026}],"decl_id":null,"docs":" System State information\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3027},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32374,"byte_end":32382,"line_start":758,"line_end":758,"column_start":24,"column_end":32},"name":"TX_POWER","qualname":"::ll::TX_POWER","value":"","parent":null,"children":[],"decl_id":null,"docs":" TX Power Control\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3037},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32383,"byte_end":32391,"line_start":758,"line_end":758,"column_start":33,"column_end":41},"name":"tx_power","qualname":"::ll::tx_power","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3044},{"krate":0,"index":3057},{"krate":0,"index":3059},{"krate":0,"index":3063}],"decl_id":null,"docs":" TX Power Control\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3045},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32686,"byte_end":32691,"line_start":763,"line_end":763,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" TX Power Control value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3064},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32686,"byte_end":32691,"line_start":763,"line_end":763,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX Power Control value\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3070},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32761,"byte_end":32770,"line_start":765,"line_end":765,"column_start":24,"column_end":33},"name":"AGC_TUNE1","qualname":"::ll::AGC_TUNE1","value":"","parent":null,"children":[],"decl_id":null,"docs":" AGC Tuning register 1\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3080},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32771,"byte_end":32780,"line_start":765,"line_end":765,"column_start":34,"column_end":43},"name":"agc_tune1","qualname":"::ll::agc_tune1","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3087},{"krate":0,"index":3100},{"krate":0,"index":3102},{"krate":0,"index":3106}],"decl_id":null,"docs":" AGC Tuning register 1\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32818,"byte_end":32823,"line_start":766,"line_end":766,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" AGC Tuning register 1 value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3107},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32818,"byte_end":32823,"line_start":766,"line_end":766,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" AGC Tuning register 1 value\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3113},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32898,"byte_end":32907,"line_start":768,"line_end":768,"column_start":24,"column_end":33},"name":"AGC_TUNE2","qualname":"::ll::AGC_TUNE2","value":"","parent":null,"children":[],"decl_id":null,"docs":" AGC Tuning register 2\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3123},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32908,"byte_end":32917,"line_start":768,"line_end":768,"column_start":34,"column_end":43},"name":"agc_tune2","qualname":"::ll::agc_tune2","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3130},{"krate":0,"index":3143},{"krate":0,"index":3145},{"krate":0,"index":3149}],"decl_id":null,"docs":" AGC Tuning register 2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3131},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32955,"byte_end":32960,"line_start":769,"line_end":769,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" AGC Tuning register 2 value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3150},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32955,"byte_end":32960,"line_start":769,"line_end":769,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" AGC Tuning register 2 value\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3156},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33035,"byte_end":33042,"line_start":771,"line_end":771,"column_start":24,"column_end":31},"name":"EC_CTRL","qualname":"::ll::EC_CTRL","value":"","parent":null,"children":[],"decl_id":null,"docs":" External Clock Sync Counter Config\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3166},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33043,"byte_end":33050,"line_start":771,"line_end":771,"column_start":32,"column_end":39},"name":"ec_ctrl","qualname":"::ll::ec_ctrl","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3173},{"krate":0,"index":3234},{"krate":0,"index":3236},{"krate":0,"index":3240}],"decl_id":null,"docs":" External Clock Sync Counter Config\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33101,"byte_end":33106,"line_start":772,"line_end":772,"column_start":9,"column_end":14},"name":"ostsm","qualname":"<R>::ostsm","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" External Transmit Synchronization Mode Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3186},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33179,"byte_end":33184,"line_start":773,"line_end":773,"column_start":9,"column_end":14},"name":"osrsm","qualname":"<R>::osrsm","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" External Receive Synchronization Mode Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3198},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33256,"byte_end":33262,"line_start":774,"line_end":774,"column_start":9,"column_end":15},"name":"pllldt","qualname":"<R>::pllldt","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Clock PLL Lock Detect Tune\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33315,"byte_end":33319,"line_start":775,"line_end":775,"column_start":9,"column_end":13},"name":"wait","qualname":"<R>::wait","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Wait Counter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3222},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33360,"byte_end":33365,"line_start":776,"line_end":776,"column_start":9,"column_end":14},"name":"ostrm","qualname":"<R>::ostrm","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" External Timebase Reset Mode Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33101,"byte_end":33106,"line_start":772,"line_end":772,"column_start":9,"column_end":14},"name":"ostsm","qualname":"<W>::ostsm","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" External Transmit Synchronization Mode Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33179,"byte_end":33184,"line_start":773,"line_end":773,"column_start":9,"column_end":14},"name":"osrsm","qualname":"<W>::osrsm","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" External Receive Synchronization Mode Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3253},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33256,"byte_end":33262,"line_start":774,"line_end":774,"column_start":9,"column_end":15},"name":"pllldt","qualname":"<W>::pllldt","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Clock PLL Lock Detect Tune\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33315,"byte_end":33319,"line_start":775,"line_end":775,"column_start":9,"column_end":13},"name":"wait","qualname":"<W>::wait","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Wait Counter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33360,"byte_end":33365,"line_start":776,"line_end":776,"column_start":9,"column_end":14},"name":"ostrm","qualname":"<W>::ostrm","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" External Timebase Reset Mode Enable\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3271},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33449,"byte_end":33458,"line_start":778,"line_end":778,"column_start":24,"column_end":33},"name":"DRX_TUNE2","qualname":"::ll::DRX_TUNE2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Digital Tuning Register 2\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3281},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33459,"byte_end":33468,"line_start":778,"line_end":778,"column_start":34,"column_end":43},"name":"drx_tune2","qualname":"::ll::drx_tune2","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3288},{"krate":0,"index":3301},{"krate":0,"index":3303},{"krate":0,"index":3307}],"decl_id":null,"docs":" Digital Tuning Register 2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3289},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33510,"byte_end":33515,"line_start":779,"line_end":779,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" DRX_TUNE2 tuning value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33510,"byte_end":33515,"line_start":779,"line_end":779,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" DRX_TUNE2 tuning value\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3314},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33585,"byte_end":33594,"line_start":781,"line_end":781,"column_start":24,"column_end":33},"name":"RF_TXCTRL","qualname":"::ll::RF_TXCTRL","value":"","parent":null,"children":[],"decl_id":null,"docs":" Analog TX Control Register\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3324},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33595,"byte_end":33604,"line_start":781,"line_end":781,"column_start":34,"column_end":43},"name":"rf_txctrl","qualname":"::ll::rf_txctrl","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3331},{"krate":0,"index":3356},{"krate":0,"index":3358},{"krate":0,"index":3362}],"decl_id":null,"docs":" Analog TX Control Register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33647,"byte_end":33654,"line_start":782,"line_end":782,"column_start":9,"column_end":16},"name":"txmtune","qualname":"<R>::txmtune","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Transmit mixer tuning register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33710,"byte_end":33714,"line_start":783,"line_end":783,"column_start":9,"column_end":13},"name":"txmq","qualname":"<R>::txmq","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Transmit mixer Q-factor tuning register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3363},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33647,"byte_end":33654,"line_start":782,"line_end":782,"column_start":9,"column_end":16},"name":"txmtune","qualname":"<W>::txmtune","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Transmit mixer tuning register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33710,"byte_end":33714,"line_start":783,"line_end":783,"column_start":9,"column_end":13},"name":"txmq","qualname":"<W>::txmq","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Transmit mixer Q-factor tuning register\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3375},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33803,"byte_end":33810,"line_start":785,"line_end":785,"column_start":24,"column_end":31},"name":"LDOTUNE","qualname":"::ll::LDOTUNE","value":"","parent":null,"children":[],"decl_id":null,"docs":" LDO voltage tuning parameter\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3385},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33811,"byte_end":33818,"line_start":785,"line_end":785,"column_start":32,"column_end":39},"name":"ldotune","qualname":"::ll::ldotune","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3392},{"krate":0,"index":3405},{"krate":0,"index":3407},{"krate":0,"index":3411}],"decl_id":null,"docs":" LDO voltage tuning parameter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33863,"byte_end":33868,"line_start":786,"line_end":786,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Internal LDO voltage tuning parameter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3412},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33863,"byte_end":33868,"line_start":786,"line_end":786,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Internal LDO voltage tuning parameter\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3418},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33953,"byte_end":33963,"line_start":788,"line_end":788,"column_start":24,"column_end":34},"name":"TC_PGDELAY","qualname":"::ll::TC_PGDELAY","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pulse Generator Delay\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3428},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33964,"byte_end":33974,"line_start":788,"line_end":788,"column_start":35,"column_end":45},"name":"tc_pgdelay","qualname":"::ll::tc_pgdelay","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3435},{"krate":0,"index":3448},{"krate":0,"index":3450},{"krate":0,"index":3454}],"decl_id":null,"docs":" Pulse Generator Delay\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34012,"byte_end":34017,"line_start":789,"line_end":789,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Transmitter Calibration - Pulse Generator Delay\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34012,"byte_end":34017,"line_start":789,"line_end":789,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Transmitter Calibration - Pulse Generator Delay\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3461},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34110,"byte_end":34120,"line_start":791,"line_end":791,"column_start":24,"column_end":34},"name":"FS_PLLTUNE","qualname":"::ll::FS_PLLTUNE","value":"","parent":null,"children":[],"decl_id":null,"docs":" Frequency synth - PLL Tuning\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3471},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34121,"byte_end":34131,"line_start":791,"line_end":791,"column_start":35,"column_end":45},"name":"fs_plltune","qualname":"::ll::fs_plltune","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3478},{"krate":0,"index":3491},{"krate":0,"index":3493},{"krate":0,"index":3497}],"decl_id":null,"docs":" Frequency synth - PLL Tuning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3479},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34176,"byte_end":34181,"line_start":792,"line_end":792,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Frequency synthesiser - PLL Tuning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3498},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34176,"byte_end":34181,"line_start":792,"line_end":792,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Frequency synthesiser - PLL Tuning\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3504},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34261,"byte_end":34269,"line_start":794,"line_end":794,"column_start":24,"column_end":32},"name":"OTP_ADDR","qualname":"::ll::OTP_ADDR","value":"","parent":null,"children":[],"decl_id":null,"docs":" OTP Address\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3514},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34270,"byte_end":34278,"line_start":794,"line_end":794,"column_start":33,"column_end":41},"name":"otp_addr","qualname":"::ll::otp_addr","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3515},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3521},{"krate":0,"index":3534},{"krate":0,"index":3536},{"krate":0,"index":3540}],"decl_id":null,"docs":" OTP Address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3522},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34306,"byte_end":34311,"line_start":795,"line_end":795,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" OTP Address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3541},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34306,"byte_end":34311,"line_start":795,"line_end":795,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" OTP Address\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3547},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34370,"byte_end":34378,"line_start":797,"line_end":797,"column_start":24,"column_end":32},"name":"OTP_CTRL","qualname":"::ll::OTP_CTRL","value":"","parent":null,"children":[],"decl_id":null,"docs":" OTP Control\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3557},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34379,"byte_end":34387,"line_start":797,"line_end":797,"column_start":33,"column_end":41},"name":"otp_ctrl","qualname":"::ll::otp_ctrl","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3558},{"krate":0,"index":3559},{"krate":0,"index":3560},{"krate":0,"index":3564},{"krate":0,"index":3637},{"krate":0,"index":3639},{"krate":0,"index":3643}],"decl_id":null,"docs":" OTP Control\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3565},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34415,"byte_end":34422,"line_start":798,"line_end":798,"column_start":9,"column_end":16},"name":"otprden","qualname":"<R>::otprden","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Forces OTP into manual read mode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3577},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34481,"byte_end":34488,"line_start":799,"line_end":799,"column_start":9,"column_end":16},"name":"otpread","qualname":"<R>::otpread","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Commands a read operation\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3589},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34540,"byte_end":34547,"line_start":800,"line_end":800,"column_start":9,"column_end":16},"name":"otpmrwr","qualname":"<R>::otpmrwr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" OTP mode register write\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3601},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34597,"byte_end":34604,"line_start":801,"line_end":801,"column_start":9,"column_end":16},"name":"otpprog","qualname":"<R>::otpprog","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Write OTP_WDAT to OTP_ADDR\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3613},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34657,"byte_end":34662,"line_start":802,"line_end":802,"column_start":9,"column_end":14},"name":"otpmr","qualname":"<R>::otpmr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" OTP mode register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34708,"byte_end":34715,"line_start":803,"line_end":803,"column_start":9,"column_end":16},"name":"ldeload","qualname":"<R>::ldeload","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Force load of LDE microcode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34415,"byte_end":34422,"line_start":798,"line_end":798,"column_start":9,"column_end":16},"name":"otprden","qualname":"<W>::otprden","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Forces OTP into manual read mode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3650},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34481,"byte_end":34488,"line_start":799,"line_end":799,"column_start":9,"column_end":16},"name":"otpread","qualname":"<W>::otpread","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Commands a read operation\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34540,"byte_end":34547,"line_start":800,"line_end":800,"column_start":9,"column_end":16},"name":"otpmrwr","qualname":"<W>::otpmrwr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" OTP mode register write\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3662},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34597,"byte_end":34604,"line_start":801,"line_end":801,"column_start":9,"column_end":16},"name":"otpprog","qualname":"<W>::otpprog","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Write OTP_WDAT to OTP_ADDR\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34657,"byte_end":34662,"line_start":802,"line_end":802,"column_start":9,"column_end":14},"name":"otpmr","qualname":"<W>::otpmr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" OTP mode register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3674},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34708,"byte_end":34715,"line_start":803,"line_end":803,"column_start":9,"column_end":16},"name":"ldeload","qualname":"<W>::ldeload","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Force load of LDE microcode\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3680},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34790,"byte_end":34798,"line_start":805,"line_end":805,"column_start":24,"column_end":32},"name":"OTP_RDAT","qualname":"::ll::OTP_RDAT","value":"","parent":null,"children":[],"decl_id":null,"docs":" OTP Read Data\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3690},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34799,"byte_end":34807,"line_start":805,"line_end":805,"column_start":33,"column_end":41},"name":"otp_rdat","qualname":"::ll::otp_rdat","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3691},{"krate":0,"index":3692},{"krate":0,"index":3693},{"krate":0,"index":3697},{"krate":0,"index":3710},{"krate":0,"index":3712},{"krate":0,"index":3716}],"decl_id":null,"docs":" OTP Read Data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3698},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34837,"byte_end":34842,"line_start":806,"line_end":806,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" OTP Read Data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3717},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34837,"byte_end":34842,"line_start":806,"line_end":806,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" OTP Read Data\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3723},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34905,"byte_end":34913,"line_start":808,"line_end":808,"column_start":26,"column_end":34},"name":"LDE_CFG1","qualname":"::ll::LDE_CFG1","value":"","parent":null,"children":[],"decl_id":null,"docs":" LDE Configuration Register 1\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3733},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34914,"byte_end":34922,"line_start":808,"line_end":808,"column_start":35,"column_end":43},"name":"lde_cfg1","qualname":"::ll::lde_cfg1","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3734},{"krate":0,"index":3735},{"krate":0,"index":3736},{"krate":0,"index":3740},{"krate":0,"index":3765},{"krate":0,"index":3767},{"krate":0,"index":3771}],"decl_id":null,"docs":" LDE Configuration Register 1\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3741},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34967,"byte_end":34970,"line_start":809,"line_end":809,"column_start":9,"column_end":12},"name":"ntm","qualname":"<R>::ntm","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Noise Threshold Multiplier\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3753},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35023,"byte_end":35028,"line_start":810,"line_end":810,"column_start":9,"column_end":14},"name":"pmult","qualname":"<R>::pmult","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Peak Multiplier\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3772},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34967,"byte_end":34970,"line_start":809,"line_end":809,"column_start":9,"column_end":12},"name":"ntm","qualname":"<W>::ntm","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Noise Threshold Multiplier\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3778},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35023,"byte_end":35028,"line_start":810,"line_end":810,"column_start":9,"column_end":14},"name":"pmult","qualname":"<W>::pmult","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Peak Multiplier\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3784},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35091,"byte_end":35101,"line_start":812,"line_end":812,"column_start":26,"column_end":36},"name":"LDE_RXANTD","qualname":"::ll::LDE_RXANTD","value":"","parent":null,"children":[],"decl_id":null,"docs":" RX Antenna Delay\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3794},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35102,"byte_end":35112,"line_start":812,"line_end":812,"column_start":37,"column_end":47},"name":"lde_rxantd","qualname":"::ll::lde_rxantd","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3801},{"krate":0,"index":3814},{"krate":0,"index":3816},{"krate":0,"index":3820}],"decl_id":null,"docs":" RX Antenna Delay\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3802},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35145,"byte_end":35150,"line_start":813,"line_end":813,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" RX Antenna Delay\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3821},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35145,"byte_end":35150,"line_start":813,"line_end":813,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" RX Antenna Delay\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3827},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35216,"byte_end":35224,"line_start":815,"line_end":815,"column_start":26,"column_end":34},"name":"LDE_CFG2","qualname":"::ll::LDE_CFG2","value":"","parent":null,"children":[],"decl_id":null,"docs":" LDE Configuration Register 2\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3837},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35225,"byte_end":35233,"line_start":815,"line_end":815,"column_start":35,"column_end":43},"name":"lde_cfg2","qualname":"::ll::lde_cfg2","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3838},{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3844},{"krate":0,"index":3857},{"krate":0,"index":3859},{"krate":0,"index":3863}],"decl_id":null,"docs":" LDE Configuration Register 2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3845},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35278,"byte_end":35283,"line_start":816,"line_end":816,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The LDE_CFG2 configuration value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3864},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35278,"byte_end":35283,"line_start":816,"line_end":816,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" The LDE_CFG2 configuration value\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3870},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35363,"byte_end":35371,"line_start":818,"line_end":818,"column_start":24,"column_end":32},"name":"EVC_CTRL","qualname":"::ll::EVC_CTRL","value":"","parent":null,"children":[],"decl_id":null,"docs":" Event Counter Control\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3880},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35372,"byte_end":35380,"line_start":818,"line_end":818,"column_start":33,"column_end":41},"name":"evc_ctrl","qualname":"::ll::evc_ctrl","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3887},{"krate":0,"index":3912},{"krate":0,"index":3914},{"krate":0,"index":3918}],"decl_id":null,"docs":" Event Counter Control\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3888},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35418,"byte_end":35424,"line_start":819,"line_end":819,"column_start":9,"column_end":15},"name":"evc_en","qualname":"<R>::evc_en","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Event Counters Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3900},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35471,"byte_end":35478,"line_start":820,"line_end":820,"column_start":9,"column_end":16},"name":"evc_clr","qualname":"<R>::evc_clr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Event Counters Clear\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3919},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35418,"byte_end":35424,"line_start":819,"line_end":819,"column_start":9,"column_end":15},"name":"evc_en","qualname":"<W>::evc_en","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Event Counters Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3925},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35471,"byte_end":35478,"line_start":820,"line_end":820,"column_start":9,"column_end":16},"name":"evc_clr","qualname":"<W>::evc_clr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Event Counters Clear\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3931},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35544,"byte_end":35551,"line_start":822,"line_end":822,"column_start":24,"column_end":31},"name":"EVC_HPW","qualname":"::ll::EVC_HPW","value":"","parent":null,"children":[],"decl_id":null,"docs":" Half Period Warning Counter\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3941},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35552,"byte_end":35559,"line_start":822,"line_end":822,"column_start":32,"column_end":39},"name":"evc_hpw","qualname":"::ll::evc_hpw","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3942},{"krate":0,"index":3943},{"krate":0,"index":3944},{"krate":0,"index":3948},{"krate":0,"index":3961},{"krate":0,"index":3963},{"krate":0,"index":3967}],"decl_id":null,"docs":" Half Period Warning Counter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3949},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35603,"byte_end":35608,"line_start":823,"line_end":823,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Half Period Warning Event Counter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3968},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35603,"byte_end":35608,"line_start":823,"line_end":823,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Half Period Warning Event Counter\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3974},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35689,"byte_end":35696,"line_start":825,"line_end":825,"column_start":24,"column_end":31},"name":"EVC_TPW","qualname":"::ll::EVC_TPW","value":"","parent":null,"children":[],"decl_id":null,"docs":" TX Power-Up Warning Counter\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3984},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35697,"byte_end":35704,"line_start":825,"line_end":825,"column_start":32,"column_end":39},"name":"evc_tpw","qualname":"::ll::evc_tpw","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3987},{"krate":0,"index":3991},{"krate":0,"index":4004},{"krate":0,"index":4006},{"krate":0,"index":4010}],"decl_id":null,"docs":" TX Power-Up Warning Counter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3992},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35748,"byte_end":35753,"line_start":826,"line_end":826,"column_start":9,"column_end":14},"name":"value","qualname":"<R>::value","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" TX Power-Up Warning Event Counter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4011},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35748,"byte_end":35753,"line_start":826,"line_end":826,"column_start":9,"column_end":14},"name":"value","qualname":"<W>::value","value":"fn (&mut self, value: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" TX Power-Up Warning Event Counter\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4017},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35834,"byte_end":35844,"line_start":828,"line_end":828,"column_start":24,"column_end":34},"name":"PMSC_CTRL0","qualname":"::ll::PMSC_CTRL0","value":"","parent":null,"children":[],"decl_id":null,"docs":" PMSC Control Register 0\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":4027},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35845,"byte_end":35855,"line_start":828,"line_end":828,"column_start":35,"column_end":45},"name":"pmsc_ctrl0","qualname":"::ll::pmsc_ctrl0","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":4028},{"krate":0,"index":4029},{"krate":0,"index":4030},{"krate":0,"index":4034},{"krate":0,"index":4179},{"krate":0,"index":4181},{"krate":0,"index":4185}],"decl_id":null,"docs":" PMSC Control Register 0\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4035},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35895,"byte_end":35902,"line_start":829,"line_end":829,"column_start":9,"column_end":16},"name":"sysclks","qualname":"<R>::sysclks","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" System Clock Selection\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4047},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35953,"byte_end":35959,"line_start":830,"line_end":830,"column_start":9,"column_end":15},"name":"rxclks","qualname":"<R>::rxclks","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Receiver Clock Selection\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4059},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36013,"byte_end":36019,"line_start":831,"line_end":831,"column_start":9,"column_end":15},"name":"txclks","qualname":"<R>::txclks","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Transmitter Clock Selection\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4071},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36076,"byte_end":36080,"line_start":832,"line_end":832,"column_start":9,"column_end":13},"name":"face","qualname":"<R>::face","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Force Accumulator Clock Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4083},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36142,"byte_end":36147,"line_start":833,"line_end":833,"column_start":9,"column_end":14},"name":"adcce","qualname":"<R>::adcce","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" ADC Clock Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4095},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36194,"byte_end":36198,"line_start":834,"line_end":834,"column_start":9,"column_end":13},"name":"amce","qualname":"<R>::amce","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Accumulator Memory Clock Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4107},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36261,"byte_end":36265,"line_start":835,"line_end":835,"column_start":9,"column_end":13},"name":"gpce","qualname":"<R>::gpce","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" GPIO Clock Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4119},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36314,"byte_end":36318,"line_start":836,"line_end":836,"column_start":9,"column_end":13},"name":"gprn","qualname":"<R>::gprn","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" GPIO Reset (Not), active low\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4131},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36378,"byte_end":36383,"line_start":837,"line_end":837,"column_start":9,"column_end":14},"name":"gpdce","qualname":"<R>::gpdce","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" GPIO De-bounce Clock Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4143},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36441,"byte_end":36446,"line_start":838,"line_end":838,"column_start":9,"column_end":14},"name":"gpdrn","qualname":"<R>::gpdrn","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" GPIO De-bounce Reset (Not), active low\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4155},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36515,"byte_end":36523,"line_start":839,"line_end":839,"column_start":9,"column_end":17},"name":"khzclken","qualname":"<R>::khzclken","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Kilohertz Clock Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4167},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36573,"byte_end":36582,"line_start":840,"line_end":840,"column_start":9,"column_end":18},"name":"softreset","qualname":"<R>::softreset","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Soft Reset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4186},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35895,"byte_end":35902,"line_start":829,"line_end":829,"column_start":9,"column_end":16},"name":"sysclks","qualname":"<W>::sysclks","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" System Clock Selection\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4192},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35953,"byte_end":35959,"line_start":830,"line_end":830,"column_start":9,"column_end":15},"name":"rxclks","qualname":"<W>::rxclks","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Receiver Clock Selection\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4198},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36013,"byte_end":36019,"line_start":831,"line_end":831,"column_start":9,"column_end":15},"name":"txclks","qualname":"<W>::txclks","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Transmitter Clock Selection\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4204},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36076,"byte_end":36080,"line_start":832,"line_end":832,"column_start":9,"column_end":13},"name":"face","qualname":"<W>::face","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Force Accumulator Clock Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4210},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36142,"byte_end":36147,"line_start":833,"line_end":833,"column_start":9,"column_end":14},"name":"adcce","qualname":"<W>::adcce","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ADC Clock Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4216},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36194,"byte_end":36198,"line_start":834,"line_end":834,"column_start":9,"column_end":13},"name":"amce","qualname":"<W>::amce","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Accumulator Memory Clock Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4222},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36261,"byte_end":36265,"line_start":835,"line_end":835,"column_start":9,"column_end":13},"name":"gpce","qualname":"<W>::gpce","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" GPIO Clock Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4228},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36314,"byte_end":36318,"line_start":836,"line_end":836,"column_start":9,"column_end":13},"name":"gprn","qualname":"<W>::gprn","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" GPIO Reset (Not), active low\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4234},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36378,"byte_end":36383,"line_start":837,"line_end":837,"column_start":9,"column_end":14},"name":"gpdce","qualname":"<W>::gpdce","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" GPIO De-bounce Clock Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4240},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36441,"byte_end":36446,"line_start":838,"line_end":838,"column_start":9,"column_end":14},"name":"gpdrn","qualname":"<W>::gpdrn","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" GPIO De-bounce Reset (Not), active low\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4246},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36515,"byte_end":36523,"line_start":839,"line_end":839,"column_start":9,"column_end":17},"name":"khzclken","qualname":"<W>::khzclken","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Kilohertz Clock Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4252},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36573,"byte_end":36582,"line_start":840,"line_end":840,"column_start":9,"column_end":18},"name":"softreset","qualname":"<W>::softreset","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Soft Reset\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4258},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36640,"byte_end":36650,"line_start":842,"line_end":842,"column_start":24,"column_end":34},"name":"PMSC_CTRL1","qualname":"::ll::PMSC_CTRL1","value":"","parent":null,"children":[],"decl_id":null,"docs":" PMSC Control Register 1\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":8792,"byte_end":8822,"line_start":268,"line_end":268,"column_start":13,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":4268},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36651,"byte_end":36661,"line_start":842,"line_end":842,"column_start":35,"column_end":45},"name":"pmsc_ctrl1","qualname":"::ll::pmsc_ctrl1","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":4269},{"krate":0,"index":4270},{"krate":0,"index":4271},{"krate":0,"index":4275},{"krate":0,"index":4384},{"krate":0,"index":4386},{"krate":0,"index":4390}],"decl_id":null,"docs":" PMSC Control Register 1\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4276},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36701,"byte_end":36709,"line_start":843,"line_end":843,"column_start":9,"column_end":17},"name":"arx2init","qualname":"<R>::arx2init","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Automatic transition from receive to init\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4288},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36778,"byte_end":36784,"line_start":844,"line_end":844,"column_start":9,"column_end":15},"name":"pktseq","qualname":"<R>::pktseq","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Control PMSC control of analog RF subsystem\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4300},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36857,"byte_end":36863,"line_start":845,"line_end":845,"column_start":9,"column_end":15},"name":"atxslp","qualname":"<R>::atxslp","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" After TX automatically sleep\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4312},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36921,"byte_end":36927,"line_start":846,"line_end":846,"column_start":9,"column_end":15},"name":"arxslp","qualname":"<R>::arxslp","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" After RX automatically sleep\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4324},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36985,"byte_end":36990,"line_start":847,"line_end":847,"column_start":9,"column_end":14},"name":"snoze","qualname":"<R>::snoze","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Snooze Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4336},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37034,"byte_end":37039,"line_start":848,"line_end":848,"column_start":9,"column_end":14},"name":"snozr","qualname":"<R>::snozr","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Snooze Repeat\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4348},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37083,"byte_end":37089,"line_start":849,"line_end":849,"column_start":9,"column_end":15},"name":"pllsyn","qualname":"<R>::pllsyn","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Enable clock used for external sync modes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4360},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37160,"byte_end":37167,"line_start":850,"line_end":850,"column_start":9,"column_end":16},"name":"lderune","qualname":"<R>::lderune","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" LDE Run Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4372},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37210,"byte_end":37219,"line_start":851,"line_end":851,"column_start":9,"column_end":18},"name":"khzclkdiv","qualname":"<R>::khzclkdiv","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Kilohertz Clock Divisor\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4391},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36701,"byte_end":36709,"line_start":843,"line_end":843,"column_start":9,"column_end":17},"name":"arx2init","qualname":"<W>::arx2init","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Automatic transition from receive to init\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4397},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36778,"byte_end":36784,"line_start":844,"line_end":844,"column_start":9,"column_end":15},"name":"pktseq","qualname":"<W>::pktseq","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Control PMSC control of analog RF subsystem\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4403},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36857,"byte_end":36863,"line_start":845,"line_end":845,"column_start":9,"column_end":15},"name":"atxslp","qualname":"<W>::atxslp","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" After TX automatically sleep\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4409},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36921,"byte_end":36927,"line_start":846,"line_end":846,"column_start":9,"column_end":15},"name":"arxslp","qualname":"<W>::arxslp","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" After RX automatically sleep\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4415},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36985,"byte_end":36990,"line_start":847,"line_end":847,"column_start":9,"column_end":14},"name":"snoze","qualname":"<W>::snoze","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Snooze Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4421},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37034,"byte_end":37039,"line_start":848,"line_end":848,"column_start":9,"column_end":14},"name":"snozr","qualname":"<W>::snozr","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Snooze Repeat\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4427},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37083,"byte_end":37089,"line_start":849,"line_end":849,"column_start":9,"column_end":15},"name":"pllsyn","qualname":"<W>::pllsyn","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable clock used for external sync modes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4433},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37160,"byte_end":37167,"line_start":850,"line_end":850,"column_start":9,"column_end":16},"name":"lderune","qualname":"<W>::lderune","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" LDE Run Enable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4439},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37210,"byte_end":37219,"line_start":851,"line_end":851,"column_start":9,"column_end":18},"name":"khzclkdiv","qualname":"<W>::khzclkdiv","value":"fn (&mut self, value: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Kilohertz Clock Divisor\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4448},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23461,"byte_end":23467,"line_start":598,"line_end":598,"column_start":31,"column_end":37},"name":"dev_id","qualname":"<DW1000<SPI, CS>>::dev_id","value":"fn (&mut self) -> RegAccessor<DEV_ID, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" Device identifier\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4449},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23709,"byte_end":23712,"line_start":604,"line_end":604,"column_start":28,"column_end":31},"name":"eui","qualname":"<DW1000<SPI, CS>>::eui","value":"fn (&mut self) -> RegAccessor<EUI, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" Extended Unique Identifier\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4450},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":23841,"byte_end":23847,"line_start":607,"line_end":607,"column_start":31,"column_end":37},"name":"panadr","qualname":"<DW1000<SPI, CS>>::panadr","value":"fn (&mut self) -> RegAccessor<PANADR, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" PAN Identifier and Short Address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4451},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":24028,"byte_end":24035,"line_start":611,"line_end":611,"column_start":32,"column_end":39},"name":"sys_cfg","qualname":"<DW1000<SPI, CS>>::sys_cfg","value":"fn (&mut self) -> RegAccessor<SYS_CFG, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" System Configuration\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4452},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25614,"byte_end":25622,"line_start":636,"line_end":636,"column_start":33,"column_end":41},"name":"sys_time","qualname":"<DW1000<SPI, CS>>::sys_time","value":"fn (&mut self) -> RegAccessor<SYS_TIME, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" System Time Counter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4453},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":25739,"byte_end":25747,"line_start":639,"line_end":639,"column_start":33,"column_end":41},"name":"tx_fctrl","qualname":"<DW1000<SPI, CS>>::tx_fctrl","value":"fn (&mut self) -> RegAccessor<TX_FCTRL, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" TX Frame Control\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4454},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26319,"byte_end":26326,"line_start":650,"line_end":650,"column_start":32,"column_end":39},"name":"dx_time","qualname":"<DW1000<SPI, CS>>::dx_time","value":"fn (&mut self) -> RegAccessor<DX_TIME, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" Delayed Send or Receive Time\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4455},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":26461,"byte_end":26469,"line_start":653,"line_end":653,"column_start":33,"column_end":41},"name":"sys_ctrl","qualname":"<DW1000<SPI, CS>>::sys_ctrl","value":"fn (&mut self) -> RegAccessor<SYS_CTRL, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" System Control Register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4456},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":27065,"byte_end":27073,"line_start":664,"line_end":664,"column_start":33,"column_end":41},"name":"sys_mask","qualname":"<DW1000<SPI, CS>>::sys_mask","value":"fn (&mut self) -> RegAccessor<SYS_MASK, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" System Event Mask Register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4457},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":28959,"byte_end":28969,"line_start":694,"line_end":694,"column_start":35,"column_end":45},"name":"sys_status","qualname":"<DW1000<SPI, CS>>::sys_status","value":"fn (&mut self) -> RegAccessor<SYS_STATUS, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" System Event Status Register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4458},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":30956,"byte_end":30964,"line_start":730,"line_end":730,"column_start":33,"column_end":41},"name":"rx_finfo","qualname":"<DW1000<SPI, CS>>::rx_finfo","value":"fn (&mut self) -> RegAccessor<RX_FINFO, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" RX Frame Information\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4459},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31440,"byte_end":31447,"line_start":739,"line_end":739,"column_start":33,"column_end":40},"name":"rx_time","qualname":"<DW1000<SPI, CS>>::rx_time","value":"fn (&mut self) -> RegAccessor<RX_TIME, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" Receive Time Stamp\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4460},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31743,"byte_end":31750,"line_start":745,"line_end":745,"column_start":33,"column_end":40},"name":"tx_time","qualname":"<DW1000<SPI, CS>>::tx_time","value":"fn (&mut self) -> RegAccessor<TX_TIME, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" Transmit Time Stamp\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4461},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":31926,"byte_end":31933,"line_start":749,"line_end":749,"column_start":32,"column_end":39},"name":"tx_antd","qualname":"<DW1000<SPI, CS>>::tx_antd","value":"fn (&mut self) -> RegAccessor<TX_ANTD, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" TX Antenna Delay\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4462},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32045,"byte_end":32054,"line_start":752,"line_end":752,"column_start":34,"column_end":43},"name":"sys_state","qualname":"<DW1000<SPI, CS>>::sys_state","value":"fn (&mut self) -> RegAccessor<SYS_STATE, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" System State information\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4463},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32383,"byte_end":32391,"line_start":758,"line_end":758,"column_start":33,"column_end":41},"name":"tx_power","qualname":"<DW1000<SPI, CS>>::tx_power","value":"fn (&mut self) -> RegAccessor<TX_POWER, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" TX Power Control\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4464},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32771,"byte_end":32780,"line_start":765,"line_end":765,"column_start":34,"column_end":43},"name":"agc_tune1","qualname":"<DW1000<SPI, CS>>::agc_tune1","value":"fn (&mut self) -> RegAccessor<AGC_TUNE1, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" AGC Tuning register 1\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4465},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":32908,"byte_end":32917,"line_start":768,"line_end":768,"column_start":34,"column_end":43},"name":"agc_tune2","qualname":"<DW1000<SPI, CS>>::agc_tune2","value":"fn (&mut self) -> RegAccessor<AGC_TUNE2, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" AGC Tuning register 2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4466},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33043,"byte_end":33050,"line_start":771,"line_end":771,"column_start":32,"column_end":39},"name":"ec_ctrl","qualname":"<DW1000<SPI, CS>>::ec_ctrl","value":"fn (&mut self) -> RegAccessor<EC_CTRL, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" External Clock Sync Counter Config\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4467},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33459,"byte_end":33468,"line_start":778,"line_end":778,"column_start":34,"column_end":43},"name":"drx_tune2","qualname":"<DW1000<SPI, CS>>::drx_tune2","value":"fn (&mut self) -> RegAccessor<DRX_TUNE2, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" Digital Tuning Register 2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4468},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33595,"byte_end":33604,"line_start":781,"line_end":781,"column_start":34,"column_end":43},"name":"rf_txctrl","qualname":"<DW1000<SPI, CS>>::rf_txctrl","value":"fn (&mut self) -> RegAccessor<RF_TXCTRL, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" Analog TX Control Register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4469},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33811,"byte_end":33818,"line_start":785,"line_end":785,"column_start":32,"column_end":39},"name":"ldotune","qualname":"<DW1000<SPI, CS>>::ldotune","value":"fn (&mut self) -> RegAccessor<LDOTUNE, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" LDO voltage tuning parameter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4470},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":33964,"byte_end":33974,"line_start":788,"line_end":788,"column_start":35,"column_end":45},"name":"tc_pgdelay","qualname":"<DW1000<SPI, CS>>::tc_pgdelay","value":"fn (&mut self) -> RegAccessor<TC_PGDELAY, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" Pulse Generator Delay\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4471},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34121,"byte_end":34131,"line_start":791,"line_end":791,"column_start":35,"column_end":45},"name":"fs_plltune","qualname":"<DW1000<SPI, CS>>::fs_plltune","value":"fn (&mut self) -> RegAccessor<FS_PLLTUNE, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" Frequency synth - PLL Tuning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4472},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34270,"byte_end":34278,"line_start":794,"line_end":794,"column_start":33,"column_end":41},"name":"otp_addr","qualname":"<DW1000<SPI, CS>>::otp_addr","value":"fn (&mut self) -> RegAccessor<OTP_ADDR, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" OTP Address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4473},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34379,"byte_end":34387,"line_start":797,"line_end":797,"column_start":33,"column_end":41},"name":"otp_ctrl","qualname":"<DW1000<SPI, CS>>::otp_ctrl","value":"fn (&mut self) -> RegAccessor<OTP_CTRL, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" OTP Control\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4474},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34799,"byte_end":34807,"line_start":805,"line_end":805,"column_start":33,"column_end":41},"name":"otp_rdat","qualname":"<DW1000<SPI, CS>>::otp_rdat","value":"fn (&mut self) -> RegAccessor<OTP_RDAT, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" OTP Read Data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4475},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":34914,"byte_end":34922,"line_start":808,"line_end":808,"column_start":35,"column_end":43},"name":"lde_cfg1","qualname":"<DW1000<SPI, CS>>::lde_cfg1","value":"fn (&mut self) -> RegAccessor<LDE_CFG1, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" LDE Configuration Register 1\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4476},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35102,"byte_end":35112,"line_start":812,"line_end":812,"column_start":37,"column_end":47},"name":"lde_rxantd","qualname":"<DW1000<SPI, CS>>::lde_rxantd","value":"fn (&mut self) -> RegAccessor<LDE_RXANTD, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" RX Antenna Delay\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4477},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35225,"byte_end":35233,"line_start":815,"line_end":815,"column_start":35,"column_end":43},"name":"lde_cfg2","qualname":"<DW1000<SPI, CS>>::lde_cfg2","value":"fn (&mut self) -> RegAccessor<LDE_CFG2, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" LDE Configuration Register 2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4478},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35372,"byte_end":35380,"line_start":818,"line_end":818,"column_start":33,"column_end":41},"name":"evc_ctrl","qualname":"<DW1000<SPI, CS>>::evc_ctrl","value":"fn (&mut self) -> RegAccessor<EVC_CTRL, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" Event Counter Control\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4479},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35552,"byte_end":35559,"line_start":822,"line_end":822,"column_start":32,"column_end":39},"name":"evc_hpw","qualname":"<DW1000<SPI, CS>>::evc_hpw","value":"fn (&mut self) -> RegAccessor<EVC_HPW, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" Half Period Warning Counter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4480},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35697,"byte_end":35704,"line_start":825,"line_end":825,"column_start":32,"column_end":39},"name":"evc_tpw","qualname":"<DW1000<SPI, CS>>::evc_tpw","value":"fn (&mut self) -> RegAccessor<EVC_TPW, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" TX Power-Up Warning Counter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4481},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":35845,"byte_end":35855,"line_start":828,"line_end":828,"column_start":35,"column_end":45},"name":"pmsc_ctrl0","qualname":"<DW1000<SPI, CS>>::pmsc_ctrl0","value":"fn (&mut self) -> RegAccessor<PMSC_CTRL0, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" PMSC Control Register 0\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4482},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":36651,"byte_end":36661,"line_start":842,"line_end":842,"column_start":35,"column_end":45},"name":"pmsc_ctrl1","qualname":"<DW1000<SPI, CS>>::pmsc_ctrl1","value":"fn (&mut self) -> RegAccessor<PMSC_CTRL1, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" PMSC Control Register 1\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":69},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37485,"byte_end":37494,"line_start":861,"line_end":861,"column_start":12,"column_end":21},"name":"TX_BUFFER","qualname":"::ll::TX_BUFFER","value":"","parent":null,"children":[],"decl_id":null,"docs":" Transmit Data Buffer","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37443,"byte_end":37473,"line_start":860,"line_end":860,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37909,"byte_end":37918,"line_start":883,"line_end":883,"column_start":12,"column_end":21},"name":"tx_buffer","qualname":"<DW1000<SPI, CS>>::tx_buffer","value":"fn (&mut self) -> RegAccessor<TX_BUFFER, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" Transmit Data Buffer\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":84},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":38049,"byte_end":38058,"line_start":890,"line_end":890,"column_start":9,"column_end":18},"name":"tx_buffer","qualname":"::ll::tx_buffer","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":89}],"decl_id":null,"docs":" Transmit Data Buffer\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":85},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":38114,"byte_end":38115,"line_start":892,"line_end":892,"column_start":16,"column_end":17},"name":"W","qualname":"::ll::tx_buffer::W","value":"","parent":null,"children":[],"decl_id":null,"docs":" Used to write to the register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":38229,"byte_end":38233,"line_start":896,"line_end":896,"column_start":16,"column_end":20},"name":"data","qualname":"<W>::data","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Provides write access to the buffer contents\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":91},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":38522,"byte_end":38531,"line_start":908,"line_end":908,"column_start":12,"column_end":21},"name":"RX_BUFFER","qualname":"::ll::RX_BUFFER","value":"","parent":null,"children":[],"decl_id":null,"docs":" Receive Data Buffer","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":38480,"byte_end":38510,"line_start":907,"line_end":907,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":38941,"byte_end":38950,"line_start":930,"line_end":930,"column_start":12,"column_end":21},"name":"rx_buffer","qualname":"<DW1000<SPI, CS>>::rx_buffer","value":"fn (&mut self) -> RegAccessor<RX_BUFFER, SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" Receive Data Buffer\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":106},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":39080,"byte_end":39089,"line_start":937,"line_end":937,"column_start":9,"column_end":18},"name":"rx_buffer","qualname":"::ll::rx_buffer","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":114},{"krate":0,"index":116}],"decl_id":null,"docs":" Receive Data Buffer\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":110},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":39237,"byte_end":39238,"line_start":946,"line_end":946,"column_start":16,"column_end":17},"name":"R","qualname":"::ll::rx_buffer::R","value":"","parent":null,"children":[],"decl_id":null,"docs":" Used to read from the register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":39360,"byte_end":39364,"line_start":950,"line_end":950,"column_start":16,"column_end":20},"name":"data","qualname":"<R>::data","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Provides read access to the buffer contents\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":121},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":39906,"byte_end":39911,"line_start":975,"line_end":975,"column_start":10,"column_end":15},"name":"Bytes","qualname":"::ll::ToBytes::Bytes","value":"type Bytes;","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":124},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hl","qualname":"::hl","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":139},{"krate":0,"index":146},{"krate":0,"index":168},{"krate":0,"index":199},{"krate":0,"index":204},{"krate":0,"index":210},{"krate":0,"index":222},{"krate":0,"index":228},{"krate":0,"index":243},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":4816},{"krate":0,"index":4820}],"decl_id":null,"docs":" High-level interface to the DW1000","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":41718,"byte_end":41724,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"DW1000","qualname":"::hl::DW1000","value":"DW1000 {  }","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"decl_id":null,"docs":" Entry point to the DW1000 driver API\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":42117,"byte_end":42120,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<DW1000<SPI, CS, Uninitialized>>::new","value":"fn (spi: SPI, chip_select: CS) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `DW1000`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":42870,"byte_end":42874,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"init","qualname":"<DW1000<SPI, CS, Uninitialized>>::init","value":"fn (mut self) -> Result<DW1000<SPI, CS, Ready>, Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Initialize the DW1000","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":45711,"byte_end":45728,"line_start":151,"line_end":151,"column_start":12,"column_end":29},"name":"set_antenna_delay","qualname":"<DW1000<SPI, CS, Ready>>::set_antenna_delay","value":"fn (&mut self, rx_delay: u16, tx_delay: u16) -> Result<(), Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the RX and TX antenna delays\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":46050,"byte_end":46070,"line_start":165,"line_end":165,"column_start":12,"column_end":32},"name":"get_tx_antenna_delay","qualname":"<DW1000<SPI, CS, Ready>>::get_tx_antenna_delay","value":"fn (&mut self) -> Result<Duration, Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the TX antenna delay\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":46472,"byte_end":46483,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"set_address","qualname":"<DW1000<SPI, CS, Ready>>::set_address","value":"fn (&mut self, address: mac::Address) -> Result<(), Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the network id and address used for sending and receiving\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":46857,"byte_end":46868,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"get_address","qualname":"<DW1000<SPI, CS, Ready>>::get_address","value":"fn (&mut self) -> Result<mac::Address, Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the network id and address used for sending and receiving\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":47159,"byte_end":47167,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"sys_time","qualname":"<DW1000<SPI, CS, Ready>>::sys_time","value":"fn (&mut self) -> Result<Instant, Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current system time\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":48003,"byte_end":48007,"line_start":224,"line_end":224,"column_start":12,"column_end":16},"name":"send","qualname":"<DW1000<SPI, CS, Ready>>::send","value":"fn (&mut self, data: &[u8], destination: mac::Address, delayed_time: Option<Instant>) -> Result<TxFuture<SPI, CS>, Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Send an IEEE 802.15.4 MAC frame","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":50715,"byte_end":50722,"line_start":307,"line_end":307,"column_start":12,"column_end":19},"name":"receive","qualname":"<DW1000<SPI, CS, Ready>>::receive","value":"fn (&mut self) -> Result<RxFuture<SPI, CS>, Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive an IEEE 802.15.4 MAC frame","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":54044,"byte_end":54054,"line_start":392,"line_end":392,"column_start":12,"column_end":22},"name":"force_idle","qualname":"<DW1000<SPI, CS, Ready>>::force_idle","value":"fn (&mut self) -> Result<(), Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Force the DW1000 into IDLE mode","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":54288,"byte_end":54304,"line_start":402,"line_end":402,"column_start":12,"column_end":28},"name":"clear_interrupts","qualname":"<DW1000<SPI, CS, Ready>>::clear_interrupts","value":"fn (&mut self) -> Result<(), Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Clear all interrupt flags\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":54822,"byte_end":54824,"line_start":417,"line_end":417,"column_start":12,"column_end":14},"name":"ll","qualname":"<DW1000<SPI, CS, State>>::ll","value":"fn (&mut self) -> &mut ll::DW1000<SPI, CS>","parent":null,"children":[],"decl_id":null,"docs":" Provides direct access to the register-level API","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":204},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":54972,"byte_end":54980,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"name":"TxFuture","qualname":"::hl::TxFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a transmission that might not have completed yet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":55862,"byte_end":55866,"line_start":443,"line_end":443,"column_start":12,"column_end":16},"name":"wait","qualname":"<TxFuture>::wait","value":"fn (&mut self) -> nb::Result<(), Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Wait for the transmission to finish","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":58033,"byte_end":58050,"line_start":503,"line_end":503,"column_start":12,"column_end":29},"name":"enable_interrupts","qualname":"<TxFuture>::enable_interrupts","value":"fn (&mut self) -> Result<(), Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Enables interrupts for the events that `wait` checks","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":222},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":58264,"byte_end":58272,"line_start":513,"line_end":513,"column_start":12,"column_end":20},"name":"RxFuture","qualname":"::hl::RxFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a receive operation that might not have finished yet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":59155,"byte_end":59159,"line_start":532,"line_end":532,"column_start":12,"column_end":16},"name":"wait","qualname":"<RxFuture>::wait","value":"fn <'b> (&mut self, buffer: &'b mut [u8]) -> nb::Result<Message<'b>, Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Wait for receive operation to finish","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":64055,"byte_end":64072,"line_start":653,"line_end":653,"column_start":12,"column_end":29},"name":"enable_interrupts","qualname":"<RxFuture>::enable_interrupts","value":"fn (&mut self) -> Result<(), Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Enables interrupts for the events that `wait` checks","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":245},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":64732,"byte_end":64735,"line_start":681,"line_end":681,"column_start":5,"column_end":8},"name":"Spi","qualname":"::hl::Error::Spi","value":"Error::Spi(ll::Error<SPI>)","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Error occured while using SPI bus\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":248},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":64785,"byte_end":64788,"line_start":684,"line_end":684,"column_start":5,"column_end":8},"name":"Fcs","qualname":"::hl::Error::Fcs","value":"Error::Fcs","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Receiver FCS error\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":250},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":64820,"byte_end":64823,"line_start":687,"line_end":687,"column_start":5,"column_end":8},"name":"Phy","qualname":"::hl::Error::Phy","value":"Error::Phy","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" PHY header error\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":252},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":64855,"byte_end":64869,"line_start":690,"line_end":690,"column_start":5,"column_end":19},"name":"BufferTooSmall","qualname":"::hl::Error::BufferTooSmall","value":"Error::BufferTooSmall { required_len }","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Buffer too small\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":254},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":65025,"byte_end":65036,"line_start":696,"line_end":696,"column_start":5,"column_end":16},"name":"ReedSolomon","qualname":"::hl::Error::ReedSolomon","value":"Error::ReedSolomon","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Receiver Reed Solomon Frame Sync Loss\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":256},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":65079,"byte_end":65095,"line_start":699,"line_end":699,"column_start":5,"column_end":21},"name":"FrameWaitTimeout","qualname":"::hl::Error::FrameWaitTimeout","value":"Error::FrameWaitTimeout","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Receiver Frame Wait Timeout\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":258},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":65127,"byte_end":65134,"line_start":702,"line_end":702,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::hl::Error::Overrun","value":"Error::Overrun","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Receiver Overrun\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":260},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":65176,"byte_end":65200,"line_start":705,"line_end":705,"column_start":5,"column_end":29},"name":"PreambleDetectionTimeout","qualname":"::hl::Error::PreambleDetectionTimeout","value":"Error::PreambleDetectionTimeout","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Preamble Detection Timeout\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":262},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":65236,"byte_end":65246,"line_start":708,"line_end":708,"column_start":5,"column_end":15},"name":"SfdTimeout","qualname":"::hl::Error::SfdTimeout","value":"Error::SfdTimeout","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Receiver SFD Timeout\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":264},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":65288,"byte_end":65293,"line_start":711,"line_end":711,"column_start":5,"column_end":10},"name":"Frame","qualname":"::hl::Error::Frame","value":"Error::Frame(mac::DecodeError)","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Frame could not be decoded\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":267},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":65549,"byte_end":65567,"line_start":718,"line_end":718,"column_start":5,"column_end":23},"name":"DelayedSendTooLate","qualname":"::hl::Error::DelayedSendTooLate","value":"Error::DelayedSendTooLate","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" A delayed frame could not be sent in time","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":269},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":65754,"byte_end":65779,"line_start":724,"line_end":724,"column_start":5,"column_end":30},"name":"DelayedSendPowerUpWarning","qualname":"::hl::Error::DelayedSendPowerUpWarning","value":"Error::DelayedSendPowerUpWarning","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Transmitter could not power up in time for delayed send","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":271},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":65851,"byte_end":65860,"line_start":727,"line_end":727,"column_start":5,"column_end":14},"name":"Ssmarshal","qualname":"::hl::Error::Ssmarshal","value":"Error::Ssmarshal(ssmarshal::Error)","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" An error occured while serializing or deserializing data\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":243},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":64623,"byte_end":64628,"line_start":677,"line_end":677,"column_start":10,"column_end":15},"name":"Error","qualname":"::hl::Error","value":"Error::{Spi, Fcs, Phy, BufferTooSmall, ReedSolomon, FrameWaitTimeout, Overrun, PreambleDetectionTimeout, SfdTimeout, Frame, DelayedSendTooLate, DelayedSendPowerUpWarning, Ssmarshal}","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":271}],"decl_id":null,"docs":" An error that can occur when sending or receiving data\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":283},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":67926,"byte_end":67939,"line_start":792,"line_end":792,"column_start":12,"column_end":25},"name":"Uninitialized","qualname":"::hl::Uninitialized","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates that the `DW1000` instance is not initialized yet\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":285},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":68014,"byte_end":68019,"line_start":795,"line_end":795,"column_start":12,"column_end":17},"name":"Ready","qualname":"::hl::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates that the `DW1000` instance is ready to be used\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4816},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":68075,"byte_end":68082,"line_start":800,"line_end":800,"column_start":12,"column_end":19},"name":"Message","qualname":"::hl::Message","value":"Message { rx_time, frame }","parent":null,"children":[{"krate":0,"index":4818},{"krate":0,"index":4819}],"decl_id":null,"docs":" An incoming message\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4818},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":68245,"byte_end":68252,"line_start":805,"line_end":805,"column_start":9,"column_end":16},"name":"rx_time","qualname":"::hl::Message::rx_time","value":"time::Instant","parent":{"krate":0,"index":4816},"children":[],"decl_id":null,"docs":" The time the message was received","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4819},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":68294,"byte_end":68299,"line_start":808,"line_end":808,"column_start":9,"column_end":14},"name":"frame","qualname":"::hl::Message::frame","value":"ieee802154::mac::Frame<'l>","parent":{"krate":0,"index":4816},"children":[],"decl_id":null,"docs":" The MAC frame\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":287},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/macros.rs","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":4823},{"krate":0,"index":4830}],"decl_id":null,"docs":" Contains some macros that are useful for working with this crate\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4825},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/macros.rs","byte_start":73754,"byte_end":73761,"line_start":187,"line_end":187,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::macros::TimeoutError::Timeout","value":"TimeoutError::Timeout","parent":{"krate":0,"index":4823},"children":[],"decl_id":null,"docs":" The operation timed out\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4827},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/macros.rs","byte_start":73798,"byte_end":73803,"line_start":190,"line_end":190,"column_start":5,"column_end":10},"name":"Other","qualname":"::macros::TimeoutError::Other","value":"TimeoutError::Other(T)","parent":{"krate":0,"index":4823},"children":[],"decl_id":null,"docs":" Another error occured\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4823},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/macros.rs","byte_start":73700,"byte_end":73712,"line_start":185,"line_end":185,"column_start":10,"column_end":22},"name":"TimeoutError","qualname":"::macros::TimeoutError","value":"TimeoutError::{Timeout, Other}","parent":null,"children":[{"krate":0,"index":4825},{"krate":0,"index":4827}],"decl_id":null,"docs":" An error that can either be a timeout or another error","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":290},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ranging","qualname":"::ranging","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":318},{"krate":0,"index":323},{"krate":0,"index":328},{"krate":0,"index":4833},{"krate":0,"index":4858},{"krate":0,"index":4842},{"krate":0,"index":4836},{"krate":0,"index":4860},{"krate":0,"index":4909},{"krate":0,"index":4868},{"krate":0,"index":4862},{"krate":0,"index":336},{"krate":0,"index":340},{"krate":0,"index":4911},{"krate":0,"index":4966},{"krate":0,"index":4921},{"krate":0,"index":4915},{"krate":0,"index":343},{"krate":0,"index":347},{"krate":0,"index":4968},{"krate":0,"index":5026},{"krate":0,"index":4979},{"krate":0,"index":4973},{"krate":0,"index":350},{"krate":0,"index":354},{"krate":0,"index":357}],"decl_id":null,"docs":" Implementation of double-sided two-way ranging","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":311},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":76611,"byte_end":76618,"line_start":83,"line_end":83,"column_start":11,"column_end":18},"name":"Message","qualname":"::ranging::Message","value":"Message: Sized + for<'de> Deserialize<'de> + Serialize","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"decl_id":null,"docs":" Implemented by all ranging messages\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":313},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":76724,"byte_end":76731,"line_start":85,"line_end":85,"column_start":11,"column_end":18},"name":"PRELUDE","qualname":"::ranging::Message::PRELUDE","value":"Prelude","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" A prelude that identifies the message\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":314},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":76914,"byte_end":76925,"line_start":91,"line_end":91,"column_start":11,"column_end":22},"name":"PRELUDE_LEN","qualname":"::ranging::Message::PRELUDE_LEN","value":"usize","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" The length of the message's prelude","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":315},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":77013,"byte_end":77016,"line_start":94,"line_end":94,"column_start":11,"column_end":14},"name":"LEN","qualname":"::ranging::Message::LEN","value":"usize","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" The length of the whole message, including prelude and data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":77524,"byte_end":77530,"line_start":105,"line_end":105,"column_start":8,"column_end":14},"name":"decode","qualname":"::ranging::Message::decode","value":"fn <SPI> (message: &hl::Message) -> Result<Option<RxMessage<Self>>, Error<SPI>>","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" Decodes a received message of this type","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":318},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":78528,"byte_end":78537,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"RxMessage","qualname":"::ranging::RxMessage","value":"RxMessage { rx_time, source, payload }","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"decl_id":null,"docs":" An incoming ranging message","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":320},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":78602,"byte_end":78609,"line_start":141,"line_end":141,"column_start":9,"column_end":16},"name":"rx_time","qualname":"::ranging::RxMessage::rx_time","value":"time::Instant","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" The time the message was received\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":321},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":78663,"byte_end":78669,"line_start":144,"line_end":144,"column_start":9,"column_end":15},"name":"source","qualname":"::ranging::RxMessage::source","value":"ieee802154::mac::Address","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" The source of the message\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":322},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":78719,"byte_end":78726,"line_start":147,"line_end":147,"column_start":9,"column_end":16},"name":"payload","qualname":"::ranging::RxMessage::payload","value":"T","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" The message data\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":323},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":78845,"byte_end":78854,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"TxMessage","qualname":"::ranging::TxMessage","value":"TxMessage { recipient, tx_time, payload }","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"decl_id":null,"docs":" An outgoing ranging message","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":325},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":79067,"byte_end":79076,"line_start":159,"line_end":159,"column_start":9,"column_end":18},"name":"recipient","qualname":"::ranging::TxMessage::recipient","value":"ieee802154::mac::Address","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" The recipient of the message","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":326},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":79359,"byte_end":79366,"line_start":166,"line_end":166,"column_start":9,"column_end":16},"name":"tx_time","qualname":"::ranging::TxMessage::tx_time","value":"time::Instant","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" The time this message is going to be sent","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":327},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":79421,"byte_end":79428,"line_start":169,"line_end":169,"column_start":9,"column_end":16},"name":"payload","qualname":"::ranging::TxMessage::payload","value":"T","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" The actual message payload\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":79737,"byte_end":79741,"line_start":178,"line_end":178,"column_start":12,"column_end":16},"name":"send","qualname":"<TxMessage<T>>::send","value":"fn <'r, SPI, CS> (&self, dw1000: &'r mut DW1000<SPI, CS, Ready>) -> Result<TxFuture<'r, SPI, CS>, Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Send this message via the DW1000","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4833},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":80791,"byte_end":80798,"line_start":212,"line_end":212,"column_start":12,"column_end":19},"name":"Prelude","qualname":"::ranging::Prelude","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sent before a message's data to identify the message\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":80769,"byte_end":80779,"line_start":211,"line_end":211,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":4860},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":81082,"byte_end":81086,"line_start":223,"line_end":223,"column_start":12,"column_end":16},"name":"Ping","qualname":"::ranging::Ping","value":"Ping { ping_tx_time }","parent":null,"children":[{"krate":0,"index":4861}],"decl_id":null,"docs":" Ranging ping message","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":81060,"byte_end":81070,"line_start":222,"line_end":222,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4861},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":81150,"byte_end":81162,"line_start":225,"line_end":225,"column_start":9,"column_end":21},"name":"ping_tx_time","qualname":"::ranging::Ping::ping_tx_time","value":"time::Instant","parent":{"krate":0,"index":4860},"children":[],"decl_id":null,"docs":" When the ping was sent, in local sender time\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":81497,"byte_end":81500,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"new","qualname":"<Ping>::new","value":"fn <SPI, CS> (dw1000: &mut DW1000<SPI, CS, Ready>) -> Result<TxMessage<Self>, Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ping message","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4911},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":82447,"byte_end":82454,"line_start":270,"line_end":270,"column_start":12,"column_end":19},"name":"Request","qualname":"::ranging::Request","value":"Request { ping_tx_time, ping_reply_time, request_tx_time }","parent":null,"children":[{"krate":0,"index":4912},{"krate":0,"index":4913},{"krate":0,"index":4914}],"decl_id":null,"docs":" Ranging request message","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":82425,"byte_end":82435,"line_start":269,"line_end":269,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4912},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":82534,"byte_end":82546,"line_start":272,"line_end":272,"column_start":9,"column_end":21},"name":"ping_tx_time","qualname":"::ranging::Request::ping_tx_time","value":"time::Instant","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":" When the original ping was sent, in local time on the anchor\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4913},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":82640,"byte_end":82655,"line_start":275,"line_end":275,"column_start":9,"column_end":24},"name":"ping_reply_time","qualname":"::ranging::Request::ping_reply_time","value":"time::Duration","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":" The time between the ping being received and the reply being sent\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4914},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":82740,"byte_end":82755,"line_start":278,"line_end":278,"column_start":9,"column_end":24},"name":"request_tx_time","qualname":"::ranging::Request::request_tx_time","value":"time::Instant","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":" When the ranging request was sent, in local sender time\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":83104,"byte_end":83107,"line_start":288,"line_end":288,"column_start":12,"column_end":15},"name":"new","qualname":"<Request>::new","value":"fn <SPI, CS> (dw1000: &mut DW1000<SPI, CS, Ready>, ping: RxMessage<Ping>) -> Result<TxMessage<Self>, Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ranging request message","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4968},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":84286,"byte_end":84294,"line_start":331,"line_end":331,"column_start":12,"column_end":20},"name":"Response","qualname":"::ranging::Response","value":"Response { ping_reply_time, ping_round_trip_time, request_tx_time, request_reply_time }","parent":null,"children":[{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4972}],"decl_id":null,"docs":" Ranging response message","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":84264,"byte_end":84274,"line_start":330,"line_end":330,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4969},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":84379,"byte_end":84394,"line_start":333,"line_end":333,"column_start":9,"column_end":24},"name":"ping_reply_time","qualname":"::ranging::Response::ping_reply_time","value":"time::Duration","parent":{"krate":0,"index":4968},"children":[],"decl_id":null,"docs":" The time between the ping being received and the reply being sent\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4970},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":84489,"byte_end":84509,"line_start":336,"line_end":336,"column_start":9,"column_end":29},"name":"ping_round_trip_time","qualname":"::ranging::Response::ping_round_trip_time","value":"time::Duration","parent":{"krate":0,"index":4968},"children":[],"decl_id":null,"docs":" The time between the ping being sent and the reply being received\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4971},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":84598,"byte_end":84613,"line_start":339,"line_end":339,"column_start":9,"column_end":24},"name":"request_tx_time","qualname":"::ranging::Response::request_tx_time","value":"time::Instant","parent":{"krate":0,"index":4968},"children":[],"decl_id":null,"docs":" The time the ranging request was sent, in local sender time\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4972},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":84708,"byte_end":84726,"line_start":342,"line_end":342,"column_start":9,"column_end":27},"name":"request_reply_time","qualname":"::ranging::Response::request_reply_time","value":"time::Duration","parent":{"krate":0,"index":4968},"children":[],"decl_id":null,"docs":" The time between the request being received and a reply being sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":85078,"byte_end":85081,"line_start":352,"line_end":352,"column_start":12,"column_end":15},"name":"new","qualname":"<Response>::new","value":"fn <SPI, CS> (dw1000: &mut DW1000<SPI, CS, Ready>, request: RxMessage<Request>) -> Result<TxMessage<Self>, Error<SPI>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ranging response message","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":357},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":86359,"byte_end":86378,"line_start":394,"line_end":394,"column_start":8,"column_end":27},"name":"compute_distance_mm","qualname":"::ranging::compute_distance_mm","value":"fn (response: &RxMessage<Response>) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Computes the distance to another node from a ranging response","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":359},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":5028},{"krate":0,"index":5059},{"krate":0,"index":5058},{"krate":0,"index":5056},{"krate":0,"index":5037},{"krate":0,"index":5031},{"krate":0,"index":365},{"krate":0,"index":369},{"krate":0,"index":5061},{"krate":0,"index":5092},{"krate":0,"index":5091},{"krate":0,"index":5089},{"krate":0,"index":5070},{"krate":0,"index":5064},{"krate":0,"index":372}],"decl_id":null,"docs":" Time-related types based on the DW1000's system time\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":364},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":87741,"byte_end":87749,"line_start":13,"line_end":13,"column_start":11,"column_end":19},"name":"TIME_MAX","qualname":"::time::TIME_MAX","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" The maximum value of 40-bit system time stamps.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5028},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":88111,"byte_end":88118,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::Instant","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents an instant in time","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":88089,"byte_end":88099,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":88759,"byte_end":88762,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Instant>::new","value":"fn (value: u64) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `Instant`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":89080,"byte_end":89085,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"value","qualname":"<Instant>::value","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw 40-bit timestamp","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":90372,"byte_end":90386,"line_start":98,"line_end":98,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"fn (&self, earlier: Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time passed between the two `Instant`s","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5061},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":91325,"byte_end":91333,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"Duration","qualname":"::time::Duration","value":"","parent":null,"children":[],"decl_id":null,"docs":" A duration between two instants in DW1000 system time","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":91303,"byte_end":91313,"line_start":127,"line_end":127,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":91983,"byte_end":91986,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"new","qualname":"<Duration>::new","value":"fn (value: u64) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `Duration`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":92223,"byte_end":92233,"line_start":163,"line_end":163,"column_start":12,"column_end":22},"name":"from_nanos","qualname":"<Duration>::from_nanos","value":"fn (nanos: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of `Duration` from a number of nanoseconds\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":92673,"byte_end":92678,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"value","qualname":"<Duration>::value","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw 40-bit timestamp","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":2537,"byte_end":2543,"line_start":40,"line_end":40,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":3072,"byte_end":3083,"line_start":60,"line_end":60,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":5484,"byte_end":5489,"line_start":147,"line_end":147,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37515,"byte_end":37524,"line_start":863,"line_end":863,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37643,"byte_end":37652,"line_start":869,"line_end":869,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37851,"byte_end":37857,"line_start":881,"line_end":881,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":38153,"byte_end":38154,"line_start":894,"line_end":894,"column_start":10,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":38552,"byte_end":38561,"line_start":910,"line_end":910,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":38680,"byte_end":38689,"line_start":916,"line_end":916,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":38884,"byte_end":38890,"line_start":928,"line_end":928,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":39285,"byte_end":39286,"line_start":948,"line_end":948,"column_start":10,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":39476,"byte_end":39477,"line_start":955,"line_end":955,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":41838,"byte_end":41844,"line_start":42,"line_end":42,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":45550,"byte_end":45556,"line_start":145,"line_end":145,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":188},{"krate":0,"index":195},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":54443,"byte_end":54449,"line_start":410,"line_end":410,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":55046,"byte_end":55054,"line_start":426,"line_end":426,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":58338,"byte_end":58346,"line_start":515,"line_end":515,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":65918,"byte_end":65923,"line_start":730,"line_end":730,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":66098,"byte_end":66103,"line_start":738,"line_end":738,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":66379,"byte_end":66384,"line_start":748,"line_end":748,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":79444,"byte_end":79453,"line_start":172,"line_end":172,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":81181,"byte_end":81185,"line_start":228,"line_end":228,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":82059,"byte_end":82063,"line_start":256,"line_end":256,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":82774,"byte_end":82781,"line_start":281,"line_end":281,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":83868,"byte_end":83875,"line_start":316,"line_end":316,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":84746,"byte_end":84754,"line_start":345,"line_end":345,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":86059,"byte_end":86067,"line_start":384,"line_end":384,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":88131,"byte_end":88138,"line_start":27,"line_end":27,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":90659,"byte_end":90666,"line_start":108,"line_end":108,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":91346,"byte_end":91354,"line_start":130,"line_end":130,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":1188,"byte_end":1190,"line_start":30,"line_end":30,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":1200,"byte_end":1202,"line_start":31,"line_end":31,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":124}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":1212,"byte_end":1218,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":287}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":1228,"byte_end":1235,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":290}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/lib.rs","byte_start":1245,"byte_end":1249,"line_start":34,"line_end":34,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":359}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":2537,"byte_end":2543,"line_start":40,"line_end":40,"column_start":15,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":11},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":3072,"byte_end":3083,"line_start":60,"line_end":60,"column_start":22,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":5484,"byte_end":5489,"line_start":147,"line_end":147,"column_start":26,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":42},"to":{"krate":1,"index":7604}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37515,"byte_end":37524,"line_start":863,"line_end":863,"column_start":19,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":69},"to":{"krate":0,"index":55}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37643,"byte_end":37652,"line_start":869,"line_end":869,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":69},"to":{"krate":0,"index":63}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":37851,"byte_end":37857,"line_start":881,"line_end":881,"column_start":15,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":11},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":38153,"byte_end":38154,"line_start":894,"line_end":894,"column_start":10,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":85},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":38552,"byte_end":38561,"line_start":910,"line_end":910,"column_start":19,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":91},"to":{"krate":0,"index":55}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":38680,"byte_end":38689,"line_start":916,"line_end":916,"column_start":19,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":91},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":38884,"byte_end":38890,"line_start":928,"line_end":928,"column_start":15,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":11},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":39285,"byte_end":39286,"line_start":948,"line_end":948,"column_start":10,"column_end":11},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ll.rs","byte_start":39476,"byte_end":39477,"line_start":955,"line_end":955,"column_start":25,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":110},"to":{"krate":1,"index":7604}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":41838,"byte_end":41844,"line_start":42,"line_end":42,"column_start":15,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":45550,"byte_end":45556,"line_start":145,"line_end":145,"column_start":15,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":54443,"byte_end":54449,"line_start":410,"line_end":410,"column_start":22,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":55046,"byte_end":55054,"line_start":426,"line_end":426,"column_start":19,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":58338,"byte_end":58346,"line_start":515,"line_end":515,"column_start":19,"column_end":27},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":65918,"byte_end":65923,"line_start":730,"line_end":730,"column_start":36,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":243},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":66098,"byte_end":66103,"line_start":738,"line_end":738,"column_start":38,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":243},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/hl.rs","byte_start":66379,"byte_end":66384,"line_start":748,"line_end":748,"column_start":26,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":243},"to":{"krate":1,"index":7604}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":76620,"byte_end":76625,"line_start":83,"line_end":83,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":1538},"to":{"krate":0,"index":311}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":76637,"byte_end":76648,"line_start":83,"line_end":83,"column_start":37,"column_end":48},"kind":"SuperTrait","from":{"krate":8,"index":835},"to":{"krate":0,"index":311}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":76656,"byte_end":76665,"line_start":83,"line_end":83,"column_start":56,"column_end":65},"kind":"SuperTrait","from":{"krate":8,"index":1212},"to":{"krate":0,"index":311}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":79444,"byte_end":79453,"line_start":172,"line_end":172,"column_start":9,"column_end":18},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":81181,"byte_end":81185,"line_start":228,"line_end":228,"column_start":6,"column_end":10},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":82059,"byte_end":82063,"line_start":256,"line_end":256,"column_start":18,"column_end":22},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4860},"to":{"krate":0,"index":311}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":82774,"byte_end":82781,"line_start":281,"line_end":281,"column_start":6,"column_end":13},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":83868,"byte_end":83875,"line_start":316,"line_end":316,"column_start":18,"column_end":25},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4911},"to":{"krate":0,"index":311}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":84746,"byte_end":84754,"line_start":345,"line_end":345,"column_start":6,"column_end":14},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/ranging.rs","byte_start":86059,"byte_end":86067,"line_start":384,"line_end":384,"column_start":18,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4968},"to":{"krate":0,"index":311}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":88131,"byte_end":88138,"line_start":27,"line_end":27,"column_start":6,"column_end":13},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":90659,"byte_end":90666,"line_start":108,"line_end":108,"column_start":24,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":5028},"to":{"krate":1,"index":1596}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/dw1000-0.1.0/src/time.rs","byte_start":91346,"byte_end":91354,"line_start":130,"line_end":130,"column_start":6,"column_end":14},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":5061},"to":{"krate":4294967295,"index":4294967295}}]}
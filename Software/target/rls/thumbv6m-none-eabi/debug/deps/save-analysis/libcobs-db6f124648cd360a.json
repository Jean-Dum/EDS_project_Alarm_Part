{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4","program":"/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cobs","--edition=2018","/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=1","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=db6f124648cd360a","-C","extra-filename=-db6f124648cd360a","--out-dir","/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps","--target","thumbv6m-none-eabi","-L","dependency=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps","-L","dependency=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libcobs-db6f124648cd360a.rmeta"},"prelude":{"crate_id":{"name":"cobs","disambiguator":[3028073128996228744,14129127013571398480]},"crate_root":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src","external_crates":[{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6948772717640016523,8206199524721505153]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13903862752718280198,3718181148960050896]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[1517153803586975564,2091417199493542624]}}],"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":0,"byte_end":14139,"line_start":1,"line_end":403,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":0,"byte_end":14139,"line_start":1,"line_end":403,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":32},{"krate":0,"index":38},{"krate":0,"index":4},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":41},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":60},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":38,"byte_end":44,"line_start":1,"line_end":1,"column_start":39,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":32},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":76,"byte_end":87,"line_start":4,"line_end":4,"column_start":12,"column_end":23},"name":"CobsEncoder","qualname":"::CobsEncoder","value":"CobsEncoder {  }","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":267,"byte_end":270,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<CobsEncoder>::new","value":"fn (out_buf: &'a mut [u8]) -> CobsEncoder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Create a new streaming Cobs Encoder\n","sig":null,"attributes":[{"value":"/ Create a new streaming Cobs Encoder","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":216,"byte_end":255,"line_start":13,"line_end":13,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":513,"byte_end":517,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"push","qualname":"<CobsEncoder>::push","value":"fn (&mut self, data: &[u8]) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Push a slice of data to be encoded\n","sig":null,"attributes":[{"value":"/ Push a slice of data to be encoded","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":463,"byte_end":501,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":1623,"byte_end":1631,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"finalize","qualname":"<CobsEncoder>::finalize","value":"fn (self) -> Result<usize, ()>","parent":null,"children":[],"decl_id":null,"docs":" Complete encoding of the output message. Does NOT terminate\n the message with the sentinel value\n","sig":null,"attributes":[{"value":"/ Complete encoding of the output message. Does NOT terminate","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":1504,"byte_end":1567,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ the message with the sentinel value","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":1572,"byte_end":1611,"line_start":55,"line_end":55,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":12},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2408,"byte_end":2414,"line_start":81,"line_end":81,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode","value":"fn (source: &[u8], dest: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Encodes the `source` buffer into the `dest` buffer.","sig":null,"attributes":[{"value":"/ Encodes the `source` buffer into the `dest` buffer.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":1995,"byte_end":2050,"line_start":71,"line_end":71,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2051,"byte_end":2054,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function uses the typical sentinel value of 0. It returns the number of bytes","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2055,"byte_end":2141,"line_start":73,"line_end":73,"column_start":1,"column_end":87}},{"value":"/ written to in the `dest` buffer.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2142,"byte_end":2178,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2179,"byte_end":2182,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2183,"byte_end":2195,"line_start":76,"line_end":76,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2196,"byte_end":2199,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the `dest` buffer is not large enough for the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2200,"byte_end":2277,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ encoded message. You can calculate the size the `dest` buffer needs to be with","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2278,"byte_end":2360,"line_start":79,"line_end":79,"column_start":1,"column_end":83}},{"value":"/ the `max_encoding_length` function.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2361,"byte_end":2400,"line_start":80,"line_end":80,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":13},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2985,"byte_end":3005,"line_start":94,"line_end":94,"column_start":8,"column_end":28},"name":"encode_with_sentinel","qualname":"::encode_with_sentinel","value":"fn (source: &[u8], dest: &mut [u8], sentinel: u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Encodes the `source` buffer into the `dest` buffer using an\n arbitrary sentinel value.","sig":null,"attributes":[{"value":"/ Encodes the `source` buffer into the `dest` buffer using an","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2561,"byte_end":2624,"line_start":87,"line_end":87,"column_start":1,"column_end":64}},{"value":"/ arbitrary sentinel value.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2625,"byte_end":2654,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2655,"byte_end":2658,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ This is done by first encoding the message with the typical sentinel value","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2659,"byte_end":2737,"line_start":90,"line_end":90,"column_start":1,"column_end":79}},{"value":"/ of 0, then XOR-ing each byte of the encoded message with the chosen sentinel","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2738,"byte_end":2818,"line_start":91,"line_end":91,"column_start":1,"column_end":81}},{"value":"/ value. This will ensure that the sentinel value doesn't show up in the encoded","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2819,"byte_end":2901,"line_start":92,"line_end":92,"column_start":1,"column_end":83}},{"value":"/ message. See the paper \"Consistent Overhead Byte Stuffing\" for details.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2902,"byte_end":2977,"line_start":93,"line_end":93,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":41},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":3921,"byte_end":3932,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"CobsDecoder","qualname":"::CobsDecoder","value":"CobsDecoder {  }","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":4720,"byte_end":4723,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"new","qualname":"<CobsDecoder>::new","value":"fn (dest: &'a mut [u8]) -> CobsDecoder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Create a new streaming Cobs Decoder. Provide the output buffer\n for the decoded message to be placed in\n","sig":null,"attributes":[{"value":"/ Create a new streaming Cobs Decoder. Provide the output buffer","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":4594,"byte_end":4660,"line_start":155,"line_end":155,"column_start":5,"column_end":71}},{"value":"/ for the decoded message to be placed in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":4665,"byte_end":4708,"line_start":156,"line_end":156,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":5312,"byte_end":5316,"line_start":173,"line_end":173,"column_start":12,"column_end":16},"name":"feed","qualname":"<CobsDecoder>::feed","value":"fn (&mut self, data: u8) -> Result<Option<usize>, usize>","parent":null,"children":[],"decl_id":null,"docs":" Push a single byte into the streaming CobsDecoder. Return values mean:","sig":null,"attributes":[{"value":"/ Push a single byte into the streaming CobsDecoder. Return values mean:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":4890,"byte_end":4964,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":4969,"byte_end":4972,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ * Ok(None) - State machine okay, more data needed","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":4977,"byte_end":5030,"line_start":167,"line_end":167,"column_start":5,"column_end":58}},{"value":"/ * Ok(Some(N)) - A message of N bytes was successfully decoded","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":5035,"byte_end":5100,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ * Err(M) - Message decoding failed, and M bytes were written to output","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":5105,"byte_end":5179,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":5184,"byte_end":5187,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ NOTE: Sentinel value must be included in the input to this function for the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":5192,"byte_end":5271,"line_start":171,"line_end":171,"column_start":5,"column_end":84}},{"value":"/ decoding to complete","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":5276,"byte_end":5300,"line_start":172,"line_end":172,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":9851,"byte_end":9855,"line_start":273,"line_end":273,"column_start":12,"column_end":16},"name":"push","qualname":"<CobsDecoder>::push","value":"fn (&mut self, data: &[u8]) -> Result<Option<(usize, usize)>, usize>","parent":null,"children":[],"decl_id":null,"docs":" Push a slice of bytes into the streaming CobsDecoder. Return values mean:","sig":null,"attributes":[{"value":"/ Push a slice of bytes into the streaming CobsDecoder. Return values mean:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":9363,"byte_end":9440,"line_start":264,"line_end":264,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":9445,"byte_end":9448,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * Ok(None) - State machine okay, more data needed","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":9453,"byte_end":9506,"line_start":266,"line_end":266,"column_start":5,"column_end":58}},{"value":"/ * Ok(Some((N, M))) - A message of N bytes was successfully decoded,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":9511,"byte_end":9582,"line_start":267,"line_end":267,"column_start":5,"column_end":76}},{"value":"/     using M bytes from `data` (and earlier data)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":9587,"byte_end":9639,"line_start":268,"line_end":268,"column_start":5,"column_end":57}},{"value":"/ * Err(J) - Message decoding failed, and J bytes were written to output","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":9644,"byte_end":9718,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":9723,"byte_end":9726,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ NOTE: Sentinel value must be included in the input to this function for the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":9731,"byte_end":9810,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/ decoding to complete","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":9815,"byte_end":9839,"line_start":272,"line_end":272,"column_start":5,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11628,"byte_end":11634,"line_start":332,"line_end":332,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode","value":"fn (source: &[u8], dest: &mut [u8]) -> Result<usize, ()>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the `source` buffer into the `dest` buffer.","sig":null,"attributes":[{"value":"/ Decodes the `source` buffer into the `dest` buffer.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11061,"byte_end":11116,"line_start":317,"line_end":317,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11117,"byte_end":11120,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ This function uses the typical sentinel value of 0.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11121,"byte_end":11176,"line_start":319,"line_end":319,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11177,"byte_end":11180,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ # Failures","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11181,"byte_end":11195,"line_start":321,"line_end":321,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11196,"byte_end":11199,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ This will return `Err(())` if there was a decoding error. Otherwise,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11200,"byte_end":11272,"line_start":323,"line_end":323,"column_start":1,"column_end":73}},{"value":"/ it will return `Ok(n)` where `n` is the length of the decoded message.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11273,"byte_end":11347,"line_start":324,"line_end":324,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11348,"byte_end":11351,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11352,"byte_end":11364,"line_start":326,"line_end":326,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11365,"byte_end":11368,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the `dest` buffer is not large enough for the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11369,"byte_end":11446,"line_start":328,"line_end":328,"column_start":1,"column_end":78}},{"value":"/ decoded message. Since an encoded message as always larger than a decoded","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11447,"byte_end":11524,"line_start":329,"line_end":329,"column_start":1,"column_end":78}},{"value":"/ message, it may be a good idea to make the `dest` buffer as big as the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11525,"byte_end":11599,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/ `source` buffer.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11600,"byte_end":11620,"line_start":331,"line_end":331,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":12128,"byte_end":12143,"line_start":348,"line_end":348,"column_start":8,"column_end":23},"name":"decode_in_place","qualname":"::decode_in_place","value":"fn (buff: &mut [u8]) -> Result<usize, ()>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a message in-place.","sig":null,"attributes":[{"value":"/ Decodes a message in-place.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11942,"byte_end":11973,"line_start":344,"line_end":344,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11974,"byte_end":11977,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ This is the same function as `decode`, but replaces the encoded message","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11978,"byte_end":12053,"line_start":346,"line_end":346,"column_start":1,"column_end":76}},{"value":"/ with the decoded message instead of writing to another buffer.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":12054,"byte_end":12120,"line_start":347,"line_end":347,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":12557,"byte_end":12577,"line_start":357,"line_end":357,"column_start":8,"column_end":28},"name":"decode_with_sentinel","qualname":"::decode_with_sentinel","value":"fn (source: &[u8], dest: &mut [u8], sentinel: u8) -> Result<usize, ()>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the `source` buffer into the `dest` buffer using an arbitrary sentinel value.","sig":null,"attributes":[{"value":"/ Decodes the `source` buffer into the `dest` buffer using an arbitrary sentinel value.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":12214,"byte_end":12303,"line_start":352,"line_end":352,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":12304,"byte_end":12307,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ This is done by XOR-ing each byte of the source message with the chosen sentinel value,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":12308,"byte_end":12399,"line_start":354,"line_end":354,"column_start":1,"column_end":92}},{"value":"/ which transforms the message into the same message encoded with a sentinel value of 0.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":12400,"byte_end":12490,"line_start":355,"line_end":355,"column_start":1,"column_end":91}},{"value":"/ Then the regular decoding transformation is performed.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":12491,"byte_end":12549,"line_start":356,"line_end":356,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":12837,"byte_end":12866,"line_start":365,"line_end":365,"column_start":8,"column_end":37},"name":"decode_in_place_with_sentinel","qualname":"::decode_in_place_with_sentinel","value":"fn (buff: &mut [u8], sentinel: u8) -> Result<usize, ()>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a message in-place using an arbitrary sentinel value.\n","sig":null,"attributes":[{"value":"/ Decodes a message in-place using an arbitrary sentinel value.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":12764,"byte_end":12829,"line_start":364,"line_end":364,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":14009,"byte_end":14028,"line_start":401,"line_end":401,"column_start":8,"column_end":27},"name":"max_encoding_length","qualname":"::max_encoding_length","value":"fn (source_len: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Calculates the maximum possible size of an encoded message given the length\n of the source message. This may be useful for calculating how large the\n `dest` buffer needs to be in the encoding functions.\n","sig":null,"attributes":[{"value":"/ Calculates the maximum possible size of an encoded message given the length","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":13789,"byte_end":13868,"line_start":398,"line_end":398,"column_start":1,"column_end":80}},{"value":"/ of the source message. This may be useful for calculating how large the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":13869,"byte_end":13944,"line_start":399,"line_end":399,"column_start":1,"column_end":76}},{"value":"/ `dest` buffer needs to be in the encoding functions.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":13945,"byte_end":14001,"line_start":400,"line_end":400,"column_start":1,"column_end":57}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":193,"byte_end":204,"line_start":11,"line_end":11,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":11}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":4571,"byte_end":4582,"line_start":153,"line_end":153,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":193,"byte_end":204,"line_start":11,"line_end":11,"column_start":10,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":32},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":4571,"byte_end":4582,"line_start":153,"line_end":153,"column_start":10,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":41},"to":{"krate":4294967295,"index":4294967295}}]}
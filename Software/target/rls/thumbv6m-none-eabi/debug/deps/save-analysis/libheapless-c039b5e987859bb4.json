{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3","program":"/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","heapless","--edition=2018","/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=1","-C","debuginfo=2","-C","debug-assertions=on","--cfg","feature=\"cas\"","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","-C","metadata=c039b5e987859bb4","-C","extra-filename=-c039b5e987859bb4","--out-dir","/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps","--target","thumbv6m-none-eabi","-L","dependency=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps","-L","dependency=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/debug/deps","--extern","as_slice=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libas_slice-5e14b77cade90694.rmeta","--extern","generic_array=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libgeneric_array-635e07d531fea268.rmeta","--extern","hash32=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libhash32-5316869ce342d642.rmeta","--extern","serde=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libserde-6303db5f85d5d3d7.rmeta","--cap-lints","allow","--cfg","armv6m","--cfg","has_atomics","--error-format=json","--sysroot","/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libheapless-c039b5e987859bb4.rmeta"},"prelude":{"crate_id":{"name":"heapless","disambiguator":[15969685364878953236,13439520755602451089]},"crate_root":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src","external_crates":[{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6948772717640016523,8206199524721505153]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13903862752718280198,3718181148960050896]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[1517153803586975564,2091417199493542624]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","num":4,"id":{"name":"generic_array","disambiguator":[3551434372089602315,1316612288215471683]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","num":5,"id":{"name":"typenum","disambiguator":[15357975060537762515,11335347814899673141]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","num":6,"id":{"name":"hash32","disambiguator":[11106152591252844062,10798671999050364467]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","num":7,"id":{"name":"byteorder","disambiguator":[5964677151743033664,1191805427174745702]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","num":8,"id":{"name":"serde","disambiguator":[13576132935127435335,6273486994137477735]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","num":9,"id":{"name":"serde_derive","disambiguator":[3443426003154805144,18422538501272665367]}}],"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":0,"byte_end":3903,"line_start":1,"line_end":100,"column_start":1,"column_end":12}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1106},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3269,"byte_end":3279,"line_start":70,"line_end":70,"column_start":22,"column_end":32},"alias_span":null,"name":"BinaryHeap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":2001},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3313,"byte_end":3319,"line_start":71,"line_end":71,"column_start":33,"column_end":39},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":343},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3344,"byte_end":3355,"line_start":72,"line_end":72,"column_start":24,"column_end":35},"alias_span":null,"name":"ArrayLength","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":38},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3376,"byte_end":3387,"line_start":73,"line_end":73,"column_start":20,"column_end":31},"alias_span":null,"name":"FnvIndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3389,"byte_end":3397,"line_start":73,"line_end":73,"column_start":33,"column_end":41},"alias_span":null,"name":"IndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":275},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3419,"byte_end":3430,"line_start":74,"line_end":74,"column_start":20,"column_end":31},"alias_span":null,"name":"FnvIndexSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":278},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3432,"byte_end":3440,"line_start":74,"line_end":74,"column_start":33,"column_end":41},"alias_span":null,"name":"IndexSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":440},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3463,"byte_end":3472,"line_start":75,"line_end":75,"column_start":21,"column_end":30},"alias_span":null,"name":"LinearMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":612},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3490,"byte_end":3496,"line_start":76,"line_end":76,"column_start":17,"column_end":23},"alias_span":null,"name":"String","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":725},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3511,"byte_end":3514,"line_start":77,"line_end":77,"column_start":14,"column_end":17},"alias_span":null,"name":"Vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":138317,"byte_end":138325,"line_start":92,"line_end":92,"column_start":17,"column_end":25},"alias_span":null,"name":"Consumer","value":"","parent":{"krate":0,"index":1235}},{"kind":"Use","ref_id":{"krate":0,"index":1282},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":138327,"byte_end":138335,"line_start":92,"line_end":92,"column_start":27,"column_end":35},"alias_span":null,"name":"Producer","value":"","parent":{"krate":0,"index":1235}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":0,"byte_end":3903,"line_start":1,"line_end":100,"column_start":1,"column_end":12},"name":"","qualname":"::","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":256},{"krate":0,"index":425},{"krate":0,"index":593},{"krate":0,"index":691},{"krate":0,"index":862},{"krate":0,"index":1027},{"krate":0,"index":1084},{"krate":0,"index":1206},{"krate":0,"index":1235},{"krate":0,"index":1436}],"decl_id":null,"docs":" `static` friendly data structures that don't require dynamic memory allocation","sig":null,"attributes":[{"value":"! `static` friendly data structures that don't require dynamic memory allocation","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":0,"byte_end":82,"line_start":1,"line_end":1,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":83,"byte_end":86,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The core principle behind `heapless` is that its data structures are backed by a *static* memory","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":87,"byte_end":187,"line_start":3,"line_end":3,"column_start":1,"column_end":101}},{"value":"! allocation. For example, you can think of `heapless::Vec` as an alternative version of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":188,"byte_end":278,"line_start":4,"line_end":4,"column_start":1,"column_end":91}},{"value":"! `std::Vec` with fixed capacity and that can't be re-allocated on the fly (e.g. via `push`).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":279,"byte_end":374,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":375,"byte_end":378,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! All `heapless` data structures store their memory allocation *inline* and specify their capacity","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":379,"byte_end":479,"line_start":7,"line_end":7,"column_start":1,"column_end":101}},{"value":"! via their type parameter `N`. This means that you can instantiate a `heapless` data structure on","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":480,"byte_end":580,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"! the stack, in a `static` variable, or even in the heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":581,"byte_end":640,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":641,"byte_end":644,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":645,"byte_end":652,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"! use heapless::Vec; // fixed capacity `std::Vec`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":653,"byte_end":704,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"! use heapless::consts::U8; // type level integer used to specify capacity","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":705,"byte_end":781,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":782,"byte_end":785,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! // on the stack","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":786,"byte_end":805,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"! let mut xs: Vec<u8, U8> = Vec::new(); // can hold up to 8 elements","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":806,"byte_end":876,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"! xs.push(42).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":877,"byte_end":902,"line_start":17,"line_end":17,"column_start":1,"column_end":26}},{"value":"! assert_eq!(xs.pop(), Some(42));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":903,"byte_end":938,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":939,"byte_end":942,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! // in a `static` variable","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":943,"byte_end":972,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"! // (because `const-fn` has not been fully stabilized you need to use the helper structs in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":973,"byte_end":1067,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"! // the `i` module, which must be wrapped in a tuple struct)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1068,"byte_end":1131,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"! static mut XS: Vec<u8, U8> = Vec(heapless::i::Vec::new());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1132,"byte_end":1194,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1195,"byte_end":1198,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! let xs = unsafe { &mut XS };","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1199,"byte_end":1231,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1232,"byte_end":1235,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! xs.push(42);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1236,"byte_end":1252,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"! assert_eq!(xs.pop(), Some(42));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1253,"byte_end":1288,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1289,"byte_end":1292,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! // in the heap (though kind of pointless because no reallocation)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1293,"byte_end":1362,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"! let mut ys: Box<Vec<u8, U8>> = Box::new(Vec::new());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1363,"byte_end":1419,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"! ys.push(42).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1420,"byte_end":1445,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"! assert_eq!(ys.pop(), Some(42));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1446,"byte_end":1481,"line_start":33,"line_end":33,"column_start":1,"column_end":36}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1482,"byte_end":1489,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1490,"byte_end":1493,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! Because they have fixed capacity `heapless` data structures don't implicitly reallocate. This","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1494,"byte_end":1591,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"! means that operations like `heapless::Vec.push` are *truly* constant time rather than amortized","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1592,"byte_end":1691,"line_start":37,"line_end":37,"column_start":1,"column_end":100}},{"value":"! constant time with potentially unbounded (depends on the allocator) worst case execution time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1692,"byte_end":1789,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"! (which is bad / unacceptable for hard real time applications).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1790,"byte_end":1856,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1857,"byte_end":1860,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! `heapless` data structures don't use a memory allocator which means no risk of an uncatchable","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1861,"byte_end":1958,"line_start":41,"line_end":41,"column_start":1,"column_end":98}},{"value":"! Out Of Memory (OOM) condition while performing operations on them. It's certainly possible to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":1959,"byte_end":2056,"line_start":42,"line_end":42,"column_start":1,"column_end":98}},{"value":"! run out of capacity while growing `heapless` data structures, but the API lets you handle this","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2057,"byte_end":2155,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"! possibility by returning a `Result` on operations that may exhaust the capacity of the data","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2156,"byte_end":2251,"line_start":44,"line_end":44,"column_start":1,"column_end":96}},{"value":"! structure.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2252,"byte_end":2266,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2267,"byte_end":2270,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! List of currently implemented data structures:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2271,"byte_end":2321,"line_start":47,"line_end":47,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2322,"byte_end":2325,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! - [`BinaryHeap`](binary_heap/struct.BinaryHeap.html) -- priority queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2326,"byte_end":2400,"line_start":49,"line_end":49,"column_start":1,"column_end":75}},{"value":"! - [`IndexMap`](struct.IndexMap.html) -- hash table","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2401,"byte_end":2455,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"! - [`IndexSet`](struct.IndexSet.html) -- hash set","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2456,"byte_end":2508,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"! - [`LinearMap`](struct.LinearMap.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2509,"byte_end":2551,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"! - [`Pool`](pool/struct.Pool.html) -- lock-free memory pool","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2552,"byte_end":2614,"line_start":53,"line_end":53,"column_start":1,"column_end":63}},{"value":"! - [`String`](struct.String.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2615,"byte_end":2651,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"! - [`Vec`](struct.Vec.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2652,"byte_end":2682,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"! - [`mpmc::Q*`](mpmc/index.html) -- multiple producer multiple consumer lock-free queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2683,"byte_end":2773,"line_start":56,"line_end":56,"column_start":1,"column_end":91}},{"value":"! - [`spsc::Queue`](spsc/struct.Queue.html) -- single producer single consumer lock-free queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2774,"byte_end":2870,"line_start":57,"line_end":57,"column_start":1,"column_end":97}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2871,"byte_end":2874,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! # Minimum Supported Rust Version (MSRV)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2875,"byte_end":2918,"line_start":59,"line_end":59,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2919,"byte_end":2922,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! This crate is guaranteed to compile on stable Rust 1.36 and up with its default set of features.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":2923,"byte_end":3023,"line_start":61,"line_end":61,"column_start":1,"column_end":101}},{"value":"! It *might* compile on older versions but that may change in any new patch release.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3024,"byte_end":3110,"line_start":62,"line_end":62,"column_start":1,"column_end":87}},{"value":"no_std","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3135,"byte_end":3141,"line_start":64,"line_end":64,"column_start":24,"column_end":30}},{"value":"deny(missing_docs)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3144,"byte_end":3166,"line_start":65,"line_end":65,"column_start":1,"column_end":23}},{"value":"deny(rust_2018_compatibility)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3167,"byte_end":3200,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"deny(rust_2018_idioms)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3201,"byte_end":3227,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"deny(warnings)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3228,"byte_end":3246,"line_start":68,"line_end":68,"column_start":1,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":38},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":4256,"byte_end":4267,"line_start":16,"line_end":16,"column_start":10,"column_end":21},"name":"FnvIndexMap","qualname":"::indexmap::FnvIndexMap","value":"IndexMap<K, V, N, BuildHasherDefault<FnvHasher>>","parent":null,"children":[],"decl_id":null,"docs":" An `IndexMap` using the default FNV hasher\n","sig":null,"attributes":[{"value":"/ An `IndexMap` using the default FNV hasher","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":4200,"byte_end":4246,"line_start":15,"line_end":15,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1509},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":4691,"byte_end":4697,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"Bucket","qualname":"::indexmap::Bucket","value":"Bucket {  }","parent":null,"children":[{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1519},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":4816,"byte_end":4819,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"Pos","qualname":"::indexmap::Pos","value":"Pos {  }","parent":null,"children":[{"krate":0,"index":1520}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":83},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14366,"byte_end":14374,"line_start":329,"line_end":329,"column_start":12,"column_end":20},"name":"IndexMap","qualname":"::indexmap::IndexMap","value":"IndexMap {  }","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":" Fixed capacity [`IndexMap`](https://docs.rs/indexmap/1/indexmap/map/struct.IndexMap.html)","sig":null,"attributes":[{"value":"/ Fixed capacity [`IndexMap`](https://docs.rs/indexmap/1/indexmap/map/struct.IndexMap.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":12742,"byte_end":12835,"line_start":287,"line_end":287,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":12836,"byte_end":12839,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ Note that the capacity of the `IndexMap` must be a power of 2.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":12840,"byte_end":12906,"line_start":289,"line_end":289,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":12907,"byte_end":12910,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":12911,"byte_end":12925,"line_start":291,"line_end":291,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":12926,"byte_end":12929,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":12930,"byte_end":12937,"line_start":293,"line_end":293,"column_start":1,"column_end":8}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":12938,"byte_end":12968,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":12969,"byte_end":12997,"line_start":295,"line_end":295,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":12998,"byte_end":13001,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ // A hash map with a capacity of 16 key-value pairs allocated on the stack","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13002,"byte_end":13080,"line_start":297,"line_end":297,"column_start":1,"column_end":79}},{"value":"/ let mut book_reviews = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13081,"byte_end":13140,"line_start":298,"line_end":298,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13141,"byte_end":13144,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ // review some books.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13145,"byte_end":13170,"line_start":300,"line_end":300,"column_start":1,"column_end":26}},{"value":"/ book_reviews.insert(\"Adventures of Huckleberry Finn\",    \"My favorite book.\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13171,"byte_end":13262,"line_start":301,"line_end":301,"column_start":1,"column_end":92}},{"value":"/ book_reviews.insert(\"Grimms' Fairy Tales\",               \"Masterpiece.\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13263,"byte_end":13349,"line_start":302,"line_end":302,"column_start":1,"column_end":87}},{"value":"/ book_reviews.insert(\"Pride and Prejudice\",               \"Very enjoyable.\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13350,"byte_end":13439,"line_start":303,"line_end":303,"column_start":1,"column_end":90}},{"value":"/ book_reviews.insert(\"The Adventures of Sherlock Holmes\", \"Eye lyked it alot.\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13440,"byte_end":13532,"line_start":304,"line_end":304,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13533,"byte_end":13536,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ // check for a specific one.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13537,"byte_end":13569,"line_start":306,"line_end":306,"column_start":1,"column_end":33}},{"value":"/ if !book_reviews.contains_key(\"Les Misérables\") {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13570,"byte_end":13624,"line_start":307,"line_end":307,"column_start":1,"column_end":54}},{"value":"/     println!(\"We've got {} reviews, but Les Misérables ain't one.\",","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13625,"byte_end":13697,"line_start":308,"line_end":308,"column_start":1,"column_end":72}},{"value":"/              book_reviews.len());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13698,"byte_end":13735,"line_start":309,"line_end":309,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13736,"byte_end":13741,"line_start":310,"line_end":310,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13742,"byte_end":13745,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ // oops, this review has a lot of spelling mistakes, let's delete it.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13746,"byte_end":13819,"line_start":312,"line_end":312,"column_start":1,"column_end":74}},{"value":"/ book_reviews.remove(\"The Adventures of Sherlock Holmes\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13820,"byte_end":13881,"line_start":313,"line_end":313,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13882,"byte_end":13885,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ // look up the values associated with some keys.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13886,"byte_end":13938,"line_start":315,"line_end":315,"column_start":1,"column_end":53}},{"value":"/ let to_find = [\"Pride and Prejudice\", \"Alice's Adventure in Wonderland\"];","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":13939,"byte_end":14016,"line_start":316,"line_end":316,"column_start":1,"column_end":78}},{"value":"/ for book in &to_find {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14017,"byte_end":14043,"line_start":317,"line_end":317,"column_start":1,"column_end":27}},{"value":"/     match book_reviews.get(book) {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14044,"byte_end":14082,"line_start":318,"line_end":318,"column_start":1,"column_end":39}},{"value":"/         Some(review) => println!(\"{}: {}\", book, review),","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14083,"byte_end":14144,"line_start":319,"line_end":319,"column_start":1,"column_end":62}},{"value":"/         None => println!(\"{} is unreviewed.\", book)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14145,"byte_end":14200,"line_start":320,"line_end":320,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14201,"byte_end":14210,"line_start":321,"line_end":321,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14211,"byte_end":14216,"line_start":322,"line_end":322,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14217,"byte_end":14220,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ // iterate over everything.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14221,"byte_end":14252,"line_start":324,"line_end":324,"column_start":1,"column_end":32}},{"value":"/ for (book, review) in &book_reviews {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14253,"byte_end":14294,"line_start":325,"line_end":325,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}: \\\"{}\\\"\", book, review);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14295,"byte_end":14340,"line_start":326,"line_end":326,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14341,"byte_end":14346,"line_start":327,"line_end":327,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14347,"byte_end":14354,"line_start":328,"line_end":328,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14913,"byte_end":14916,"line_start":348,"line_end":348,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexMap<K, V, N, BuildHasherDefault<S>>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `IndexMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `IndexMap`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14788,"byte_end":14820,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14825,"byte_end":14828,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ **NOTE** This constructor will become a `const fn` in the future","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14833,"byte_end":14901,"line_start":347,"line_end":347,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15291,"byte_end":15299,"line_start":364,"line_end":364,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexMap<K, V, N, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold\n","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15228,"byte_end":15279,"line_start":363,"line_end":363,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15783,"byte_end":15787,"line_start":383,"line_end":383,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexMap<K, V, N, S>>::keys","value":"fn (&self) -> impl Iterator<Item = &K>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over the keys of the map, in their order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15351,"byte_end":15414,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15419,"byte_end":15422,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15427,"byte_end":15434,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15439,"byte_end":15469,"line_start":371,"line_end":371,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15474,"byte_end":15502,"line_start":372,"line_end":372,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15507,"byte_end":15510,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15515,"byte_end":15565,"line_start":374,"line_end":374,"column_start":5,"column_end":55}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15570,"byte_end":15602,"line_start":375,"line_end":375,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15607,"byte_end":15639,"line_start":376,"line_end":376,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15644,"byte_end":15676,"line_start":377,"line_end":377,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15681,"byte_end":15684,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15689,"byte_end":15716,"line_start":379,"line_end":379,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15721,"byte_end":15749,"line_start":380,"line_end":380,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15754,"byte_end":15759,"line_start":381,"line_end":381,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15764,"byte_end":15771,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16331,"byte_end":16337,"line_start":402,"line_end":402,"column_start":12,"column_end":18},"name":"values","qualname":"<IndexMap<K, V, N, S>>::values","value":"fn (&self) -> impl Iterator<Item = &V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the map, in their order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15895,"byte_end":15960,"line_start":387,"line_end":387,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15965,"byte_end":15968,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15973,"byte_end":15980,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15985,"byte_end":16015,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16020,"byte_end":16048,"line_start":391,"line_end":391,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16053,"byte_end":16056,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16061,"byte_end":16111,"line_start":393,"line_end":393,"column_start":5,"column_end":55}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16116,"byte_end":16148,"line_start":394,"line_end":394,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16153,"byte_end":16185,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16190,"byte_end":16222,"line_start":396,"line_end":396,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16227,"byte_end":16230,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16235,"byte_end":16264,"line_start":398,"line_end":398,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16269,"byte_end":16297,"line_start":399,"line_end":399,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16302,"byte_end":16307,"line_start":400,"line_end":400,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16312,"byte_end":16319,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16989,"byte_end":16999,"line_start":425,"line_end":425,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<IndexMap<K, V, N, S>>::values_mut","value":"fn (&mut self) -> impl Iterator<Item = &mut V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the the values of the map, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over mutable references to the the values of the map, in their order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16447,"byte_end":16538,"line_start":406,"line_end":406,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16543,"byte_end":16546,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16551,"byte_end":16558,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16563,"byte_end":16593,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16598,"byte_end":16626,"line_start":410,"line_end":410,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16631,"byte_end":16634,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16639,"byte_end":16689,"line_start":412,"line_end":412,"column_start":5,"column_end":55}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16694,"byte_end":16726,"line_start":413,"line_end":413,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16731,"byte_end":16763,"line_start":414,"line_end":414,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16768,"byte_end":16800,"line_start":415,"line_end":415,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16805,"byte_end":16808,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ for val in map.values_mut() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16813,"byte_end":16846,"line_start":417,"line_end":417,"column_start":5,"column_end":38}},{"value":"/     *val += 10;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16851,"byte_end":16870,"line_start":418,"line_end":418,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16875,"byte_end":16880,"line_start":419,"line_end":419,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16885,"byte_end":16888,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16893,"byte_end":16922,"line_start":421,"line_end":421,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16927,"byte_end":16955,"line_start":422,"line_end":422,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16960,"byte_end":16965,"line_start":423,"line_end":423,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":16970,"byte_end":16977,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17593,"byte_end":17597,"line_start":444,"line_end":444,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexMap<K, V, N, S>>::iter","value":"fn (&self) -> Iter<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17125,"byte_end":17199,"line_start":429,"line_end":429,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17204,"byte_end":17207,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17212,"byte_end":17219,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17224,"byte_end":17254,"line_start":432,"line_end":432,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17259,"byte_end":17287,"line_start":433,"line_end":433,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17292,"byte_end":17295,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17300,"byte_end":17350,"line_start":435,"line_end":435,"column_start":5,"column_end":55}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17355,"byte_end":17387,"line_start":436,"line_end":436,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17392,"byte_end":17424,"line_start":437,"line_end":437,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17429,"byte_end":17461,"line_start":438,"line_end":438,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17466,"byte_end":17469,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in map.iter() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17474,"byte_end":17508,"line_start":440,"line_end":440,"column_start":5,"column_end":39}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17513,"byte_end":17559,"line_start":441,"line_end":441,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17564,"byte_end":17569,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17574,"byte_end":17581,"line_start":443,"line_end":443,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18248,"byte_end":18256,"line_start":469,"line_end":469,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<IndexMap<K, V, N, S>>::iter_mut","value":"fn (&mut self) -> IterMut<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17705,"byte_end":17779,"line_start":450,"line_end":450,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17784,"byte_end":17787,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17792,"byte_end":17799,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17804,"byte_end":17834,"line_start":453,"line_end":453,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17839,"byte_end":17867,"line_start":454,"line_end":454,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17872,"byte_end":17875,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17880,"byte_end":17930,"line_start":456,"line_end":456,"column_start":5,"column_end":55}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17935,"byte_end":17967,"line_start":457,"line_end":457,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":17972,"byte_end":18004,"line_start":458,"line_end":458,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18009,"byte_end":18041,"line_start":459,"line_end":459,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18046,"byte_end":18049,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ for (_, val) in map.iter_mut() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18054,"byte_end":18090,"line_start":461,"line_end":461,"column_start":5,"column_end":41}},{"value":"/     *val = 2;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18095,"byte_end":18112,"line_start":462,"line_end":462,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18117,"byte_end":18122,"line_start":463,"line_end":463,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18127,"byte_end":18130,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in &map {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18135,"byte_end":18163,"line_start":465,"line_end":465,"column_start":5,"column_end":33}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18168,"byte_end":18214,"line_start":466,"line_end":466,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18219,"byte_end":18224,"line_start":467,"line_end":467,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18229,"byte_end":18236,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18819,"byte_end":18822,"line_start":491,"line_end":491,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexMap<K, V, N, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Return the number of key-value pairs in the map.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18452,"byte_end":18504,"line_start":478,"line_end":478,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18509,"byte_end":18512,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18517,"byte_end":18547,"line_start":480,"line_end":480,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18552,"byte_end":18555,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18560,"byte_end":18567,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18572,"byte_end":18602,"line_start":483,"line_end":483,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18607,"byte_end":18635,"line_start":484,"line_end":484,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18640,"byte_end":18643,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ let mut a = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18648,"byte_end":18696,"line_start":486,"line_end":486,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18701,"byte_end":18728,"line_start":487,"line_end":487,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18733,"byte_end":18763,"line_start":488,"line_end":488,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18768,"byte_end":18795,"line_start":489,"line_end":489,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18800,"byte_end":18807,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19238,"byte_end":19246,"line_start":508,"line_end":508,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexMap<K, V, N, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18884,"byte_end":18933,"line_start":495,"line_end":495,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18938,"byte_end":18941,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18946,"byte_end":18976,"line_start":497,"line_end":497,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18981,"byte_end":18984,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":18989,"byte_end":18996,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19001,"byte_end":19031,"line_start":500,"line_end":500,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19036,"byte_end":19064,"line_start":501,"line_end":501,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19069,"byte_end":19072,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let mut a = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19077,"byte_end":19125,"line_start":503,"line_end":503,"column_start":5,"column_end":53}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19130,"byte_end":19156,"line_start":504,"line_end":504,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19161,"byte_end":19182,"line_start":505,"line_end":505,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19187,"byte_end":19214,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19219,"byte_end":19226,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19664,"byte_end":19669,"line_start":525,"line_end":525,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexMap<K, V, N, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all key-value pairs in the map, while preserving its capacity.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19299,"byte_end":19372,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19377,"byte_end":19380,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19385,"byte_end":19415,"line_start":514,"line_end":514,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19420,"byte_end":19423,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19428,"byte_end":19435,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19440,"byte_end":19470,"line_start":517,"line_end":517,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19475,"byte_end":19503,"line_start":518,"line_end":518,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19508,"byte_end":19511,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ let mut a = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19516,"byte_end":19564,"line_start":520,"line_end":520,"column_start":5,"column_end":53}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19569,"byte_end":19590,"line_start":521,"line_end":521,"column_start":5,"column_end":26}},{"value":"/ a.clear();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19595,"byte_end":19609,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19614,"byte_end":19640,"line_start":523,"line_end":523,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19645,"byte_end":19652,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20383,"byte_end":20386,"line_start":548,"line_end":548,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexMap<K, V, N, S>>::get","value":"fn <Q> (&self, key: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19814,"byte_end":19876,"line_start":532,"line_end":532,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19881,"byte_end":19884,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and `Eq` on the borrowed","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19889,"byte_end":19984,"line_start":534,"line_end":534,"column_start":5,"column_end":100}},{"value":"/ form *must* match those for the key type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":19989,"byte_end":20034,"line_start":535,"line_end":535,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20039,"byte_end":20042,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20047,"byte_end":20087,"line_start":537,"line_end":537,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20092,"byte_end":20095,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20100,"byte_end":20107,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20112,"byte_end":20142,"line_start":540,"line_end":540,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20147,"byte_end":20175,"line_start":541,"line_end":541,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20180,"byte_end":20183,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20188,"byte_end":20238,"line_start":543,"line_end":543,"column_start":5,"column_end":55}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20243,"byte_end":20275,"line_start":544,"line_end":544,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20280,"byte_end":20320,"line_start":545,"line_end":545,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20325,"byte_end":20359,"line_start":546,"line_end":546,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20364,"byte_end":20371,"line_start":547,"line_end":547,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21224,"byte_end":21236,"line_start":575,"line_end":575,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IndexMap<K, V, N, S>>::contains_key","value":"fn <Q> (&self, key: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20611,"byte_end":20678,"line_start":557,"line_end":557,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20683,"byte_end":20686,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and `Eq` on the borrowed","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20691,"byte_end":20786,"line_start":559,"line_end":559,"column_start":5,"column_end":100}},{"value":"/ form *must* match those for the key type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20791,"byte_end":20836,"line_start":560,"line_end":560,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20841,"byte_end":20844,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20849,"byte_end":20889,"line_start":562,"line_end":562,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20894,"byte_end":20897,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20902,"byte_end":20916,"line_start":564,"line_end":564,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20921,"byte_end":20924,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20929,"byte_end":20936,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20941,"byte_end":20971,"line_start":567,"line_end":567,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":20976,"byte_end":21004,"line_start":568,"line_end":568,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21009,"byte_end":21012,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U8>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21017,"byte_end":21066,"line_start":570,"line_end":570,"column_start":5,"column_end":54}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21071,"byte_end":21103,"line_start":571,"line_end":571,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21108,"byte_end":21151,"line_start":572,"line_end":572,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21156,"byte_end":21200,"line_start":573,"line_end":573,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21205,"byte_end":21212,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22005,"byte_end":22012,"line_start":603,"line_end":603,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IndexMap<K, V, N, S>>::get_mut","value":"fn <'v, Q> (&'v mut self, key: &Q) -> Option<&'v mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21377,"byte_end":21447,"line_start":583,"line_end":583,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21452,"byte_end":21455,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and `Eq` on the borrowed","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21460,"byte_end":21555,"line_start":585,"line_end":585,"column_start":5,"column_end":100}},{"value":"/ form *must* match those for the key type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21560,"byte_end":21605,"line_start":586,"line_end":586,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21610,"byte_end":21613,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21618,"byte_end":21658,"line_start":588,"line_end":588,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21663,"byte_end":21666,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21671,"byte_end":21685,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21690,"byte_end":21693,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21698,"byte_end":21705,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21710,"byte_end":21740,"line_start":593,"line_end":593,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21745,"byte_end":21773,"line_start":594,"line_end":594,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21778,"byte_end":21781,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U8>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21786,"byte_end":21835,"line_start":596,"line_end":596,"column_start":5,"column_end":54}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21840,"byte_end":21872,"line_start":597,"line_end":597,"column_start":5,"column_end":37}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21877,"byte_end":21915,"line_start":598,"line_end":598,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21920,"byte_end":21937,"line_start":599,"line_end":599,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21942,"byte_end":21947,"line_start":600,"line_end":600,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21952,"byte_end":21981,"line_start":601,"line_end":601,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":21986,"byte_end":21993,"line_start":602,"line_end":602,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":23357,"byte_end":23363,"line_start":643,"line_end":643,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexMap<K, V, N, S>>::insert","value":"fn (&mut self, key: K, value: V) -> Result<Option<V>, (K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22322,"byte_end":22364,"line_start":615,"line_end":615,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22369,"byte_end":22372,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and retains in its place in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22377,"byte_end":22472,"line_start":617,"line_end":617,"column_start":5,"column_end":100}},{"value":"/ the order, its corresponding value is updated with `value` and the older value is returned","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22477,"byte_end":22571,"line_start":618,"line_end":618,"column_start":5,"column_end":99}},{"value":"/ inside `Some(_)`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22576,"byte_end":22597,"line_start":619,"line_end":619,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22602,"byte_end":22605,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is inserted, last in order,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22610,"byte_end":22705,"line_start":621,"line_end":621,"column_start":5,"column_end":100}},{"value":"/ and `None` is returned.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22710,"byte_end":22737,"line_start":622,"line_end":622,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22742,"byte_end":22745,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22750,"byte_end":22790,"line_start":624,"line_end":624,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22795,"byte_end":22798,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ See also entry if you you want to insert or modify or if you need to get the index of the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22803,"byte_end":22896,"line_start":626,"line_end":626,"column_start":5,"column_end":98}},{"value":"/ corresponding key-value pair.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22901,"byte_end":22934,"line_start":627,"line_end":627,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22939,"byte_end":22942,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22947,"byte_end":22961,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22966,"byte_end":22969,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22974,"byte_end":22981,"line_start":631,"line_end":631,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":22986,"byte_end":23016,"line_start":632,"line_end":632,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":23021,"byte_end":23049,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":23054,"byte_end":23057,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U8>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":23062,"byte_end":23111,"line_start":635,"line_end":635,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(map.insert(37, \"a\"), Ok(None));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":23116,"byte_end":23162,"line_start":636,"line_end":636,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":23167,"byte_end":23205,"line_start":637,"line_end":637,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":23210,"byte_end":23213,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":23218,"byte_end":23242,"line_start":639,"line_end":639,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.insert(37, \"c\"), Ok(Some(\"b\")));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":23247,"byte_end":23298,"line_start":640,"line_end":640,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":23303,"byte_end":23333,"line_start":641,"line_end":641,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":23338,"byte_end":23345,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24326,"byte_end":24332,"line_start":673,"line_end":673,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexMap<K, V, N, S>>::remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`swap_remove`](struct.IndexMap.html#method.swap_remove)","sig":null,"attributes":[{"value":"/ Same as [`swap_remove`](struct.IndexMap.html#method.swap_remove)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":23878,"byte_end":23946,"line_start":658,"line_end":658,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":23951,"byte_end":23954,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":23959,"byte_end":23999,"line_start":660,"line_end":660,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24004,"byte_end":24007,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24012,"byte_end":24026,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24031,"byte_end":24034,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24039,"byte_end":24046,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24051,"byte_end":24081,"line_start":665,"line_end":665,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24086,"byte_end":24114,"line_start":666,"line_end":666,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24119,"byte_end":24122,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U8>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24127,"byte_end":24176,"line_start":668,"line_end":668,"column_start":5,"column_end":54}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24181,"byte_end":24213,"line_start":669,"line_end":669,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24218,"byte_end":24260,"line_start":670,"line_end":670,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24265,"byte_end":24302,"line_start":671,"line_end":671,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24307,"byte_end":24314,"line_start":672,"line_end":672,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24873,"byte_end":24884,"line_start":689,"line_end":689,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexMap<K, V, N, S>>::swap_remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return its value.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24479,"byte_end":24550,"line_start":681,"line_end":681,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24555,"byte_end":24558,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the last element of the map","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24563,"byte_end":24659,"line_start":683,"line_end":683,"column_start":5,"column_end":101}},{"value":"/ and popping it off. **This perturbs the postion of what used to be the last element!**","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24664,"byte_end":24754,"line_start":684,"line_end":684,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24759,"byte_end":24762,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24767,"byte_end":24808,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24813,"byte_end":24816,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":24821,"byte_end":24861,"line_start":688,"line_end":688,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":224},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":29679,"byte_end":29683,"line_start":886,"line_end":886,"column_start":12,"column_end":16},"name":"Iter","qualname":"::indexmap::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":228}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":241},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":30096,"byte_end":30103,"line_start":906,"line_end":906,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::indexmap::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":245}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":275},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32264,"byte_end":32275,"line_start":9,"line_end":9,"column_start":10,"column_end":21},"name":"FnvIndexSet","qualname":"::indexset::FnvIndexSet","value":"IndexSet<T, N, BuildHasherDefault<FnvHasher>>","parent":null,"children":[],"decl_id":null,"docs":" An `IndexSet` using the default FNV hasher\n","sig":null,"attributes":[{"value":"/ An `IndexSet` using the default FNV hasher","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32208,"byte_end":32254,"line_start":8,"line_end":8,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":278},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33303,"byte_end":33311,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"IndexSet","qualname":"::indexset::IndexSet","value":"IndexSet {  }","parent":null,"children":[{"krate":0,"index":282}],"decl_id":null,"docs":" Fixed capacity [`IndexSet`](https://docs.rs/indexmap/1/indexmap/set/struct.IndexSet.html)","sig":null,"attributes":[{"value":"/ Fixed capacity [`IndexSet`](https://docs.rs/indexmap/1/indexmap/set/struct.IndexSet.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32332,"byte_end":32425,"line_start":11,"line_end":11,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32426,"byte_end":32429,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Note that the capacity of the `IndexSet` must be a power of 2.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32430,"byte_end":32496,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32497,"byte_end":32500,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32501,"byte_end":32515,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32516,"byte_end":32519,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32520,"byte_end":32527,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32528,"byte_end":32558,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32559,"byte_end":32587,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32588,"byte_end":32591,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // A hash set with a capacity of 16 elements allocated on the stack","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32592,"byte_end":32663,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ let mut books = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32664,"byte_end":32713,"line_start":22,"line_end":22,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32714,"byte_end":32717,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ // Add some books.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32718,"byte_end":32740,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ books.insert(\"A Dance With Dragons\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32741,"byte_end":32791,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ books.insert(\"To Kill a Mockingbird\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32792,"byte_end":32843,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/ books.insert(\"The Odyssey\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32844,"byte_end":32885,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ books.insert(\"The Great Gatsby\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32886,"byte_end":32932,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32933,"byte_end":32936,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32937,"byte_end":32969,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/ if !books.contains(\"The Winds of Winter\") {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":32970,"byte_end":33017,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/     println!(\"We have {} books, but The Winds of Winter ain't one.\",","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33018,"byte_end":33090,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/              books.len());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33091,"byte_end":33121,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33122,"byte_end":33127,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33128,"byte_end":33131,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Remove a book.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33132,"byte_end":33153,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ books.remove(\"The Odyssey\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33154,"byte_end":33186,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33187,"byte_end":33190,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33191,"byte_end":33222,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ for book in &books {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33223,"byte_end":33247,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/     println!(\"{}\", book);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33248,"byte_end":33277,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33278,"byte_end":33283,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33284,"byte_end":33291,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33669,"byte_end":33672,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexSet<T, N, BuildHasherDefault<S>>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `IndexSet`\n","sig":null,"attributes":[{"value":"/ Creates an empty `IndexSet`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33626,"byte_end":33657,"line_start":58,"line_end":58,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34189,"byte_end":34197,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexSet<T, N, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the set can hold","sig":null,"attributes":[{"value":"/ Returns the number of elements the set can hold","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33901,"byte_end":33952,"line_start":72,"line_end":72,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33957,"byte_end":33960,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33965,"byte_end":33979,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33984,"byte_end":33987,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33992,"byte_end":33999,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34004,"byte_end":34034,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34039,"byte_end":34067,"line_start":78,"line_end":78,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34072,"byte_end":34075,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let set = FnvIndexSet::<i32, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34080,"byte_end":34125,"line_start":80,"line_end":80,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(set.capacity(), 16);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34130,"byte_end":34165,"line_start":81,"line_end":81,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34170,"byte_end":34177,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34711,"byte_end":34715,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexSet<T, N, S>>::iter","value":"fn (&self) -> Iter<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the set, in their order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34255,"byte_end":34320,"line_start":87,"line_end":87,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34325,"byte_end":34328,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34333,"byte_end":34347,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34352,"byte_end":34355,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34360,"byte_end":34367,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34372,"byte_end":34402,"line_start":92,"line_end":92,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34407,"byte_end":34435,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34440,"byte_end":34443,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut set = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34448,"byte_end":34495,"line_start":95,"line_end":95,"column_start":5,"column_end":52}},{"value":"/ set.insert(\"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34500,"byte_end":34529,"line_start":96,"line_end":96,"column_start":5,"column_end":34}},{"value":"/ set.insert(\"b\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34534,"byte_end":34563,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34568,"byte_end":34571,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ // Will print in an arbitrary order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34576,"byte_end":34616,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/ for x in set.iter() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34621,"byte_end":34646,"line_start":100,"line_end":100,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34651,"byte_end":34677,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34682,"byte_end":34687,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34692,"byte_end":34699,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35750,"byte_end":35760,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"difference","qualname":"<IndexSet<T, N, S>>::difference","value":"fn <'a, N2, S2> (&'a self, other: &'a IndexSet<T, N2, S2>) -> Difference<'a, T, N2, S2>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the difference, i.e. the values that are in `self` but not in\n `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the difference, i.e. the values that are in `self` but not in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34811,"byte_end":34907,"line_start":110,"line_end":110,"column_start":5,"column_end":101}},{"value":"/ `other`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34912,"byte_end":34924,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34929,"byte_end":34932,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34937,"byte_end":34951,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34956,"byte_end":34959,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34964,"byte_end":34971,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":34976,"byte_end":35006,"line_start":116,"line_end":116,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35011,"byte_end":35039,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35044,"byte_end":35047,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut a: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35052,"byte_end":35125,"line_start":119,"line_end":119,"column_start":5,"column_end":78}},{"value":"/ let mut b: FnvIndexSet<_, U16> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35130,"byte_end":35206,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35211,"byte_end":35214,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ // Can be seen as `a - b`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35219,"byte_end":35249,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"/ for x in a.difference(&b) {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35254,"byte_end":35285,"line_start":123,"line_end":123,"column_start":5,"column_end":36}},{"value":"/     println!(\"{}\", x); // Print 1","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35290,"byte_end":35327,"line_start":124,"line_end":124,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35332,"byte_end":35337,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35342,"byte_end":35345,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let diff: FnvIndexSet<_, U16> = a.difference(&b).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35350,"byte_end":35413,"line_start":127,"line_end":127,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(diff, [1].iter().collect::<FnvIndexSet<_, U16>>());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35418,"byte_end":35484,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35489,"byte_end":35492,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ // Note that difference is not symmetric,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35497,"byte_end":35542,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ // and `b - a` means something else:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35547,"byte_end":35587,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/ let diff: FnvIndexSet<_, U16> = b.difference(&a).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35592,"byte_end":35655,"line_start":132,"line_end":132,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(diff, [4].iter().collect::<FnvIndexSet<_, U16>>());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35660,"byte_end":35726,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":35731,"byte_end":35738,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36928,"byte_end":36948,"line_start":172,"line_end":172,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<IndexSet<T, N, S>>::symmetric_difference","value":"fn <'a, N2, S2> (&'a self, other: &'a IndexSet<T, N2, S2>) -> impl Iterator<Item = &'a T>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the symmetric difference, i.e. the values that are in `self`\n or in `other` but not in both.","sig":null,"attributes":[{"value":"/ Visits the values representing the symmetric difference, i.e. the values that are in `self`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36067,"byte_end":36162,"line_start":149,"line_end":149,"column_start":5,"column_end":100}},{"value":"/ or in `other` but not in both.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36167,"byte_end":36201,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36206,"byte_end":36209,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36214,"byte_end":36228,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36233,"byte_end":36236,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36241,"byte_end":36248,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36253,"byte_end":36283,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36288,"byte_end":36316,"line_start":156,"line_end":156,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36321,"byte_end":36324,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let mut a: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36329,"byte_end":36402,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ let mut b: FnvIndexSet<_, U16> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36407,"byte_end":36483,"line_start":159,"line_end":159,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36488,"byte_end":36491,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 4 in that order order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36496,"byte_end":36534,"line_start":161,"line_end":161,"column_start":5,"column_end":43}},{"value":"/ for x in a.symmetric_difference(&b) {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36539,"byte_end":36580,"line_start":162,"line_end":162,"column_start":5,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36585,"byte_end":36611,"line_start":163,"line_end":163,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36616,"byte_end":36621,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36626,"byte_end":36629,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let diff1: FnvIndexSet<_, U16> = a.symmetric_difference(&b).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36634,"byte_end":36708,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ let diff2: FnvIndexSet<_, U16> = b.symmetric_difference(&a).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36713,"byte_end":36787,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36792,"byte_end":36795,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(diff1, diff2);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36800,"byte_end":36829,"line_start":169,"line_end":169,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(diff1, [1, 4].iter().collect::<FnvIndexSet<_, U16>>());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36834,"byte_end":36904,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":36909,"byte_end":36916,"line_start":171,"line_end":171,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37948,"byte_end":37960,"line_start":203,"line_end":203,"column_start":12,"column_end":24},"name":"intersection","qualname":"<IndexSet<T, N, S>>::intersection","value":"fn <'a, N2, S2> (&'a self, other: &'a IndexSet<T, N2, S2>) -> Intersection<'a, T, N2, S2>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the intersection, i.e. the values that are both in `self` and\n `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the intersection, i.e. the values that are both in `self` and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37237,"byte_end":37333,"line_start":183,"line_end":183,"column_start":5,"column_end":101}},{"value":"/ `other`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37338,"byte_end":37350,"line_start":184,"line_end":184,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37355,"byte_end":37358,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37363,"byte_end":37377,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37382,"byte_end":37385,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37390,"byte_end":37397,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37402,"byte_end":37432,"line_start":189,"line_end":189,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37437,"byte_end":37465,"line_start":190,"line_end":190,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37470,"byte_end":37473,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut a: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37478,"byte_end":37551,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ let mut b: FnvIndexSet<_, U16> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37556,"byte_end":37632,"line_start":193,"line_end":193,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37637,"byte_end":37640,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ // Print 2, 3 in that order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37645,"byte_end":37677,"line_start":195,"line_end":195,"column_start":5,"column_end":37}},{"value":"/ for x in a.intersection(&b) {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37682,"byte_end":37715,"line_start":196,"line_end":196,"column_start":5,"column_end":38}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37720,"byte_end":37746,"line_start":197,"line_end":197,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37751,"byte_end":37756,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37761,"byte_end":37764,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let intersection: FnvIndexSet<_, U16> = a.intersection(&b).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37769,"byte_end":37842,"line_start":200,"line_end":200,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(intersection, [2, 3].iter().collect::<FnvIndexSet<_, U16>>());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37847,"byte_end":37924,"line_start":201,"line_end":201,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":37929,"byte_end":37936,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38968,"byte_end":38973,"line_start":237,"line_end":237,"column_start":12,"column_end":17},"name":"union","qualname":"<IndexSet<T, N, S>>::union","value":"fn <'a, N2, S2> (&'a self, other: &'a IndexSet<T, N2, S2>) -> impl Iterator<Item = &'a T>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the union, i.e. all the values in `self` or `other`, without\n duplicates.","sig":null,"attributes":[{"value":"/ Visits the values representing the union, i.e. all the values in `self` or `other`, without","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38271,"byte_end":38366,"line_start":217,"line_end":217,"column_start":5,"column_end":100}},{"value":"/ duplicates.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38371,"byte_end":38386,"line_start":218,"line_end":218,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38391,"byte_end":38394,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38399,"byte_end":38413,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38418,"byte_end":38421,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38426,"byte_end":38433,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38438,"byte_end":38468,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38473,"byte_end":38501,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38506,"byte_end":38509,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let mut a: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38514,"byte_end":38587,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ let mut b: FnvIndexSet<_, U16> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38592,"byte_end":38668,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38673,"byte_end":38676,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 2, 3, 4 in that order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38681,"byte_end":38719,"line_start":229,"line_end":229,"column_start":5,"column_end":43}},{"value":"/ for x in a.union(&b) {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38724,"byte_end":38750,"line_start":230,"line_end":230,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38755,"byte_end":38781,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38786,"byte_end":38791,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38796,"byte_end":38799,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let union: FnvIndexSet<_, U16> = a.union(&b).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38804,"byte_end":38863,"line_start":234,"line_end":234,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(union, [1, 2, 3, 4].iter().collect::<FnvIndexSet<_, U16>>());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38868,"byte_end":38944,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":38949,"byte_end":38956,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39599,"byte_end":39602,"line_start":261,"line_end":261,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexSet<T, N, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the set.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the set.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39251,"byte_end":39297,"line_start":248,"line_end":248,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39302,"byte_end":39305,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39310,"byte_end":39324,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39329,"byte_end":39332,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39337,"byte_end":39344,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39349,"byte_end":39379,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39384,"byte_end":39412,"line_start":254,"line_end":254,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39417,"byte_end":39420,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let mut v: FnvIndexSet<_, U16> = FnvIndexSet::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39425,"byte_end":39481,"line_start":256,"line_end":256,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(v.len(), 0);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39486,"byte_end":39513,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/ v.insert(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39518,"byte_end":39543,"line_start":258,"line_end":258,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(v.len(), 1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39548,"byte_end":39575,"line_start":259,"line_end":259,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39580,"byte_end":39587,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40007,"byte_end":40015,"line_start":278,"line_end":278,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexSet<T, N, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39655,"byte_end":39706,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39711,"byte_end":39714,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39719,"byte_end":39733,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39738,"byte_end":39741,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39746,"byte_end":39753,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39758,"byte_end":39788,"line_start":270,"line_end":270,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39793,"byte_end":39821,"line_start":271,"line_end":271,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39826,"byte_end":39829,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let mut v: FnvIndexSet<_, U16> = FnvIndexSet::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39834,"byte_end":39890,"line_start":273,"line_end":273,"column_start":5,"column_end":61}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39895,"byte_end":39921,"line_start":274,"line_end":274,"column_start":5,"column_end":31}},{"value":"/ v.insert(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39926,"byte_end":39951,"line_start":275,"line_end":275,"column_start":5,"column_end":30}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39956,"byte_end":39983,"line_start":276,"line_end":276,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":39988,"byte_end":39995,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40400,"byte_end":40405,"line_start":295,"line_end":295,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexSet<T, N, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all values.","sig":null,"attributes":[{"value":"/ Clears the set, removing all values.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40072,"byte_end":40112,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40117,"byte_end":40120,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40125,"byte_end":40139,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40144,"byte_end":40147,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40152,"byte_end":40159,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40164,"byte_end":40194,"line_start":287,"line_end":287,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40199,"byte_end":40227,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40232,"byte_end":40235,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let mut v: FnvIndexSet<_, U16> = FnvIndexSet::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40240,"byte_end":40296,"line_start":290,"line_end":290,"column_start":5,"column_end":61}},{"value":"/ v.insert(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40301,"byte_end":40326,"line_start":291,"line_end":291,"column_start":5,"column_end":30}},{"value":"/ v.clear();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40331,"byte_end":40345,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40350,"byte_end":40376,"line_start":293,"line_end":293,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40381,"byte_end":40388,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40976,"byte_end":40984,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"contains","qualname":"<IndexSet<T, N, S>>::contains","value":"fn <Q> (&self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains a value.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40455,"byte_end":40502,"line_start":299,"line_end":299,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40507,"byte_end":40510,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but `Hash` and `Eq` on the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40515,"byte_end":40605,"line_start":301,"line_end":301,"column_start":5,"column_end":95}},{"value":"/ borrowed form must match those for the value type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40610,"byte_end":40664,"line_start":302,"line_end":302,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40669,"byte_end":40672,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40677,"byte_end":40691,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40696,"byte_end":40699,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40704,"byte_end":40711,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40716,"byte_end":40746,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40751,"byte_end":40779,"line_start":308,"line_end":308,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40784,"byte_end":40787,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ let set: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40792,"byte_end":40863,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(set.contains(&1), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40868,"byte_end":40907,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(set.contains(&4), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40912,"byte_end":40952,"line_start":312,"line_end":312,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":40957,"byte_end":40964,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41740,"byte_end":41751,"line_start":340,"line_end":340,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<IndexSet<T, N, S>>::is_disjoint","value":"fn <N2, S2> (&self, other: &IndexSet<T, N2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`. This is equivalent to\n checking for an empty intersection.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`. This is equivalent to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41131,"byte_end":41221,"line_start":322,"line_end":322,"column_start":5,"column_end":95}},{"value":"/ checking for an empty intersection.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41226,"byte_end":41265,"line_start":323,"line_end":323,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41270,"byte_end":41273,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41278,"byte_end":41292,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41297,"byte_end":41300,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41305,"byte_end":41312,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41317,"byte_end":41347,"line_start":328,"line_end":328,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41352,"byte_end":41380,"line_start":329,"line_end":329,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41385,"byte_end":41388,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let a: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41393,"byte_end":41462,"line_start":331,"line_end":331,"column_start":5,"column_end":74}},{"value":"/ let mut b = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41467,"byte_end":41512,"line_start":332,"line_end":332,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41517,"byte_end":41520,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41525,"byte_end":41565,"line_start":334,"line_end":334,"column_start":5,"column_end":45}},{"value":"/ b.insert(4).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41570,"byte_end":41595,"line_start":335,"line_end":335,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41600,"byte_end":41640,"line_start":336,"line_end":336,"column_start":5,"column_end":45}},{"value":"/ b.insert(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41645,"byte_end":41670,"line_start":337,"line_end":337,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.is_disjoint(&b), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41675,"byte_end":41716,"line_start":338,"line_end":338,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41721,"byte_end":41728,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42578,"byte_end":42587,"line_start":366,"line_end":366,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<IndexSet<T, N, S>>::is_subset","value":"fn <N2, S2> (&self, other: &IndexSet<T, N2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another, i.e. `other` contains at least all the\n values in `self`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another, i.e. `other` contains at least all the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":41971,"byte_end":42063,"line_start":348,"line_end":348,"column_start":5,"column_end":97}},{"value":"/ values in `self`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42068,"byte_end":42089,"line_start":349,"line_end":349,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42094,"byte_end":42097,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42102,"byte_end":42116,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42121,"byte_end":42124,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42129,"byte_end":42136,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42141,"byte_end":42171,"line_start":354,"line_end":354,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42176,"byte_end":42204,"line_start":355,"line_end":355,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42209,"byte_end":42212,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ let sup: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42217,"byte_end":42288,"line_start":357,"line_end":357,"column_start":5,"column_end":76}},{"value":"/ let mut set = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42293,"byte_end":42340,"line_start":358,"line_end":358,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42345,"byte_end":42348,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42353,"byte_end":42395,"line_start":360,"line_end":360,"column_start":5,"column_end":47}},{"value":"/ set.insert(2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42400,"byte_end":42427,"line_start":361,"line_end":361,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42432,"byte_end":42474,"line_start":362,"line_end":362,"column_start":5,"column_end":47}},{"value":"/ set.insert(4).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42479,"byte_end":42506,"line_start":363,"line_end":363,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(set.is_subset(&sup), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42511,"byte_end":42554,"line_start":364,"line_end":364,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42559,"byte_end":42566,"line_start":365,"line_end":365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43465,"byte_end":43476,"line_start":395,"line_end":395,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<IndexSet<T, N, S>>::is_superset","value":"fn <N2, S2> (&self, other: &IndexSet<T, N2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":"\n # Examples","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42929,"byte_end":42932,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42937,"byte_end":42951,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42956,"byte_end":42959,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42964,"byte_end":42971,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":42976,"byte_end":43006,"line_start":380,"line_end":380,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43011,"byte_end":43039,"line_start":381,"line_end":381,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43044,"byte_end":43047,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let sub: FnvIndexSet<_, U16> = [1, 2].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43052,"byte_end":43120,"line_start":383,"line_end":383,"column_start":5,"column_end":73}},{"value":"/ let mut set = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43125,"byte_end":43172,"line_start":384,"line_end":384,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43177,"byte_end":43180,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43185,"byte_end":43230,"line_start":386,"line_end":386,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43235,"byte_end":43238,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ set.insert(0).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43243,"byte_end":43270,"line_start":388,"line_end":388,"column_start":5,"column_end":32}},{"value":"/ set.insert(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43275,"byte_end":43302,"line_start":389,"line_end":389,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43307,"byte_end":43352,"line_start":390,"line_end":390,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43357,"byte_end":43360,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ set.insert(2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43365,"byte_end":43392,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(set.is_superset(&sub), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43397,"byte_end":43441,"line_start":393,"line_end":393,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43446,"byte_end":43453,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44205,"byte_end":44211,"line_start":421,"line_end":421,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexSet<T, N, S>>::insert","value":"fn (&mut self, value: T) -> Result<bool, T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set.","sig":null,"attributes":[{"value":"/ Adds a value to the set.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43678,"byte_end":43706,"line_start":403,"line_end":403,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43711,"byte_end":43714,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ If the set did not have this value present, `true` is returned.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43719,"byte_end":43786,"line_start":405,"line_end":405,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43791,"byte_end":43794,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If the set did have this value present, `false` is returned.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43799,"byte_end":43863,"line_start":407,"line_end":407,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43868,"byte_end":43871,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43876,"byte_end":43890,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43895,"byte_end":43898,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43903,"byte_end":43910,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43915,"byte_end":43945,"line_start":412,"line_end":412,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43950,"byte_end":43978,"line_start":413,"line_end":413,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43983,"byte_end":43986,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let mut set = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":43991,"byte_end":44038,"line_start":415,"line_end":415,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44043,"byte_end":44046,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.insert(2).unwrap(), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44051,"byte_end":44096,"line_start":417,"line_end":417,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(set.insert(2).unwrap(), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44101,"byte_end":44147,"line_start":418,"line_end":418,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(set.len(), 1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44152,"byte_end":44181,"line_start":419,"line_end":419,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44186,"byte_end":44193,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44955,"byte_end":44961,"line_start":445,"line_end":445,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexSet<T, N, S>>::remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns `true` if the value was present in the set.","sig":null,"attributes":[{"value":"/ Removes a value from the set. Returns `true` if the value was present in the set.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44384,"byte_end":44469,"line_start":428,"line_end":428,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44474,"byte_end":44477,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but `Hash` and `Eq` on the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44482,"byte_end":44572,"line_start":430,"line_end":430,"column_start":5,"column_end":95}},{"value":"/ borrowed form must match those for the value type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44577,"byte_end":44631,"line_start":431,"line_end":431,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44636,"byte_end":44639,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44644,"byte_end":44658,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44663,"byte_end":44666,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44671,"byte_end":44678,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44683,"byte_end":44713,"line_start":436,"line_end":436,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44718,"byte_end":44746,"line_start":437,"line_end":437,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44751,"byte_end":44754,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let mut set = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44759,"byte_end":44806,"line_start":439,"line_end":439,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44811,"byte_end":44814,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ set.insert(2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44819,"byte_end":44846,"line_start":441,"line_end":441,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(set.remove(&2), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44851,"byte_end":44888,"line_start":442,"line_end":442,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.remove(&2), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44893,"byte_end":44931,"line_start":443,"line_end":443,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":44936,"byte_end":44943,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":383},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":47615,"byte_end":47619,"line_start":562,"line_end":562,"column_start":12,"column_end":16},"name":"Iter","qualname":"::indexset::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":386}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":397},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":47977,"byte_end":47987,"line_start":582,"line_end":582,"column_start":12,"column_end":22},"name":"Difference","qualname":"::indexset::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":411},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":48580,"byte_end":48592,"line_start":610,"line_end":610,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::indexset::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":440},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":49548,"byte_end":49557,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"LinearMap","qualname":"::linear_map::LinearMap","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed capacity map / dictionary that performs lookups via linear search","sig":null,"attributes":[{"value":"/ A fixed capacity map / dictionary that performs lookups via linear search","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":49361,"byte_end":49438,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":49439,"byte_end":49442,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Note that as this map doesn't use hashing so most operations are **O(N)** instead of O(1)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":49443,"byte_end":49536,"line_start":15,"line_end":15,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":49844,"byte_end":49847,"line_start":24,"line_end":24,"column_start":18,"column_end":21},"name":"new","qualname":"<crate::i::LinearMap<A>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `LinearMap` `const` constructor; wrap the returned value in\n [`LinearMap`](../struct.LinearMap.html)\n","sig":null,"attributes":[{"value":"/ `LinearMap` `const` constructor; wrap the returned value in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":49715,"byte_end":49778,"line_start":22,"line_end":22,"column_start":5,"column_end":68}},{"value":"/ [`LinearMap`](../struct.LinearMap.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":49783,"byte_end":49826,"line_start":23,"line_end":23,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50458,"byte_end":50461,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<LinearMap<K, V, N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `LinearMap`","sig":null,"attributes":[{"value":"/ Creates an empty `LinearMap`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50020,"byte_end":50052,"line_start":36,"line_end":36,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50057,"byte_end":50060,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50065,"byte_end":50079,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50084,"byte_end":50087,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50092,"byte_end":50099,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50104,"byte_end":50132,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50137,"byte_end":50165,"line_start":42,"line_end":42,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50170,"byte_end":50173,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ // allocate the map on the stack","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50178,"byte_end":50214,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ let mut map: LinearMap<&str, isize, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50219,"byte_end":50282,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50287,"byte_end":50290,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ // allocate the map in a static variable","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50295,"byte_end":50339,"line_start":47,"line_end":47,"column_start":5,"column_end":49}},{"value":"/ static mut MAP: LinearMap<&str, isize, U8> = LinearMap(heapless::i::LinearMap::new());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50344,"byte_end":50434,"line_start":48,"line_end":48,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50439,"byte_end":50446,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50877,"byte_end":50885,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"capacity","qualname":"<LinearMap<K, V, N>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements that the map can hold","sig":null,"attributes":[{"value":"/ Returns the number of elements that the map can hold","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50531,"byte_end":50587,"line_start":54,"line_end":54,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50592,"byte_end":50595,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50600,"byte_end":50629,"line_start":56,"line_end":56,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50634,"byte_end":50637,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50642,"byte_end":50656,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50661,"byte_end":50664,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50669,"byte_end":50676,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50681,"byte_end":50709,"line_start":61,"line_end":61,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50714,"byte_end":50742,"line_start":62,"line_end":62,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50747,"byte_end":50750,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let map: LinearMap<&str, isize, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50755,"byte_end":50814,"line_start":64,"line_end":64,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(map.capacity(), 8);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50819,"byte_end":50853,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50858,"byte_end":50865,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51324,"byte_end":51329,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"clear","qualname":"<LinearMap<K, V, N>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50937,"byte_end":50985,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50990,"byte_end":50993,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":50998,"byte_end":51027,"line_start":73,"line_end":73,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51032,"byte_end":51035,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51040,"byte_end":51054,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51059,"byte_end":51062,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51067,"byte_end":51074,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51079,"byte_end":51107,"line_start":78,"line_end":78,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51112,"byte_end":51140,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51145,"byte_end":51148,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51153,"byte_end":51209,"line_start":81,"line_end":81,"column_start":5,"column_end":61}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51214,"byte_end":51246,"line_start":82,"line_end":82,"column_start":5,"column_end":37}},{"value":"/ map.clear();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51251,"byte_end":51267,"line_start":83,"line_end":83,"column_start":5,"column_end":21}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51272,"byte_end":51300,"line_start":84,"line_end":84,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51305,"byte_end":51312,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51833,"byte_end":51845,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<LinearMap<K, V, N>>::contains_key","value":"fn (&self, key: &K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51384,"byte_end":51451,"line_start":90,"line_end":90,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51456,"byte_end":51459,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(N)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51464,"byte_end":51493,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51498,"byte_end":51501,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51506,"byte_end":51520,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51525,"byte_end":51528,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51533,"byte_end":51540,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51545,"byte_end":51573,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51578,"byte_end":51606,"line_start":98,"line_end":98,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51611,"byte_end":51614,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51619,"byte_end":51675,"line_start":100,"line_end":100,"column_start":5,"column_end":61}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51680,"byte_end":51712,"line_start":101,"line_end":101,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51717,"byte_end":51760,"line_start":102,"line_end":102,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51765,"byte_end":51809,"line_start":103,"line_end":103,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51814,"byte_end":51821,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52345,"byte_end":52348,"line_start":124,"line_end":124,"column_start":12,"column_end":15},"name":"get","qualname":"<LinearMap<K, V, N>>::get","value":"fn <Q> (&self, key: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51915,"byte_end":51976,"line_start":109,"line_end":109,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51981,"byte_end":51984,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(N)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":51989,"byte_end":52018,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52023,"byte_end":52026,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52031,"byte_end":52045,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52050,"byte_end":52053,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52058,"byte_end":52065,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52070,"byte_end":52098,"line_start":116,"line_end":116,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52103,"byte_end":52131,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52136,"byte_end":52139,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52144,"byte_end":52200,"line_start":119,"line_end":119,"column_start":5,"column_end":61}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52205,"byte_end":52237,"line_start":120,"line_end":120,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52242,"byte_end":52282,"line_start":121,"line_end":121,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52287,"byte_end":52321,"line_start":122,"line_end":122,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52326,"byte_end":52333,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53014,"byte_end":53021,"line_start":151,"line_end":151,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LinearMap<K, V, N>>::get_mut","value":"fn <Q> (&mut self, key: &Q) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52551,"byte_end":52620,"line_start":134,"line_end":134,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52625,"byte_end":52628,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(N)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52633,"byte_end":52662,"line_start":136,"line_end":136,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52667,"byte_end":52670,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52675,"byte_end":52689,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52694,"byte_end":52697,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52702,"byte_end":52709,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52714,"byte_end":52742,"line_start":141,"line_end":141,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52747,"byte_end":52775,"line_start":142,"line_end":142,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52780,"byte_end":52783,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52788,"byte_end":52844,"line_start":144,"line_end":144,"column_start":5,"column_end":61}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52849,"byte_end":52881,"line_start":145,"line_end":145,"column_start":5,"column_end":37}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52886,"byte_end":52924,"line_start":146,"line_end":146,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52929,"byte_end":52946,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52951,"byte_end":52956,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52961,"byte_end":52990,"line_start":149,"line_end":149,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":52995,"byte_end":53002,"line_start":150,"line_end":150,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53627,"byte_end":53630,"line_start":176,"line_end":176,"column_start":12,"column_end":15},"name":"len","qualname":"<LinearMap<K, V, N>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in this map","sig":null,"attributes":[{"value":"/ Returns the number of elements in this map","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53236,"byte_end":53282,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53287,"byte_end":53290,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53295,"byte_end":53324,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53329,"byte_end":53332,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53337,"byte_end":53351,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53356,"byte_end":53359,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53364,"byte_end":53371,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53376,"byte_end":53404,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53409,"byte_end":53437,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53442,"byte_end":53445,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut a: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53450,"byte_end":53504,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53509,"byte_end":53536,"line_start":172,"line_end":172,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53541,"byte_end":53571,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53576,"byte_end":53603,"line_start":174,"line_end":174,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53608,"byte_end":53615,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54402,"byte_end":54408,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"insert","qualname":"<LinearMap<K, V, N>>::insert","value":"fn (&mut self, key: K, mut value: V) -> Result<Option<V>, (K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53686,"byte_end":53728,"line_start":180,"line_end":180,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53733,"byte_end":53736,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53741,"byte_end":53806,"line_start":182,"line_end":182,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53811,"byte_end":53814,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old value is returned.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53819,"byte_end":53913,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53918,"byte_end":53921,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(N)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53926,"byte_end":53955,"line_start":186,"line_end":186,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53960,"byte_end":53963,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53968,"byte_end":53982,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53987,"byte_end":53990,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":53995,"byte_end":54002,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54007,"byte_end":54035,"line_start":191,"line_end":191,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54040,"byte_end":54068,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54073,"byte_end":54076,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54081,"byte_end":54137,"line_start":194,"line_end":194,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(map.insert(37, \"a\").unwrap(), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54142,"byte_end":54193,"line_start":195,"line_end":195,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54198,"byte_end":54236,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54241,"byte_end":54244,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54249,"byte_end":54282,"line_start":198,"line_end":198,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.insert(37, \"c\").unwrap(), Some(\"b\"));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54287,"byte_end":54343,"line_start":199,"line_end":199,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54348,"byte_end":54378,"line_start":200,"line_end":200,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54383,"byte_end":54390,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55095,"byte_end":55103,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LinearMap<K, V, N>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54703,"byte_end":54751,"line_start":212,"line_end":212,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54756,"byte_end":54759,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54764,"byte_end":54793,"line_start":214,"line_end":214,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54798,"byte_end":54801,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54806,"byte_end":54820,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54825,"byte_end":54828,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54833,"byte_end":54840,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54845,"byte_end":54873,"line_start":219,"line_end":219,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54878,"byte_end":54906,"line_start":220,"line_end":220,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54911,"byte_end":54914,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let mut a: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54919,"byte_end":54973,"line_start":222,"line_end":222,"column_start":5,"column_end":59}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":54978,"byte_end":55004,"line_start":223,"line_end":223,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55009,"byte_end":55039,"line_start":224,"line_end":224,"column_start":5,"column_end":35}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55044,"byte_end":55071,"line_start":225,"line_end":225,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55076,"byte_end":55083,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55645,"byte_end":55649,"line_start":248,"line_end":248,"column_start":12,"column_end":16},"name":"iter","qualname":"<LinearMap<K, V, N>>::iter","value":"fn (&self) -> Iter<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55156,"byte_end":55220,"line_start":231,"line_end":231,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55225,"byte_end":55228,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55233,"byte_end":55247,"line_start":233,"line_end":233,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55252,"byte_end":55255,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55260,"byte_end":55267,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55272,"byte_end":55300,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55305,"byte_end":55333,"line_start":237,"line_end":237,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55338,"byte_end":55341,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55346,"byte_end":55402,"line_start":239,"line_end":239,"column_start":5,"column_end":61}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55407,"byte_end":55439,"line_start":240,"line_end":240,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55444,"byte_end":55476,"line_start":241,"line_end":241,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55481,"byte_end":55513,"line_start":242,"line_end":242,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55518,"byte_end":55521,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in map.iter() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55526,"byte_end":55560,"line_start":244,"line_end":244,"column_start":5,"column_end":39}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55565,"byte_end":55611,"line_start":245,"line_end":245,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55616,"byte_end":55621,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55626,"byte_end":55633,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56403,"byte_end":56411,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<LinearMap<K, V, N>>::iter_mut","value":"fn (&mut self) -> IterMut<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order, with mutable references to the\n values","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order, with mutable references to the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55764,"byte_end":55859,"line_start":254,"line_end":254,"column_start":5,"column_end":100}},{"value":"/ values","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55864,"byte_end":55874,"line_start":255,"line_end":255,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55879,"byte_end":55882,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55887,"byte_end":55901,"line_start":257,"line_end":257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55906,"byte_end":55909,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55914,"byte_end":55921,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55926,"byte_end":55954,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55959,"byte_end":55987,"line_start":261,"line_end":261,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":55992,"byte_end":55995,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56000,"byte_end":56056,"line_start":263,"line_end":263,"column_start":5,"column_end":61}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56061,"byte_end":56093,"line_start":264,"line_end":264,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56098,"byte_end":56130,"line_start":265,"line_end":265,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56135,"byte_end":56167,"line_start":266,"line_end":266,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56172,"byte_end":56175,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ // Update all values","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56180,"byte_end":56204,"line_start":268,"line_end":268,"column_start":5,"column_end":29}},{"value":"/ for (_, val) in map.iter_mut() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56209,"byte_end":56245,"line_start":269,"line_end":269,"column_start":5,"column_end":41}},{"value":"/     *val = 2;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56250,"byte_end":56267,"line_start":270,"line_end":270,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56272,"byte_end":56277,"line_start":271,"line_end":271,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56282,"byte_end":56285,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in &map {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56290,"byte_end":56318,"line_start":273,"line_end":273,"column_start":5,"column_end":33}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56323,"byte_end":56369,"line_start":274,"line_end":274,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56374,"byte_end":56379,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56384,"byte_end":56391,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56996,"byte_end":57000,"line_start":300,"line_end":300,"column_start":12,"column_end":16},"name":"keys","qualname":"<LinearMap<K, V, N>>::keys","value":"fn (&self) -> impl Iterator<Item = &K>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order","sig":null,"attributes":[{"value":"/ An iterator visiting all keys in arbitrary order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56544,"byte_end":56596,"line_start":283,"line_end":283,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56601,"byte_end":56604,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56609,"byte_end":56623,"line_start":285,"line_end":285,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56628,"byte_end":56631,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56636,"byte_end":56643,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56648,"byte_end":56676,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56681,"byte_end":56709,"line_start":289,"line_end":289,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56714,"byte_end":56717,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56722,"byte_end":56778,"line_start":291,"line_end":291,"column_start":5,"column_end":61}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56783,"byte_end":56815,"line_start":292,"line_end":292,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56820,"byte_end":56852,"line_start":293,"line_end":293,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56857,"byte_end":56889,"line_start":294,"line_end":294,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56894,"byte_end":56897,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56902,"byte_end":56929,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56934,"byte_end":56962,"line_start":297,"line_end":297,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56967,"byte_end":56972,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":56977,"byte_end":56984,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57566,"byte_end":57572,"line_start":320,"line_end":320,"column_start":12,"column_end":18},"name":"remove","qualname":"<LinearMap<K, V, N>>::remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key was previously in the\n map","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key was previously in the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57085,"byte_end":57180,"line_start":304,"line_end":304,"column_start":5,"column_end":100}},{"value":"/ map","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57185,"byte_end":57192,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57197,"byte_end":57200,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(N)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57205,"byte_end":57234,"line_start":307,"line_end":307,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57239,"byte_end":57242,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57247,"byte_end":57261,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57266,"byte_end":57269,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57274,"byte_end":57281,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57286,"byte_end":57314,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57319,"byte_end":57347,"line_start":313,"line_end":313,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57352,"byte_end":57355,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57360,"byte_end":57416,"line_start":315,"line_end":315,"column_start":5,"column_end":61}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57421,"byte_end":57453,"line_start":316,"line_end":316,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57458,"byte_end":57500,"line_start":317,"line_end":317,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57505,"byte_end":57542,"line_start":318,"line_end":318,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57547,"byte_end":57554,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58344,"byte_end":58350,"line_start":351,"line_end":351,"column_start":12,"column_end":18},"name":"values","qualname":"<LinearMap<K, V, N>>::values","value":"fn (&self) -> impl Iterator<Item = &V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57888,"byte_end":57942,"line_start":334,"line_end":334,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57947,"byte_end":57950,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57955,"byte_end":57969,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57974,"byte_end":57977,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57982,"byte_end":57989,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":57994,"byte_end":58022,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58027,"byte_end":58055,"line_start":340,"line_end":340,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58060,"byte_end":58063,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58068,"byte_end":58124,"line_start":342,"line_end":342,"column_start":5,"column_end":61}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58129,"byte_end":58161,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58166,"byte_end":58198,"line_start":344,"line_end":344,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58203,"byte_end":58235,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58240,"byte_end":58243,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58248,"byte_end":58277,"line_start":347,"line_end":347,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58282,"byte_end":58310,"line_start":348,"line_end":348,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58315,"byte_end":58320,"line_start":349,"line_end":349,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58325,"byte_end":58332,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58979,"byte_end":58989,"line_start":376,"line_end":376,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<LinearMap<K, V, N>>::values_mut","value":"fn (&mut self) -> impl Iterator<Item = &mut V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58435,"byte_end":58497,"line_start":355,"line_end":355,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58502,"byte_end":58505,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58510,"byte_end":58524,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58529,"byte_end":58532,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58537,"byte_end":58544,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58549,"byte_end":58577,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58582,"byte_end":58610,"line_start":361,"line_end":361,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58615,"byte_end":58618,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58623,"byte_end":58679,"line_start":363,"line_end":363,"column_start":5,"column_end":61}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58684,"byte_end":58716,"line_start":364,"line_end":364,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58721,"byte_end":58753,"line_start":365,"line_end":365,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58758,"byte_end":58790,"line_start":366,"line_end":366,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58795,"byte_end":58798,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ for val in map.values_mut() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58803,"byte_end":58836,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/     *val += 10;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58841,"byte_end":58860,"line_start":369,"line_end":369,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58865,"byte_end":58870,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58875,"byte_end":58878,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58883,"byte_end":58912,"line_start":372,"line_end":372,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58917,"byte_end":58945,"line_start":373,"line_end":373,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58950,"byte_end":58955,"line_start":374,"line_end":374,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":58960,"byte_end":58967,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":60548,"byte_end":60556,"line_start":454,"line_end":454,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::linear_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":525}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":547},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":61608,"byte_end":61612,"line_start":505,"line_end":505,"column_start":12,"column_end":16},"name":"Iter","qualname":"::linear_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":551}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":569},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":62197,"byte_end":62204,"line_start":535,"line_end":535,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::linear_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":573}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":612},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64194,"byte_end":64200,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"String","qualname":"::string::String","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed capacity [`String`](https://doc.rust-lang.org/std/string/struct.String.html)\n","sig":null,"attributes":[{"value":"/ A fixed capacity [`String`](https://doc.rust-lang.org/std/string/struct.String.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64094,"byte_end":64182,"line_start":18,"line_end":18,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64439,"byte_end":64442,"line_start":25,"line_end":25,"column_start":18,"column_end":21},"name":"new","qualname":"<crate::i::String<A>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `String` `const` constructor; wrap the returned value in [`String`](../struct.String.html)\n","sig":null,"attributes":[{"value":"/ `String` `const` constructor; wrap the returned value in [`String`](../struct.String.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64327,"byte_end":64421,"line_start":24,"line_end":24,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65054,"byte_end":65057,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<String<N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `String` with a fixed capacity of `N`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `String` with a fixed capacity of `N`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64582,"byte_end":64647,"line_start":36,"line_end":36,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64652,"byte_end":64655,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64660,"byte_end":64674,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64679,"byte_end":64682,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64687,"byte_end":64703,"line_start":40,"line_end":40,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64708,"byte_end":64711,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64716,"byte_end":64723,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64728,"byte_end":64753,"line_start":43,"line_end":43,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64758,"byte_end":64786,"line_start":44,"line_end":44,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64791,"byte_end":64794,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // allocate the string on the stack","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64799,"byte_end":64838,"line_start":46,"line_end":46,"column_start":5,"column_end":44}},{"value":"/ let mut s: String<U4> = String::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64843,"byte_end":64885,"line_start":47,"line_end":47,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64890,"byte_end":64893,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ // allocate the string in a static variable","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64898,"byte_end":64945,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/ static mut S: String<U4> = String(heapless::i::String::new());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64950,"byte_end":65016,"line_start":50,"line_end":50,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65021,"byte_end":65028,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65033,"byte_end":65042,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66408,"byte_end":66417,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"from_utf8","qualname":"<String<N>>::from_utf8","value":"fn (vec: Vec<u8, N>) -> Result<String<N>, Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a vector of bytes into a `String`.","sig":null,"attributes":[{"value":"/ Converts a vector of bytes into a `String`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65121,"byte_end":65168,"line_start":57,"line_end":57,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65173,"byte_end":65176,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ A string slice ([`&str`]) is made of bytes ([`u8`]), and a vector of bytes","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65181,"byte_end":65259,"line_start":59,"line_end":59,"column_start":5,"column_end":83}},{"value":"/ ([`Vec<u8>`]) is made of bytes, so this function converts between the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65264,"byte_end":65337,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ two. Not all byte slices are valid `String`s, however: `String`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65342,"byte_end":65409,"line_start":61,"line_end":61,"column_start":5,"column_end":72}},{"value":"/ requires that it is valid UTF-8. `from_utf8()` checks to ensure that","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65414,"byte_end":65486,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/ the bytes are valid UTF-8, and then does the conversion.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65491,"byte_end":65551,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65556,"byte_end":65559,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ See std::String for further information.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65564,"byte_end":65608,"line_start":65,"line_end":65,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65613,"byte_end":65616,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65621,"byte_end":65635,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65640,"byte_end":65643,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65648,"byte_end":65664,"line_start":69,"line_end":69,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65669,"byte_end":65672,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65677,"byte_end":65684,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ use heapless::{String, Vec};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65689,"byte_end":65721,"line_start":72,"line_end":72,"column_start":5,"column_end":37}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65726,"byte_end":65754,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65759,"byte_end":65762,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let mut v: Vec<u8, U8> = Vec::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65767,"byte_end":65807,"line_start":75,"line_end":75,"column_start":5,"column_end":45}},{"value":"/ v.push('a' as u8).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65812,"byte_end":65843,"line_start":76,"line_end":76,"column_start":5,"column_end":36}},{"value":"/ v.push('b' as u8).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65848,"byte_end":65879,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65884,"byte_end":65887,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let s = String::from_utf8(v).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65892,"byte_end":65934,"line_start":79,"line_end":79,"column_start":5,"column_end":47}},{"value":"/ assert!(s.len() == 2);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65939,"byte_end":65965,"line_start":80,"line_end":80,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65970,"byte_end":65977,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65982,"byte_end":65985,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Incorrect bytes:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":65990,"byte_end":66010,"line_start":83,"line_end":83,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66015,"byte_end":66018,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66023,"byte_end":66030,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ use heapless::{String, Vec};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66035,"byte_end":66067,"line_start":86,"line_end":86,"column_start":5,"column_end":37}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66072,"byte_end":66100,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66105,"byte_end":66108,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ // some invalid bytes, in a vector","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66113,"byte_end":66151,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66156,"byte_end":66159,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let mut v: Vec<u8, U8> = Vec::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66164,"byte_end":66204,"line_start":91,"line_end":91,"column_start":5,"column_end":45}},{"value":"/ v.push(0).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66209,"byte_end":66232,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/ v.push(159).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66237,"byte_end":66262,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"/ v.push(146).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66267,"byte_end":66292,"line_start":94,"line_end":94,"column_start":5,"column_end":30}},{"value":"/ v.push(150).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66297,"byte_end":66322,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/ assert!(String::from_utf8(v).is_err());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66327,"byte_end":66370,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66375,"byte_end":66382,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66387,"byte_end":66396,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66804,"byte_end":66823,"line_start":111,"line_end":111,"column_start":19,"column_end":38},"name":"from_utf8_unchecked","qualname":"<String<N>>::from_utf8_unchecked","value":"fn (mut vec: Vec<u8, N>) -> String<N>","parent":null,"children":[],"decl_id":null,"docs":" Converts a vector of bytes to a `String` without checking that the\n string contains valid UTF-8.","sig":null,"attributes":[{"value":"/ Converts a vector of bytes to a `String` without checking that the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66595,"byte_end":66665,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ string contains valid UTF-8.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66670,"byte_end":66702,"line_start":107,"line_end":107,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66707,"byte_end":66710,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ See the safe version, `from_utf8`, for more details.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66715,"byte_end":66771,"line_start":109,"line_end":109,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":66776,"byte_end":66785,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67566,"byte_end":67576,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<String<N>>::into_bytes","value":"fn (self) -> Vec<u8, N>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `String` into a byte vector.","sig":null,"attributes":[{"value":"/ Converts a `String` into a byte vector.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67082,"byte_end":67125,"line_start":118,"line_end":118,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67130,"byte_end":67133,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This consumes the `String`, so we do not need to copy its contents.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67138,"byte_end":67209,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67214,"byte_end":67217,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67222,"byte_end":67236,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67241,"byte_end":67244,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67249,"byte_end":67265,"line_start":124,"line_end":124,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67270,"byte_end":67273,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67278,"byte_end":67285,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67290,"byte_end":67315,"line_start":127,"line_end":127,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67320,"byte_end":67348,"line_start":128,"line_end":128,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67353,"byte_end":67356,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let s: String<U4> = String::from(\"ab\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67361,"byte_end":67404,"line_start":130,"line_end":130,"column_start":5,"column_end":48}},{"value":"/ let b = s.into_bytes();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67409,"byte_end":67436,"line_start":131,"line_end":131,"column_start":5,"column_end":32}},{"value":"/ assert!(b.len() == 2);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67441,"byte_end":67467,"line_start":132,"line_end":132,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67472,"byte_end":67475,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&['a' as u8, 'b' as u8], &b[..]);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67480,"byte_end":67528,"line_start":134,"line_end":134,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67533,"byte_end":67540,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67545,"byte_end":67554,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68102,"byte_end":68108,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"as_str","qualname":"<String<N>>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Extracts a string slice containing the entire string.","sig":null,"attributes":[{"value":"/ Extracts a string slice containing the entire string.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67634,"byte_end":67691,"line_start":141,"line_end":141,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67696,"byte_end":67699,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67704,"byte_end":67718,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67723,"byte_end":67726,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67731,"byte_end":67747,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67752,"byte_end":67755,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67760,"byte_end":67767,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67772,"byte_end":67797,"line_start":148,"line_end":148,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67802,"byte_end":67830,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67835,"byte_end":67838,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U4> = String::from(\"ab\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67843,"byte_end":67890,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/ assert!(s.as_str() == \"ab\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67895,"byte_end":67927,"line_start":152,"line_end":152,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67932,"byte_end":67935,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let _s = s.as_str();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67940,"byte_end":67964,"line_start":154,"line_end":154,"column_start":5,"column_end":29}},{"value":"/ // s.push('c'); // <- cannot borrow `s` as mutable because it is also borrowed as immutable","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":67969,"byte_end":68064,"line_start":155,"line_end":155,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68069,"byte_end":68076,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68081,"byte_end":68090,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68559,"byte_end":68569,"line_start":177,"line_end":177,"column_start":12,"column_end":22},"name":"as_mut_str","qualname":"<String<N>>::as_mut_str","value":"fn (&mut self) -> &mut str","parent":null,"children":[],"decl_id":null,"docs":" Converts a `String` into a mutable string slice.","sig":null,"attributes":[{"value":"/ Converts a `String` into a mutable string slice.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68204,"byte_end":68256,"line_start":162,"line_end":162,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68261,"byte_end":68264,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68269,"byte_end":68283,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68288,"byte_end":68291,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68296,"byte_end":68312,"line_start":166,"line_end":166,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68317,"byte_end":68320,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68325,"byte_end":68332,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68337,"byte_end":68362,"line_start":169,"line_end":169,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68367,"byte_end":68395,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68400,"byte_end":68403,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U4> = String::from(\"ab\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68408,"byte_end":68455,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/ let s = s.as_mut_str();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68460,"byte_end":68487,"line_start":173,"line_end":173,"column_start":5,"column_end":32}},{"value":"/ s.make_ascii_uppercase();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68492,"byte_end":68521,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68526,"byte_end":68533,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68538,"byte_end":68547,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69131,"byte_end":69139,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"push_str","qualname":"<String<N>>::push_str","value":"fn (&mut self, string: &str) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Appends a given string slice onto the end of this `String`.","sig":null,"attributes":[{"value":"/ Appends a given string slice onto the end of this `String`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68681,"byte_end":68744,"line_start":181,"line_end":181,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68749,"byte_end":68752,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68757,"byte_end":68771,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68776,"byte_end":68779,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68784,"byte_end":68800,"line_start":185,"line_end":185,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68805,"byte_end":68808,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68813,"byte_end":68820,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68825,"byte_end":68850,"line_start":188,"line_end":188,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68855,"byte_end":68883,"line_start":189,"line_end":189,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68888,"byte_end":68891,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U8> = String::from(\"foo\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68896,"byte_end":68944,"line_start":191,"line_end":191,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68949,"byte_end":68952,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ assert!(s.push_str(\"bar\").is_ok());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":68957,"byte_end":68996,"line_start":193,"line_end":193,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69001,"byte_end":69004,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foobar\", s);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69009,"byte_end":69037,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69042,"byte_end":69045,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ assert!(s.push_str(\"tender\").is_err());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69050,"byte_end":69093,"line_start":197,"line_end":197,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69098,"byte_end":69105,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69110,"byte_end":69119,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69582,"byte_end":69590,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"name":"capacity","qualname":"<String<N>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of elements the String can hold","sig":null,"attributes":[{"value":"/ Returns the maximum number of elements the String can hold","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69252,"byte_end":69314,"line_start":204,"line_end":204,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69319,"byte_end":69322,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69327,"byte_end":69341,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69346,"byte_end":69349,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69354,"byte_end":69370,"line_start":208,"line_end":208,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69375,"byte_end":69378,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69383,"byte_end":69390,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69395,"byte_end":69420,"line_start":211,"line_end":211,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69425,"byte_end":69453,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69458,"byte_end":69461,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U4> = String::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69466,"byte_end":69508,"line_start":214,"line_end":214,"column_start":5,"column_end":47}},{"value":"/ assert!(s.capacity() == 4);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69513,"byte_end":69544,"line_start":215,"line_end":215,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69549,"byte_end":69556,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69561,"byte_end":69570,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70191,"byte_end":70195,"line_start":245,"line_end":245,"column_start":12,"column_end":16},"name":"push","qualname":"<String<N>>::push","value":"fn (&mut self, c: char) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Appends the given [`char`] to the end of this `String`.","sig":null,"attributes":[{"value":"/ Appends the given [`char`] to the end of this `String`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69650,"byte_end":69709,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69714,"byte_end":69717,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ [`char`]: ../../std/primitive.char.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69722,"byte_end":69765,"line_start":224,"line_end":224,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69770,"byte_end":69773,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69778,"byte_end":69792,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69797,"byte_end":69800,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69805,"byte_end":69821,"line_start":228,"line_end":228,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69826,"byte_end":69829,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69834,"byte_end":69841,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69846,"byte_end":69871,"line_start":231,"line_end":231,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69876,"byte_end":69904,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69909,"byte_end":69912,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U8> = String::from(\"abc\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69917,"byte_end":69965,"line_start":234,"line_end":234,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69970,"byte_end":69973,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ s.push('1').unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":69978,"byte_end":70003,"line_start":236,"line_end":236,"column_start":5,"column_end":30}},{"value":"/ s.push('2').unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70008,"byte_end":70033,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/ s.push('3').unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70038,"byte_end":70063,"line_start":238,"line_end":238,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70068,"byte_end":70071,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ assert!(\"abc123\" == s.as_str());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70076,"byte_end":70112,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70117,"byte_end":70120,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"abc123\", s);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70125,"byte_end":70153,"line_start":242,"line_end":242,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70158,"byte_end":70165,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70170,"byte_end":70179,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71197,"byte_end":71205,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"truncate","qualname":"<String<N>>::truncate","value":"fn (&mut self, new_len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens this `String` to the specified length.","sig":null,"attributes":[{"value":"/ Shortens this `String` to the specified length.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70482,"byte_end":70533,"line_start":255,"line_end":255,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70538,"byte_end":70541,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than the string's current length, this has no","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70546,"byte_end":70619,"line_start":257,"line_end":257,"column_start":5,"column_end":78}},{"value":"/ effect.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70624,"byte_end":70635,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70640,"byte_end":70643,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70648,"byte_end":70713,"line_start":260,"line_end":260,"column_start":5,"column_end":70}},{"value":"/ of the string","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70718,"byte_end":70735,"line_start":261,"line_end":261,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70740,"byte_end":70743,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70748,"byte_end":70760,"line_start":263,"line_end":263,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70765,"byte_end":70768,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Panics if `new_len` does not lie on a [`char`] boundary.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70773,"byte_end":70833,"line_start":265,"line_end":265,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70838,"byte_end":70841,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`char`]: ../../std/primitive.char.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70846,"byte_end":70889,"line_start":267,"line_end":267,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70894,"byte_end":70897,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70902,"byte_end":70916,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70921,"byte_end":70924,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70929,"byte_end":70945,"line_start":271,"line_end":271,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70950,"byte_end":70953,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70958,"byte_end":70965,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":70970,"byte_end":70995,"line_start":274,"line_end":274,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71000,"byte_end":71028,"line_start":275,"line_end":275,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71033,"byte_end":71036,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U8> = String::from(\"hello\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71041,"byte_end":71091,"line_start":277,"line_end":277,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71096,"byte_end":71099,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ s.truncate(2);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71104,"byte_end":71122,"line_start":279,"line_end":279,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71127,"byte_end":71130,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"he\", s);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71135,"byte_end":71159,"line_start":281,"line_end":281,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71164,"byte_end":71171,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71176,"byte_end":71185,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71982,"byte_end":71985,"line_start":313,"line_end":313,"column_start":12,"column_end":15},"name":"pop","qualname":"<String<N>>::pop","value":"fn (&mut self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last character from the string buffer and returns it.","sig":null,"attributes":[{"value":"/ Removes the last character from the string buffer and returns it.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71385,"byte_end":71454,"line_start":291,"line_end":291,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71459,"byte_end":71462,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if this `String` is empty.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71467,"byte_end":71514,"line_start":293,"line_end":293,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71519,"byte_end":71522,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71527,"byte_end":71587,"line_start":295,"line_end":295,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71592,"byte_end":71595,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71600,"byte_end":71614,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71619,"byte_end":71622,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71627,"byte_end":71643,"line_start":299,"line_end":299,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71648,"byte_end":71651,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71656,"byte_end":71663,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71668,"byte_end":71693,"line_start":302,"line_end":302,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71698,"byte_end":71726,"line_start":303,"line_end":303,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71731,"byte_end":71734,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U8> = String::from(\"foo\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71739,"byte_end":71787,"line_start":305,"line_end":305,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71792,"byte_end":71795,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.pop(), Some('o'));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71800,"byte_end":71835,"line_start":307,"line_end":307,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(s.pop(), Some('o'));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71840,"byte_end":71875,"line_start":308,"line_end":308,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(s.pop(), Some('f'));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71880,"byte_end":71915,"line_start":309,"line_end":309,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71920,"byte_end":71923,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.pop(), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71928,"byte_end":71958,"line_start":311,"line_end":311,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":71963,"byte_end":71970,"line_start":312,"line_end":312,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72798,"byte_end":72803,"line_start":348,"line_end":348,"column_start":12,"column_end":17},"name":"clear","qualname":"<String<N>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Truncates this `String`, removing all contents.","sig":null,"attributes":[{"value":"/ Truncates this `String`, removing all contents.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72260,"byte_end":72311,"line_start":326,"line_end":326,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72316,"byte_end":72319,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ While this means the `String` will have a length of zero, it does not","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72324,"byte_end":72397,"line_start":328,"line_end":328,"column_start":5,"column_end":78}},{"value":"/ touch its capacity.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72402,"byte_end":72425,"line_start":329,"line_end":329,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72430,"byte_end":72433,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72438,"byte_end":72452,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72457,"byte_end":72460,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72465,"byte_end":72481,"line_start":333,"line_end":333,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72486,"byte_end":72489,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72494,"byte_end":72501,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72506,"byte_end":72531,"line_start":336,"line_end":336,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72536,"byte_end":72564,"line_start":337,"line_end":337,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72569,"byte_end":72572,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U8> = String::from(\"foo\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72577,"byte_end":72625,"line_start":339,"line_end":339,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72630,"byte_end":72633,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ s.clear();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72638,"byte_end":72652,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72657,"byte_end":72660,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ assert!(s.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72665,"byte_end":72691,"line_start":343,"line_end":343,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(0, s.len());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72696,"byte_end":72723,"line_start":344,"line_end":344,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(8, s.capacity());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72728,"byte_end":72760,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72765,"byte_end":72772,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72777,"byte_end":72786,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":82827,"byte_end":82830,"line_start":8,"line_end":8,"column_start":18,"column_end":21},"name":"new","qualname":"<crate::i::Vec<A>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `Vec` `const` constructor; wrap the returned value in [`Vec`](../struct.Vec.html)\n","sig":null,"attributes":[{"value":"/ `Vec` `const` constructor; wrap the returned value in [`Vec`](../struct.Vec.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":82724,"byte_end":82809,"line_start":7,"line_end":7,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":725},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86966,"byte_end":86969,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"Vec","qualname":"::vec::Vec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed capacity [`Vec`](https://doc.rust-lang.org/std/vec/struct.Vec.html)","sig":null,"attributes":[{"value":"/ A fixed capacity [`Vec`](https://doc.rust-lang.org/std/vec/struct.Vec.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86315,"byte_end":86394,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86395,"byte_end":86398,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86399,"byte_end":86413,"line_start":136,"line_end":136,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86414,"byte_end":86417,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86418,"byte_end":86425,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use heapless::Vec;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86426,"byte_end":86448,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86449,"byte_end":86477,"line_start":140,"line_end":140,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86478,"byte_end":86481,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ // A vector with a fixed capacity of 8 elements allocated on the stack","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86482,"byte_end":86556,"line_start":142,"line_end":142,"column_start":1,"column_end":75}},{"value":"/ let mut vec = Vec::<_, U8>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86557,"byte_end":86595,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/ vec.push(1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86596,"byte_end":86612,"line_start":144,"line_end":144,"column_start":1,"column_end":17}},{"value":"/ vec.push(2);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86613,"byte_end":86629,"line_start":145,"line_end":145,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86630,"byte_end":86633,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec.len(), 2);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86634,"byte_end":86663,"line_start":147,"line_end":147,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(vec[0], 1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86664,"byte_end":86690,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86691,"byte_end":86694,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec.pop(), Some(2));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86695,"byte_end":86730,"line_start":150,"line_end":150,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec.len(), 1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86731,"byte_end":86760,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86761,"byte_end":86764,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ vec[0] = 7;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86765,"byte_end":86780,"line_start":153,"line_end":153,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(vec[0], 7);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86781,"byte_end":86807,"line_start":154,"line_end":154,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86808,"byte_end":86811,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ vec.extend([1, 2, 3].iter().cloned());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86812,"byte_end":86854,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86855,"byte_end":86858,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ for x in &vec {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86859,"byte_end":86878,"line_start":158,"line_end":158,"column_start":1,"column_end":20}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86879,"byte_end":86905,"line_start":159,"line_end":159,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86906,"byte_end":86911,"line_start":160,"line_end":160,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(vec, [7, 1, 2, 3]);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86912,"byte_end":86946,"line_start":161,"line_end":161,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":86947,"byte_end":86954,"line_start":162,"line_end":162,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87701,"byte_end":87704,"line_start":196,"line_end":196,"column_start":12,"column_end":15},"name":"new","qualname":"<Vec<T, N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty vector with a fixed capacity of `N`","sig":null,"attributes":[{"value":"/ Constructs a new, empty vector with a fixed capacity of `N`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87282,"byte_end":87345,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87350,"byte_end":87353,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87358,"byte_end":87372,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87377,"byte_end":87380,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87385,"byte_end":87392,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use heapless::Vec;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87397,"byte_end":87419,"line_start":187,"line_end":187,"column_start":5,"column_end":27}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87424,"byte_end":87452,"line_start":188,"line_end":188,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87457,"byte_end":87460,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ // allocate the vector on the stack","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87465,"byte_end":87504,"line_start":190,"line_end":190,"column_start":5,"column_end":44}},{"value":"/ let mut x: Vec<u8, U16> = Vec::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87509,"byte_end":87550,"line_start":191,"line_end":191,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87555,"byte_end":87558,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ // allocate the vector in a static variable","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87563,"byte_end":87610,"line_start":193,"line_end":193,"column_start":5,"column_end":52}},{"value":"/ static mut X: Vec<u8, U16> = Vec(heapless::i::Vec::new());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87615,"byte_end":87677,"line_start":194,"line_end":194,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87682,"byte_end":87689,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87857,"byte_end":87865,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Vec<T, N>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of elements the vector can hold\n","sig":null,"attributes":[{"value":"/ Returns the maximum number of elements the vector can hold","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87783,"byte_end":87845,"line_start":201,"line_end":201,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87976,"byte_end":87981,"line_start":207,"line_end":207,"column_start":12,"column_end":17},"name":"clear","qualname":"<Vec<T, N>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the vector, removing all values.\n","sig":null,"attributes":[{"value":"/ Clears the vector, removing all values.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87921,"byte_end":87964,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88549,"byte_end":88566,"line_start":227,"line_end":227,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<Vec<T, N>>::extend_from_slice","value":"fn (&mut self, other: &[T]) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Clones and appends all elements in a slice to the `Vec`.","sig":null,"attributes":[{"value":"/ Clones and appends all elements in a slice to the `Vec`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88029,"byte_end":88089,"line_start":211,"line_end":211,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88094,"byte_end":88097,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Iterates over the slice `other`, clones each element, and then appends","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88102,"byte_end":88176,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ it to this `Vec`. The `other` vector is traversed in-order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88181,"byte_end":88244,"line_start":214,"line_end":214,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88249,"byte_end":88252,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88257,"byte_end":88271,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88276,"byte_end":88279,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88284,"byte_end":88291,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use heapless::Vec;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88296,"byte_end":88318,"line_start":219,"line_end":219,"column_start":5,"column_end":27}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88323,"byte_end":88351,"line_start":220,"line_end":220,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88356,"byte_end":88359,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let mut vec = Vec::<u8, U8>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88364,"byte_end":88403,"line_start":222,"line_end":222,"column_start":5,"column_end":44}},{"value":"/ vec.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88408,"byte_end":88433,"line_start":223,"line_end":223,"column_start":5,"column_end":30}},{"value":"/ vec.extend_from_slice(&[2, 3, 4]).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88438,"byte_end":88485,"line_start":224,"line_end":224,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(*vec, [1, 2, 3, 4]);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88490,"byte_end":88525,"line_start":225,"line_end":225,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88530,"byte_end":88537,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88787,"byte_end":88790,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"pop","qualname":"<Vec<T, N>>::pop","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last element from a vector and return it, or `None` if it's empty\n","sig":null,"attributes":[{"value":"/ Removes the last element from a vector and return it, or `None` if it's empty","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88694,"byte_end":88775,"line_start":234,"line_end":234,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":89078,"byte_end":89082,"line_start":246,"line_end":246,"column_start":12,"column_end":16},"name":"push","qualname":"<Vec<T, N>>::push","value":"fn (&mut self, item: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Appends an `item` to the back of the collection","sig":null,"attributes":[{"value":"/ Appends an `item` to the back of the collection","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":88953,"byte_end":89004,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":89009,"byte_end":89012,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Returns back the `item` if the vector is full","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":89017,"byte_end":89066,"line_start":245,"line_end":245,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":89356,"byte_end":89364,"line_start":255,"line_end":255,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Vec<T, N>>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens the vector, keeping the first `len` elements and dropping the rest.\n","sig":null,"attributes":[{"value":"/ Shortens the vector, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":89264,"byte_end":89344,"line_start":254,"line_end":254,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":90155,"byte_end":90161,"line_start":275,"line_end":275,"column_start":12,"column_end":18},"name":"resize","qualname":"<Vec<T, N>>::resize","value":"fn (&mut self, new_len: usize, value: T) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Resizes the Vec in-place so that len is equal to new_len.","sig":null,"attributes":[{"value":"/ Resizes the Vec in-place so that len is equal to new_len.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":89792,"byte_end":89853,"line_start":268,"line_end":268,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":89858,"byte_end":89861,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If new_len is greater than len, the Vec is extended by the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":89866,"byte_end":89928,"line_start":270,"line_end":270,"column_start":5,"column_end":67}},{"value":"/ difference, with each additional slot filled with value. If","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":89933,"byte_end":89996,"line_start":271,"line_end":271,"column_start":5,"column_end":68}},{"value":"/ new_len is less than len, the Vec is simply truncated.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":90001,"byte_end":90059,"line_start":272,"line_end":272,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":90064,"byte_end":90067,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ See also [`resize_default`](struct.Vec.html#method.resize_default).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":90072,"byte_end":90143,"line_start":274,"line_end":274,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":90935,"byte_end":90949,"line_start":301,"line_end":301,"column_start":12,"column_end":26},"name":"resize_default","qualname":"<Vec<T, N>>::resize_default","value":"fn (&mut self, new_len: usize) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Resizes the `Vec` in-place so that `len` is equal to `new_len`.","sig":null,"attributes":[{"value":"/ Resizes the `Vec` in-place so that `len` is equal to `new_len`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":90555,"byte_end":90622,"line_start":294,"line_end":294,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":90627,"byte_end":90630,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than `len`, the `Vec` is extended by the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":90635,"byte_end":90703,"line_start":296,"line_end":296,"column_start":5,"column_end":73}},{"value":"/ difference, with each additional slot filled with `Default::default()`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":90708,"byte_end":90783,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ If `new_len` is less than `len`, the `Vec` is simply truncated.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":90788,"byte_end":90855,"line_start":298,"line_end":298,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":90860,"byte_end":90863,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ See also [`resize`](struct.Vec.html#method.resize).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":90868,"byte_end":90923,"line_start":300,"line_end":300,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91875,"byte_end":91886,"line_start":336,"line_end":336,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<Vec<T, N>>::swap_remove","value":"fn (&mut self, index: usize) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes an element from the vector and returns it.","sig":null,"attributes":[{"value":"/ Removes an element from the vector and returns it.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91093,"byte_end":91147,"line_start":308,"line_end":308,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91152,"byte_end":91155,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The removed element is replaced by the last element of the vector.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91160,"byte_end":91230,"line_start":310,"line_end":310,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91235,"byte_end":91238,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ This does not preserve ordering, but is O(1).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91243,"byte_end":91292,"line_start":312,"line_end":312,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91297,"byte_end":91300,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91305,"byte_end":91317,"line_start":314,"line_end":314,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91322,"byte_end":91325,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91330,"byte_end":91369,"line_start":316,"line_end":316,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91374,"byte_end":91377,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91382,"byte_end":91396,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91401,"byte_end":91404,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91409,"byte_end":91416,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use heapless::Vec;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91421,"byte_end":91443,"line_start":321,"line_end":321,"column_start":5,"column_end":27}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91448,"byte_end":91476,"line_start":322,"line_end":322,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91481,"byte_end":91484,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ let mut v: Vec<_, U8> = Vec::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91489,"byte_end":91528,"line_start":324,"line_end":324,"column_start":5,"column_end":44}},{"value":"/ v.push(\"foo\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91533,"byte_end":91560,"line_start":325,"line_end":325,"column_start":5,"column_end":32}},{"value":"/ v.push(\"bar\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91565,"byte_end":91592,"line_start":326,"line_end":326,"column_start":5,"column_end":32}},{"value":"/ v.push(\"baz\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91597,"byte_end":91624,"line_start":327,"line_end":327,"column_start":5,"column_end":32}},{"value":"/ v.push(\"qux\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91629,"byte_end":91656,"line_start":328,"line_end":328,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91661,"byte_end":91664,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v.swap_remove(1), \"bar\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91669,"byte_end":91709,"line_start":330,"line_end":330,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(&*v, [\"foo\", \"qux\", \"baz\"]);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91714,"byte_end":91757,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91762,"byte_end":91765,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v.swap_remove(0), \"foo\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91770,"byte_end":91810,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(&*v, [\"baz\", \"qux\"]);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91815,"byte_end":91851,"line_start":334,"line_end":334,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":91856,"byte_end":91863,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":802},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":94445,"byte_end":94453,"line_start":468,"line_end":468,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::vec::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806}],"decl_id":null,"docs":" An iterator that moves out of an [`Vec`][`Vec`].","sig":null,"attributes":[{"value":"/ An iterator that moves out of an [`Vec`][`Vec`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":94224,"byte_end":94276,"line_start":462,"line_end":462,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":94277,"byte_end":94280,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ This struct is created by calling the `into_iter` method on [`Vec`][`Vec`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":94281,"byte_end":94360,"line_start":464,"line_end":464,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":94361,"byte_end":94364,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ [`Vec`]: (https://doc.rust-lang.org/std/vec/struct.Vec.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":94365,"byte_end":94429,"line_start":466,"line_end":466,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":94430,"byte_end":94433,"line_start":467,"line_end":467,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":1084},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_heap","qualname":"::binary_heap","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1096},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1106},{"krate":0,"index":1112},{"krate":0,"index":1131},{"krate":0,"index":1137},{"krate":0,"index":1145},{"krate":0,"index":1152},{"krate":0,"index":1157},{"krate":0,"index":1163},{"krate":0,"index":1168},{"krate":0,"index":1174},{"krate":0,"index":1178},{"krate":0,"index":1183},{"krate":0,"index":1188},{"krate":0,"index":1193},{"krate":0,"index":1198}],"decl_id":null,"docs":" A priority queue implemented with a binary heap.","sig":null,"attributes":[{"value":"! A priority queue implemented with a binary heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":115758,"byte_end":115810,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":115811,"byte_end":115814,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Insertion and popping the largest element have `O(log n)` time complexity. Checking the largest","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":115815,"byte_end":115914,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"! / smallest element is `O(1)`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":115915,"byte_end":115948,"line_start":4,"line_end":4,"column_start":1,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":1100},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":116436,"byte_end":116439,"line_start":24,"line_end":24,"column_start":10,"column_end":13},"name":"Min","qualname":"::binary_heap::Min","value":"Min::{}","parent":null,"children":[],"decl_id":null,"docs":" Min-heap\n","sig":null,"attributes":[{"value":"/ Min-heap","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":116414,"byte_end":116426,"line_start":23,"line_end":23,"column_start":1,"column_end":13}}]},{"kind":"Enum","id":{"krate":0,"index":1101},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":116466,"byte_end":116469,"line_start":27,"line_end":27,"column_start":10,"column_end":13},"name":"Max","qualname":"::binary_heap::Max","value":"Max::{}","parent":null,"children":[],"decl_id":null,"docs":" Max-heap\n","sig":null,"attributes":[{"value":"/ Max-heap","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":116444,"byte_end":116456,"line_start":26,"line_end":26,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":116650,"byte_end":116653,"line_start":32,"line_end":32,"column_start":18,"column_end":21},"name":"new","qualname":"<crate::i::BinaryHeap<A, K>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `BinaryHeap` `const` constructor; wrap the returned value in\n [`BinaryHeap`](../struct.BinaryHeap.html)\n","sig":null,"attributes":[{"value":"/ `BinaryHeap` `const` constructor; wrap the returned value in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":116518,"byte_end":116582,"line_start":30,"line_end":30,"column_start":5,"column_end":69}},{"value":"/ [`BinaryHeap`](../struct.BinaryHeap.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":116587,"byte_end":116632,"line_start":31,"line_end":31,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1106},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118333,"byte_end":118343,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"BinaryHeap","qualname":"::binary_heap::BinaryHeap","value":"","parent":null,"children":[],"decl_id":null,"docs":" A priority queue implemented with a binary heap.","sig":null,"attributes":[{"value":"/ A priority queue implemented with a binary heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":116772,"byte_end":116824,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":116825,"byte_end":116828,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This can be either a min-heap or a max-heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":116829,"byte_end":116877,"line_start":42,"line_end":42,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":116878,"byte_end":116881,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for an item to be modified in such a way that the item's ordering relative","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":116882,"byte_end":116980,"line_start":44,"line_end":44,"column_start":1,"column_end":99}},{"value":"/ to any other item, as determined by the `Ord` trait, changes while it is in the heap. This is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":116981,"byte_end":117078,"line_start":45,"line_end":45,"column_start":1,"column_end":98}},{"value":"/ normally only possible through `Cell`, `RefCell`, global state, I/O, or unsafe code.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117079,"byte_end":117167,"line_start":46,"line_end":46,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117168,"byte_end":117171,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117172,"byte_end":117179,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117180,"byte_end":117229,"line_start":49,"line_end":49,"column_start":1,"column_end":50}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117230,"byte_end":117258,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117259,"byte_end":117262,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117263,"byte_end":117324,"line_start":52,"line_end":52,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117325,"byte_end":117328,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // We can use peek to look at the next item in the heap. In this case,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117329,"byte_end":117403,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ // there's no items in there yet so we get None.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117404,"byte_end":117456,"line_start":55,"line_end":55,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(heap.peek(), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117457,"byte_end":117491,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117492,"byte_end":117495,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Let's add some scores...","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117496,"byte_end":117527,"line_start":58,"line_end":58,"column_start":1,"column_end":32}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117528,"byte_end":117554,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ heap.push(5).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117555,"byte_end":117581,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"/ heap.push(2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117582,"byte_end":117608,"line_start":61,"line_end":61,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117609,"byte_end":117612,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // Now peek shows the most important item in the heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117613,"byte_end":117671,"line_start":63,"line_end":63,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(heap.peek(), Some(&5));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117672,"byte_end":117710,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117711,"byte_end":117714,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // We can check the length of a heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117715,"byte_end":117756,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(heap.len(), 3);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117757,"byte_end":117787,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117788,"byte_end":117791,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // We can iterate over the items in the heap, although they are returned in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117792,"byte_end":117871,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ // a random order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117872,"byte_end":117894,"line_start":70,"line_end":70,"column_start":1,"column_end":23}},{"value":"/ for x in &heap {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117895,"byte_end":117915,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117916,"byte_end":117942,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117943,"byte_end":117948,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117949,"byte_end":117952,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ // If we instead pop these scores, they should come back in order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":117953,"byte_end":118023,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(heap.pop(), Some(5));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118024,"byte_end":118060,"line_start":76,"line_end":76,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(heap.pop(), Some(2));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118061,"byte_end":118097,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(heap.pop(), Some(1));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118098,"byte_end":118134,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(heap.pop(), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118135,"byte_end":118168,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118169,"byte_end":118172,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // We can clear the heap of any remaining items.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118173,"byte_end":118225,"line_start":81,"line_end":81,"column_start":1,"column_end":53}},{"value":"/ heap.clear();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118226,"byte_end":118243,"line_start":82,"line_end":82,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118244,"byte_end":118247,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // The heap should now be empty.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118248,"byte_end":118284,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/ assert!(heap.is_empty())","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118285,"byte_end":118313,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118314,"byte_end":118321,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119096,"byte_end":119099,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<BinaryHeap<T, N, K>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty BinaryHeap as a $K-heap.","sig":null,"attributes":[{"value":"/ Creates an empty BinaryHeap as a $K-heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118605,"byte_end":118650,"line_start":102,"line_end":102,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118655,"byte_end":118658,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118663,"byte_end":118670,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118675,"byte_end":118724,"line_start":105,"line_end":105,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118729,"byte_end":118757,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118762,"byte_end":118765,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ // allocate the binary heap on the stack","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118770,"byte_end":118814,"line_start":108,"line_end":108,"column_start":5,"column_end":49}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118819,"byte_end":118880,"line_start":109,"line_end":109,"column_start":5,"column_end":66}},{"value":"/ heap.push(4).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118885,"byte_end":118911,"line_start":110,"line_end":110,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118916,"byte_end":118919,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ // allocate the binary heap in a static variable","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118924,"byte_end":118976,"line_start":112,"line_end":112,"column_start":5,"column_end":57}},{"value":"/ static mut HEAP: BinaryHeap<i32, U8, Max> = BinaryHeap(heapless::i::BinaryHeap::new());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118981,"byte_end":119072,"line_start":113,"line_end":113,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119077,"byte_end":119084,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119248,"byte_end":119256,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BinaryHeap<T, N, K>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity of the binary heap.\n","sig":null,"attributes":[{"value":"/ Returns the capacity of the binary heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119192,"byte_end":119236,"line_start":120,"line_end":120,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119740,"byte_end":119745,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"clear","qualname":"<BinaryHeap<T, N, K>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Drops all items from the binary heap.","sig":null,"attributes":[{"value":"/ Drops all items from the binary heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119317,"byte_end":119358,"line_start":125,"line_end":125,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119363,"byte_end":119366,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119371,"byte_end":119378,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119383,"byte_end":119432,"line_start":128,"line_end":128,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119437,"byte_end":119465,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119470,"byte_end":119473,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119478,"byte_end":119539,"line_start":131,"line_end":131,"column_start":5,"column_end":66}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119544,"byte_end":119570,"line_start":132,"line_end":132,"column_start":5,"column_end":31}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119575,"byte_end":119601,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119606,"byte_end":119609,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert!(!heap.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119614,"byte_end":119644,"line_start":135,"line_end":135,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119649,"byte_end":119652,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ heap.clear();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119657,"byte_end":119674,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119679,"byte_end":119682,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ assert!(heap.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119687,"byte_end":119716,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119721,"byte_end":119728,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120150,"byte_end":120153,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"len","qualname":"<BinaryHeap<T, N, K>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the binary heap.","sig":null,"attributes":[{"value":"/ Returns the length of the binary heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119798,"byte_end":119840,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119845,"byte_end":119848,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119853,"byte_end":119860,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119865,"byte_end":119914,"line_start":148,"line_end":148,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119919,"byte_end":119947,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119952,"byte_end":119955,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":119960,"byte_end":120021,"line_start":151,"line_end":151,"column_start":5,"column_end":66}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120026,"byte_end":120052,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120057,"byte_end":120083,"line_start":153,"line_end":153,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120088,"byte_end":120091,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(heap.len(), 2);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120096,"byte_end":120126,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120131,"byte_end":120138,"line_start":156,"line_end":156,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120637,"byte_end":120645,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BinaryHeap<T, N, K>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the binary heap is empty.","sig":null,"attributes":[{"value":"/ Checks if the binary heap is empty.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120207,"byte_end":120246,"line_start":161,"line_end":161,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120251,"byte_end":120254,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120259,"byte_end":120266,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120271,"byte_end":120320,"line_start":164,"line_end":164,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120325,"byte_end":120353,"line_start":165,"line_end":165,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120358,"byte_end":120361,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120366,"byte_end":120427,"line_start":167,"line_end":167,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120432,"byte_end":120435,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert!(heap.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120440,"byte_end":120469,"line_start":169,"line_end":169,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120474,"byte_end":120477,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120482,"byte_end":120508,"line_start":171,"line_end":171,"column_start":5,"column_end":31}},{"value":"/ heap.push(5).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120513,"byte_end":120539,"line_start":172,"line_end":172,"column_start":5,"column_end":31}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120544,"byte_end":120570,"line_start":173,"line_end":173,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120575,"byte_end":120578,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ assert!(!heap.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120583,"byte_end":120613,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120618,"byte_end":120625,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121251,"byte_end":121255,"line_start":199,"line_end":199,"column_start":12,"column_end":16},"name":"iter","qualname":"<BinaryHeap<T, N, K>>::iter","value":"fn (&self) -> slice::Iter<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all values in the underlying vector, in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all values in the underlying vector, in arbitrary order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120698,"byte_end":120787,"line_start":181,"line_end":181,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120792,"byte_end":120795,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120800,"byte_end":120807,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120812,"byte_end":120861,"line_start":184,"line_end":184,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120866,"byte_end":120894,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120899,"byte_end":120902,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120907,"byte_end":120968,"line_start":187,"line_end":187,"column_start":5,"column_end":66}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":120973,"byte_end":120999,"line_start":188,"line_end":188,"column_start":5,"column_end":31}},{"value":"/ heap.push(2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121004,"byte_end":121030,"line_start":189,"line_end":189,"column_start":5,"column_end":31}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121035,"byte_end":121061,"line_start":190,"line_end":190,"column_start":5,"column_end":31}},{"value":"/ heap.push(4).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121066,"byte_end":121092,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121097,"byte_end":121100,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 2, 3, 4 in arbitrary order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121105,"byte_end":121147,"line_start":193,"line_end":193,"column_start":5,"column_end":47}},{"value":"/ for x in heap.iter() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121152,"byte_end":121178,"line_start":194,"line_end":194,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121183,"byte_end":121209,"line_start":195,"line_end":195,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121214,"byte_end":121217,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121222,"byte_end":121227,"line_start":197,"line_end":197,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121232,"byte_end":121239,"line_start":198,"line_end":198,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121563,"byte_end":121571,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<BinaryHeap<T, N, K>>::iter_mut","value":"fn (&mut self) -> slice::IterMut<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator visiting all values in the underlying vector, in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator visiting all values in the underlying vector, in arbitrary order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121336,"byte_end":121432,"line_start":203,"line_end":203,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121437,"byte_end":121440,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ **WARNING** Mutating the items in the binary heap can leave the heap in an inconsistent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121445,"byte_end":121536,"line_start":205,"line_end":205,"column_start":5,"column_end":96}},{"value":"/ state.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121541,"byte_end":121551,"line_start":206,"line_end":206,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122178,"byte_end":122182,"line_start":226,"line_end":226,"column_start":12,"column_end":16},"name":"peek","qualname":"<BinaryHeap<T, N, K>>::peek","value":"fn (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the *top* (greatest if max-heap, smallest if min-heap) item in the binary heap, or\n None if it is empty.","sig":null,"attributes":[{"value":"/ Returns the *top* (greatest if max-heap, smallest if min-heap) item in the binary heap, or","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121667,"byte_end":121761,"line_start":211,"line_end":211,"column_start":5,"column_end":99}},{"value":"/ None if it is empty.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121766,"byte_end":121790,"line_start":212,"line_end":212,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121795,"byte_end":121798,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121803,"byte_end":121810,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121815,"byte_end":121864,"line_start":215,"line_end":215,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121869,"byte_end":121897,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121902,"byte_end":121905,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121910,"byte_end":121971,"line_start":218,"line_end":218,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(heap.peek(), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":121976,"byte_end":122010,"line_start":219,"line_end":219,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122015,"byte_end":122018,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122023,"byte_end":122049,"line_start":221,"line_end":221,"column_start":5,"column_end":31}},{"value":"/ heap.push(5).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122054,"byte_end":122080,"line_start":222,"line_end":222,"column_start":5,"column_end":31}},{"value":"/ heap.push(2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122085,"byte_end":122111,"line_start":223,"line_end":223,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(heap.peek(), Some(&5));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122116,"byte_end":122154,"line_start":224,"line_end":224,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122159,"byte_end":122166,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122991,"byte_end":122999,"line_start":257,"line_end":257,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<BinaryHeap<T, N, K>>::peek_mut","value":"fn (&mut self) -> Option<PeekMut<'_, T, N, K>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the greatest item in the binary heap, or\n `None` if it is empty.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the greatest item in the binary heap, or","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122255,"byte_end":122330,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ `None` if it is empty.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122335,"byte_end":122361,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122366,"byte_end":122369,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note: If the `PeekMut` value is leaked, the heap may be in an","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122374,"byte_end":122439,"line_start":233,"line_end":233,"column_start":5,"column_end":70}},{"value":"/ inconsistent state.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122444,"byte_end":122467,"line_start":234,"line_end":234,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122472,"byte_end":122475,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122480,"byte_end":122494,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122499,"byte_end":122502,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122507,"byte_end":122523,"line_start":238,"line_end":238,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122528,"byte_end":122531,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122536,"byte_end":122543,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122548,"byte_end":122597,"line_start":241,"line_end":241,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122602,"byte_end":122630,"line_start":242,"line_end":242,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122635,"byte_end":122638,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122643,"byte_end":122704,"line_start":244,"line_end":244,"column_start":5,"column_end":66}},{"value":"/ assert!(heap.peek_mut().is_none());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122709,"byte_end":122748,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122753,"byte_end":122756,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ heap.push(1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122761,"byte_end":122778,"line_start":247,"line_end":247,"column_start":5,"column_end":22}},{"value":"/ heap.push(5);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122783,"byte_end":122800,"line_start":248,"line_end":248,"column_start":5,"column_end":22}},{"value":"/ heap.push(2);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122805,"byte_end":122822,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122827,"byte_end":122832,"line_start":250,"line_end":250,"column_start":5,"column_end":10}},{"value":"/     let mut val = heap.peek_mut().unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122837,"byte_end":122884,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/     *val = 0;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122889,"byte_end":122906,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122911,"byte_end":122916,"line_start":253,"line_end":253,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122921,"byte_end":122924,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(heap.peek(), Some(&2));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122929,"byte_end":122967,"line_start":255,"line_end":255,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":122972,"byte_end":122979,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123762,"byte_end":123765,"line_start":283,"line_end":283,"column_start":12,"column_end":15},"name":"pop","qualname":"<BinaryHeap<T, N, K>>::pop","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the *top* (greatest if max-heap, smallest if min-heap) item from the binary heap and\n returns it, or None if it is empty.","sig":null,"attributes":[{"value":"/ Removes the *top* (greatest if max-heap, smallest if min-heap) item from the binary heap and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123227,"byte_end":123323,"line_start":268,"line_end":268,"column_start":5,"column_end":101}},{"value":"/ returns it, or None if it is empty.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123328,"byte_end":123367,"line_start":269,"line_end":269,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123372,"byte_end":123375,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123380,"byte_end":123387,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123392,"byte_end":123441,"line_start":272,"line_end":272,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123446,"byte_end":123474,"line_start":273,"line_end":273,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123479,"byte_end":123482,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123487,"byte_end":123548,"line_start":275,"line_end":275,"column_start":5,"column_end":66}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123553,"byte_end":123579,"line_start":276,"line_end":276,"column_start":5,"column_end":31}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123584,"byte_end":123610,"line_start":277,"line_end":277,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123615,"byte_end":123618,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(heap.pop(), Some(3));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123623,"byte_end":123659,"line_start":279,"line_end":279,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(heap.pop(), Some(1));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123664,"byte_end":123700,"line_start":280,"line_end":280,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(heap.pop(), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123705,"byte_end":123738,"line_start":281,"line_end":281,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123743,"byte_end":123750,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124107,"byte_end":124120,"line_start":293,"line_end":293,"column_start":19,"column_end":32},"name":"pop_unchecked","qualname":"<BinaryHeap<T, N, K>>::pop_unchecked","value":"fn (&mut self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes the *top* (greatest if max-heap, smallest if min-heap) item from the binary heap and\n returns it, without checking if the binary heap is empty.\n","sig":null,"attributes":[{"value":"/ Removes the *top* (greatest if max-heap, smallest if min-heap) item from the binary heap and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":123926,"byte_end":124022,"line_start":291,"line_end":291,"column_start":5,"column_end":101}},{"value":"/ returns it, without checking if the binary heap is empty.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124027,"byte_end":124088,"line_start":292,"line_end":292,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124804,"byte_end":124808,"line_start":317,"line_end":317,"column_start":12,"column_end":16},"name":"push","qualname":"<BinaryHeap<T, N, K>>::push","value":"fn (&mut self, item: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Pushes an item onto the binary heap.","sig":null,"attributes":[{"value":"/ Pushes an item onto the binary heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124380,"byte_end":124420,"line_start":303,"line_end":303,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124425,"byte_end":124428,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124433,"byte_end":124440,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124445,"byte_end":124494,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124499,"byte_end":124527,"line_start":307,"line_end":307,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124532,"byte_end":124535,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124540,"byte_end":124601,"line_start":309,"line_end":309,"column_start":5,"column_end":66}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124606,"byte_end":124632,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ heap.push(5).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124637,"byte_end":124663,"line_start":311,"line_end":311,"column_start":5,"column_end":31}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124668,"byte_end":124694,"line_start":312,"line_end":312,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124699,"byte_end":124702,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(heap.len(), 3);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124707,"byte_end":124737,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(heap.peek(), Some(&5));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124742,"byte_end":124780,"line_start":315,"line_end":315,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124785,"byte_end":124792,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":125090,"byte_end":125104,"line_start":327,"line_end":327,"column_start":19,"column_end":33},"name":"push_unchecked","qualname":"<BinaryHeap<T, N, K>>::push_unchecked","value":"fn (&mut self, item: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pushes an item onto the binary heap without first checking if it's full.\n","sig":null,"attributes":[{"value":"/ Pushes an item onto the binary heap without first checking if it's full.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":124995,"byte_end":125071,"line_start":326,"line_end":326,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":1145},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":128609,"byte_end":128616,"line_start":440,"line_end":440,"column_start":12,"column_end":19},"name":"PeekMut","qualname":"::binary_heap::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1151}],"decl_id":null,"docs":" Structure wrapping a mutable reference to the greatest item on a\n `BinaryHeap`.","sig":null,"attributes":[{"value":"/ Structure wrapping a mutable reference to the greatest item on a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":128292,"byte_end":128360,"line_start":432,"line_end":432,"column_start":1,"column_end":69}},{"value":"/ `BinaryHeap`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":128361,"byte_end":128378,"line_start":433,"line_end":433,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":128379,"byte_end":128382,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`peek_mut`] method on [`BinaryHeap`]. See","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":128383,"byte_end":128461,"line_start":435,"line_end":435,"column_start":1,"column_end":79}},{"value":"/ its documentation for more.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":128462,"byte_end":128493,"line_start":436,"line_end":436,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":128494,"byte_end":128497,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ [`peek_mut`]: struct.BinaryHeap.html#method.peek_mut","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":128498,"byte_end":128554,"line_start":438,"line_end":438,"column_start":1,"column_end":57}},{"value":"/ [`BinaryHeap`]: struct.BinaryHeap.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":128555,"byte_end":128597,"line_start":439,"line_end":439,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":129798,"byte_end":129801,"line_start":497,"line_end":497,"column_start":12,"column_end":15},"name":"pop","qualname":"<PeekMut>::pop","value":"fn (mut this: PeekMut<'a, T, N, K>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes the peeked value from the heap and returns it.\n","sig":null,"attributes":[{"value":"/ Removes the peeked value from the heap and returns it.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":129728,"byte_end":129786,"line_start":496,"line_end":496,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":1206},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/i.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"i","qualname":"::i","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/i.rs","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1213},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1228},{"krate":0,"index":1231}],"decl_id":null,"docs":" Unfortunate implementation detail required to construct `heapless` types in const context\n","sig":null,"attributes":[{"value":"! Unfortunate implementation detail required to construct `heapless` types in const context","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/i.rs","byte_start":134498,"byte_end":134591,"line_start":1,"line_end":1,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/i.rs","byte_start":134795,"byte_end":134805,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"BinaryHeap","qualname":"::i::BinaryHeap","value":"BinaryHeap {  }","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217}],"decl_id":null,"docs":" `const-fn` version of [`BinaryHeap`](../binary_heap/struct.BinaryHeap.html)\n","sig":null,"attributes":[{"value":"/ `const-fn` version of [`BinaryHeap`](../binary_heap/struct.BinaryHeap.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/i.rs","byte_start":134704,"byte_end":134783,"line_start":8,"line_end":8,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1218},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/i.rs","byte_start":134961,"byte_end":134970,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"LinearMap","qualname":"::i::LinearMap","value":"LinearMap {  }","parent":null,"children":[{"krate":0,"index":1220}],"decl_id":null,"docs":" `const-fn` version of [`LinearMap`](../struct.LinearMap.html)\n","sig":null,"attributes":[{"value":"/ `const-fn` version of [`LinearMap`](../struct.LinearMap.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/i.rs","byte_start":134884,"byte_end":134949,"line_start":14,"line_end":14,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1221},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/i.rs","byte_start":135110,"byte_end":135115,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Queue","qualname":"::i::Queue","value":"Queue {  }","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227}],"decl_id":null,"docs":" `const-fn` version of [`spsc::Queue`](../spsc/struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `const-fn` version of [`spsc::Queue`](../spsc/struct.Queue.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/i.rs","byte_start":135010,"byte_end":135078,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"cfg(has_atomics)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/i.rs","byte_start":135079,"byte_end":135098,"line_start":20,"line_end":20,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1228},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/i.rs","byte_start":135417,"byte_end":135423,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"String","qualname":"::i::String","value":"String {  }","parent":null,"children":[{"krate":0,"index":1230}],"decl_id":null,"docs":" `const-fn` version of [`String`](../struct.String.html)\n","sig":null,"attributes":[{"value":"/ `const-fn` version of [`String`](../struct.String.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/i.rs","byte_start":135346,"byte_end":135405,"line_start":31,"line_end":31,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1231},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/i.rs","byte_start":135525,"byte_end":135528,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"Vec","qualname":"::i::Vec","value":"Vec {  }","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234}],"decl_id":null,"docs":" `const-fn` version of [`Vec`](../struct.Vec.html)\n","sig":null,"attributes":[{"value":"/ `const-fn` version of [`Vec`](../struct.Vec.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/i.rs","byte_start":135460,"byte_end":135513,"line_start":36,"line_end":36,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":1235},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spsc","qualname":"::spsc","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1243},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1251},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1305},{"krate":0,"index":1309},{"krate":0,"index":1317},{"krate":0,"index":1324},{"krate":0,"index":1334},{"krate":0,"index":1340},{"krate":0,"index":1346},{"krate":0,"index":1353},{"krate":0,"index":1360},{"krate":0,"index":1369},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1382},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":2251},{"krate":0,"index":2255},{"krate":0,"index":2258},{"krate":0,"index":2262},{"krate":0,"index":2265},{"krate":0,"index":2274},{"krate":0,"index":2279},{"krate":0,"index":2283},{"krate":0,"index":2286},{"krate":0,"index":2290},{"krate":0,"index":2293},{"krate":0,"index":2302},{"krate":0,"index":2307},{"krate":0,"index":2311},{"krate":0,"index":2314},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2330},{"krate":0,"index":1393},{"krate":0,"index":1403},{"krate":0,"index":1408},{"krate":0,"index":1417},{"krate":0,"index":1424},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":2335},{"krate":0,"index":2343},{"krate":0,"index":2350},{"krate":0,"index":2358}],"decl_id":null,"docs":" Fixed capacity Single Producer Single Consumer (SPSC) queue","sig":null,"attributes":[{"value":"cfg(has_atomics)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3857,"byte_end":3876,"line_start":97,"line_end":97,"column_start":1,"column_end":20}},{"value":"! Fixed capacity Single Producer Single Consumer (SPSC) queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":135603,"byte_end":135666,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":135667,"byte_end":135670,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! NOTE: This module is not available on targets that do *not* support atomic loads, e.g. RISC-V","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":135671,"byte_end":135768,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"! cores w/o the A (Atomic) extension","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":135769,"byte_end":135807,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":135808,"byte_end":135811,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":135812,"byte_end":135826,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":135827,"byte_end":135830,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! - `Queue` can be used as a plain queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":135831,"byte_end":135873,"line_start":8,"line_end":8,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":135874,"byte_end":135877,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":135878,"byte_end":135885,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"! use heapless::spsc::Queue;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":135886,"byte_end":135916,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"! use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":135917,"byte_end":135945,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":135946,"byte_end":135949,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! let mut rb: Queue<u8, U4> = Queue::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":135950,"byte_end":135995,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":135996,"byte_end":135999,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! assert!(rb.enqueue(0).is_ok());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136000,"byte_end":136035,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"! assert!(rb.enqueue(1).is_ok());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136036,"byte_end":136071,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"! assert!(rb.enqueue(2).is_ok());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136072,"byte_end":136107,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"! assert!(rb.enqueue(3).is_ok());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136108,"byte_end":136143,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"! assert!(rb.enqueue(4).is_err()); // full","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136144,"byte_end":136188,"line_start":20,"line_end":20,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136189,"byte_end":136192,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! assert_eq!(rb.dequeue(), Some(0));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136193,"byte_end":136231,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136232,"byte_end":136239,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136240,"byte_end":136243,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! - `Queue` can be `split` and then be used in Single Producer Single Consumer mode","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136244,"byte_end":136329,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136330,"byte_end":136333,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136334,"byte_end":136341,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"! use heapless::spsc::Queue;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136342,"byte_end":136372,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"! use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136373,"byte_end":136401,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136402,"byte_end":136405,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! static mut Q: Queue<Event, U4> = Queue(heapless::i::Queue::new());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136406,"byte_end":136476,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136477,"byte_end":136480,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! enum Event { A, B }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136481,"byte_end":136504,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136505,"byte_end":136508,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136509,"byte_end":136524,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"!     // NOTE(unsafe) beware of aliasing the `consumer` end point","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136525,"byte_end":136592,"line_start":36,"line_end":36,"column_start":1,"column_end":68}},{"value":"!     let mut consumer = unsafe { Q.split().1 };","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136593,"byte_end":136643,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136644,"byte_end":136647,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136648,"byte_end":136662,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"!         // `dequeue` is a lockless operation","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136663,"byte_end":136711,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"!         match consumer.dequeue() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136712,"byte_end":136750,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"!             Some(Event::A) => { /* .. */ },","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136751,"byte_end":136798,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"!             Some(Event::B) => { /* .. */ },","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136799,"byte_end":136846,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"!             None => { /* sleep */ },","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136847,"byte_end":136887,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"!         }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136888,"byte_end":136901,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"! #       break","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136902,"byte_end":136919,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"!     }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136920,"byte_end":136929,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136930,"byte_end":136935,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136936,"byte_end":136939,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! // this is a different execution context that can preempt `main`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":136940,"byte_end":137008,"line_start":50,"line_end":50,"column_start":1,"column_end":69}},{"value":"! fn interrupt_handler() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137009,"byte_end":137037,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"!     // NOTE(unsafe) beware of aliasing the `producer` end point","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137038,"byte_end":137105,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"!     let mut producer = unsafe { Q.split().0 };","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137106,"byte_end":137156,"line_start":53,"line_end":53,"column_start":1,"column_end":51}},{"value":"! #   let condition = true;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137157,"byte_end":137186,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137187,"byte_end":137190,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"!     // ..","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137191,"byte_end":137204,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137205,"byte_end":137208,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"!     if condition {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137209,"byte_end":137231,"line_start":58,"line_end":58,"column_start":1,"column_end":23}},{"value":"!         producer.enqueue(Event::A).ok().unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137232,"byte_end":137285,"line_start":59,"line_end":59,"column_start":1,"column_end":54}},{"value":"!     } else {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137286,"byte_end":137302,"line_start":60,"line_end":60,"column_start":1,"column_end":17}},{"value":"!         producer.enqueue(Event::B).ok().unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137303,"byte_end":137356,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"!     }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137357,"byte_end":137366,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137367,"byte_end":137370,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"!     // ..","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137371,"byte_end":137384,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"! }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137385,"byte_end":137390,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137391,"byte_end":137398,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137399,"byte_end":137402,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! # Benchmarks","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137403,"byte_end":137419,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137420,"byte_end":137423,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! Measured on a ARM Cortex-M3 core running at 8 MHz and with zero Flash wait cycles","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137424,"byte_end":137509,"line_start":70,"line_end":70,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137510,"byte_end":137513,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! `-C opt-level`         |`3`|","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137514,"byte_end":137546,"line_start":72,"line_end":72,"column_start":1,"column_end":33}},{"value":"! -----------------------|---|","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137547,"byte_end":137579,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"! `Consumer<u8>::dequeue`| 15|","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137580,"byte_end":137612,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"! `Queue<u8>::dequeue`   | 12|","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137613,"byte_end":137645,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"! `Producer<u8>::enqueue`| 16|","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137646,"byte_end":137678,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"! `Queue<u8>::enqueue`   | 14|","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137679,"byte_end":137711,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137712,"byte_end":137715,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! - All execution times are in clock cycles. 1 clock cycle = 125 ns.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137716,"byte_end":137786,"line_start":79,"line_end":79,"column_start":1,"column_end":71}},{"value":"! - Execution time is *dependent* of `mem::size_of::<T>()`. Both operations include one","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137787,"byte_end":137876,"line_start":80,"line_end":80,"column_start":1,"column_end":90}},{"value":"! `memcpy(T)` in their successful path.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137877,"byte_end":137918,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"! - The optimization level is indicated in the first row.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137919,"byte_end":137978,"line_start":82,"line_end":82,"column_start":1,"column_end":60}},{"value":"! - The numbers reported correspond to the successful path (i.e. `Some` is returned by `dequeue`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":137979,"byte_end":138077,"line_start":83,"line_end":83,"column_start":1,"column_end":99}},{"value":"! and `Ok` is returned by `enqueue`).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":138078,"byte_end":138117,"line_start":84,"line_end":84,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/split.rs","byte_start":161620,"byte_end":161625,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"split","qualname":"<Queue<T, N, U, C>>::split","value":"fn <'rb> (&'rb mut self) -> (Producer<'rb, T, N, U, C>, Consumer<'rb, T, N, U, C>)","parent":null,"children":[],"decl_id":null,"docs":" Splits a statically allocated queue into producer and consumer end points\n","sig":null,"attributes":[{"value":"/ Splits a statically allocated queue into producer and consumer end points","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/split.rs","byte_start":161531,"byte_end":161608,"line_start":16,"line_end":16,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1268},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/split.rs","byte_start":162151,"byte_end":162159,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"Consumer","qualname":"::spsc::split::Consumer","value":"Consumer {  }","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275}],"decl_id":null,"docs":" A queue \"consumer\"; it can dequeue items from the queue\n","sig":null,"attributes":[{"value":"/ A queue \"consumer\"; it can dequeue items from the queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/split.rs","byte_start":162009,"byte_end":162068,"line_start":31,"line_end":31,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1282},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/split.rs","byte_start":162635,"byte_end":162643,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"Producer","qualname":"::spsc::split::Producer","value":"Producer {  }","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":1289}],"decl_id":null,"docs":" A queue \"producer\"; it can enqueue items into the queue\n","sig":null,"attributes":[{"value":"/ A queue \"producer\"; it can enqueue items into the queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/split.rs","byte_start":162493,"byte_end":162552,"line_start":52,"line_end":52,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1296},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":138440,"byte_end":138449,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"MultiCore","qualname":"::spsc::MultiCore","value":"","parent":null,"children":[],"decl_id":null,"docs":" Multi core synchronization - a memory barrier is used for synchronization\n","sig":null,"attributes":[{"value":"/ Multi core synchronization - a memory barrier is used for synchronization","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":138351,"byte_end":138428,"line_start":96,"line_end":96,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1298},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":138554,"byte_end":138564,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"SingleCore","qualname":"::spsc::SingleCore","value":"","parent":null,"children":[],"decl_id":null,"docs":" Single core synchronization - no memory barrier synchronization, just a compiler fence\n","sig":null,"attributes":[{"value":"/ Single core synchronization - no memory barrier synchronization, just a compiler fence","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":138452,"byte_end":138542,"line_start":99,"line_end":99,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":1317},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":140670,"byte_end":140675,"line_start":164,"line_end":164,"column_start":12,"column_end":17},"name":"Queue","qualname":"::spsc::Queue","value":"","parent":null,"children":[],"decl_id":null,"docs":" A statically allocated single producer single consumer queue with a capacity of `N` elements","sig":null,"attributes":[{"value":"/ A statically allocated single producer single consumer queue with a capacity of `N` elements","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":139458,"byte_end":139554,"line_start":144,"line_end":144,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":139555,"byte_end":139558,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ *IMPORTANT*: To get better performance use a capacity that is a power of 2 (e.g. `U16`, `U32`,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":139559,"byte_end":139657,"line_start":146,"line_end":146,"column_start":1,"column_end":99}},{"value":"/ etc.).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":139658,"byte_end":139668,"line_start":147,"line_end":147,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":139669,"byte_end":139672,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ By default `spsc::Queue` will use `usize` integers to hold the indices to its head and tail. For","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":139673,"byte_end":139773,"line_start":149,"line_end":149,"column_start":1,"column_end":101}},{"value":"/ small queues `usize` indices may be overkill. However, `spsc::Queue`'s index type is generic and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":139774,"byte_end":139874,"line_start":150,"line_end":150,"column_start":1,"column_end":101}},{"value":"/ can be changed to `u8` or `u16` to reduce its footprint. The easiest to construct a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":139875,"byte_end":139962,"line_start":151,"line_end":151,"column_start":1,"column_end":88}},{"value":"/ `spsc::Queue` with a smaller index type is to use the [`u8`] and [`u16`] constructors.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":139963,"byte_end":140053,"line_start":152,"line_end":152,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":140054,"byte_end":140057,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ [`u8`]: struct.Queue.html#method.u8","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":140058,"byte_end":140097,"line_start":154,"line_end":154,"column_start":1,"column_end":40}},{"value":"/ [`u16`]: struct.Queue.html#method.u16","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":140098,"byte_end":140139,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":140140,"byte_end":140143,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ *IMPORTANT*: `spsc::Queue<_, _, u8>` has a maximum capacity of 255 elements; `spsc::Queue<_, _,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":140144,"byte_end":140243,"line_start":157,"line_end":157,"column_start":1,"column_end":100}},{"value":"/ u16>` has a maximum capacity of 65535 elements.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":140244,"byte_end":140295,"line_start":158,"line_end":158,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":140296,"byte_end":140299,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ `spsc::Queue` also comes in a single core variant. This variant can be created using the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":140300,"byte_end":140392,"line_start":160,"line_end":160,"column_start":1,"column_end":93}},{"value":"/ following constructors: `u8_sc`, `u16_sc`, `usize_sc` and `new_sc`. This variant is `unsafe` to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":140393,"byte_end":140492,"line_start":161,"line_end":161,"column_start":1,"column_end":100}},{"value":"/ create because the programmer must make sure that the queue's consumer and producer endpoints","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":140493,"byte_end":140590,"line_start":162,"line_end":162,"column_start":1,"column_end":98}},{"value":"/ (if split) are kept on a single core for their entire lifetime.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":140591,"byte_end":140658,"line_start":163,"line_end":163,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":141034,"byte_end":141042,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Queue<T, N, U, C>>::capacity","value":"fn (&self) -> U","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of elements the queue can hold\n","sig":null,"attributes":[{"value":"/ Returns the maximum number of elements the queue can hold","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":140961,"byte_end":141022,"line_start":178,"line_end":178,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":141164,"byte_end":141172,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Queue<T, N, U, C>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue has a length of 0\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue has a length of 0","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":141103,"byte_end":141152,"line_start":183,"line_end":183,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":141295,"byte_end":141299,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"iter","qualname":"<Queue<T, N, U, C>>::iter","value":"fn (&self) -> Iter<'_, T, N, U, C>","parent":null,"children":[],"decl_id":null,"docs":" Iterates from the front of the queue to the back\n","sig":null,"attributes":[{"value":"/ Iterates from the front of the queue to the back","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":141231,"byte_end":141283,"line_start":188,"line_end":188,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":141517,"byte_end":141525,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Queue<T, N, U, C>>::iter_mut","value":"fn (&mut self) -> IterMut<'_, T, N, U, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each value.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each value.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":141448,"byte_end":141505,"line_start":197,"line_end":197,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":149988,"byte_end":149991,"line_start":475,"line_end":475,"column_start":18,"column_end":21},"name":"new","qualname":"<crate::i::Queue<A, usize, MultiCore>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":149862,"byte_end":149927,"line_start":473,"line_end":473,"column_start":5,"column_end":70}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":149932,"byte_end":149970,"line_start":474,"line_end":474,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150202,"byte_end":150205,"line_start":485,"line_end":485,"column_start":12,"column_end":15},"name":"new","qualname":"<Queue<T, N, usize, MultiCore>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alias for [`spsc::Queue::usize`](struct.Queue.html#method.usize)\n","sig":null,"attributes":[{"value":"/ Alias for [`spsc::Queue::usize`](struct.Queue.html#method.usize)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150122,"byte_end":150190,"line_start":484,"line_end":484,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150450,"byte_end":150456,"line_start":493,"line_end":493,"column_start":25,"column_end":31},"name":"new_sc","qualname":"<crate::i::Queue<A, usize, SingleCore>>::new_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150317,"byte_end":150382,"line_start":491,"line_end":491,"column_start":5,"column_end":70}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150387,"byte_end":150425,"line_start":492,"line_end":492,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150684,"byte_end":150690,"line_start":503,"line_end":503,"column_start":19,"column_end":25},"name":"new_sc","qualname":"<Queue<T, N, usize, SingleCore>>::new_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alias for [`spsc::Queue::usize_sc`](struct.Queue.html#method.usize_sc)\n","sig":null,"attributes":[{"value":"/ Alias for [`spsc::Queue::usize_sc`](struct.Queue.html#method.usize_sc)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150591,"byte_end":150665,"line_start":502,"line_end":502,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150760,"byte_end":150762,"line_start":508,"line_end":508,"column_start":8,"column_end":10},"name":"u8","qualname":"<Queue<T, N, u8, MultiCore>>::u8","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue with a fixed capacity of `N`\n","sig":null,"attributes":[{"value":"/ Creates an empty queue with a fixed capacity of `N`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":143819,"byte_end":143874,"line_start":306,"line_end":306,"column_start":13,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150760,"byte_end":150762,"line_start":508,"line_end":508,"column_start":8,"column_end":10},"name":"u8","qualname":"<crate::i::Queue<A, u8, MultiCore>>::u8","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":144049,"byte_end":144114,"line_start":313,"line_end":313,"column_start":13,"column_end":78}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":144127,"byte_end":144165,"line_start":314,"line_end":314,"column_start":13,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150764,"byte_end":150769,"line_start":508,"line_end":508,"column_start":12,"column_end":17},"name":"u8_sc","qualname":"<Queue<T, N, u8, SingleCore>>::u8_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue with a fixed capacity of `N` (single core variant)\n","sig":null,"attributes":[{"value":"/ Creates an empty queue with a fixed capacity of `N` (single core variant)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":144536,"byte_end":144613,"line_start":328,"line_end":328,"column_start":13,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150764,"byte_end":150769,"line_start":508,"line_end":508,"column_start":12,"column_end":17},"name":"u8_sc","qualname":"<crate::i::Queue<A, u8, SingleCore>>::u8_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":144802,"byte_end":144867,"line_start":335,"line_end":335,"column_start":13,"column_end":78}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":144880,"byte_end":144918,"line_start":336,"line_end":336,"column_start":13,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150779,"byte_end":150782,"line_start":509,"line_end":509,"column_start":8,"column_end":11},"name":"u16","qualname":"<Queue<T, N, u16, MultiCore>>::u16","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue with a fixed capacity of `N`\n","sig":null,"attributes":[{"value":"/ Creates an empty queue with a fixed capacity of `N`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":143819,"byte_end":143874,"line_start":306,"line_end":306,"column_start":13,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150779,"byte_end":150782,"line_start":509,"line_end":509,"column_start":8,"column_end":11},"name":"u16","qualname":"<crate::i::Queue<A, u16, MultiCore>>::u16","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":144049,"byte_end":144114,"line_start":313,"line_end":313,"column_start":13,"column_end":78}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":144127,"byte_end":144165,"line_start":314,"line_end":314,"column_start":13,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2289},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150784,"byte_end":150790,"line_start":509,"line_end":509,"column_start":13,"column_end":19},"name":"u16_sc","qualname":"<Queue<T, N, u16, SingleCore>>::u16_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue with a fixed capacity of `N` (single core variant)\n","sig":null,"attributes":[{"value":"/ Creates an empty queue with a fixed capacity of `N` (single core variant)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":144536,"byte_end":144613,"line_start":328,"line_end":328,"column_start":13,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150784,"byte_end":150790,"line_start":509,"line_end":509,"column_start":13,"column_end":19},"name":"u16_sc","qualname":"<crate::i::Queue<A, u16, SingleCore>>::u16_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":144802,"byte_end":144867,"line_start":335,"line_end":335,"column_start":13,"column_end":78}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":144880,"byte_end":144918,"line_start":336,"line_end":336,"column_start":13,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150800,"byte_end":150805,"line_start":510,"line_end":510,"column_start":8,"column_end":13},"name":"usize","qualname":"<Queue<T, N, usize, MultiCore>>::usize","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue with a fixed capacity of `N`\n","sig":null,"attributes":[{"value":"/ Creates an empty queue with a fixed capacity of `N`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":143819,"byte_end":143874,"line_start":306,"line_end":306,"column_start":13,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150800,"byte_end":150805,"line_start":510,"line_end":510,"column_start":8,"column_end":13},"name":"usize","qualname":"<crate::i::Queue<A, usize, MultiCore>>::usize","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":144049,"byte_end":144114,"line_start":313,"line_end":313,"column_start":13,"column_end":78}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":144127,"byte_end":144165,"line_start":314,"line_end":314,"column_start":13,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150807,"byte_end":150815,"line_start":510,"line_end":510,"column_start":15,"column_end":23},"name":"usize_sc","qualname":"<Queue<T, N, usize, SingleCore>>::usize_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue with a fixed capacity of `N` (single core variant)\n","sig":null,"attributes":[{"value":"/ Creates an empty queue with a fixed capacity of `N` (single core variant)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":144536,"byte_end":144613,"line_start":328,"line_end":328,"column_start":13,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2320},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150807,"byte_end":150815,"line_start":510,"line_end":510,"column_start":15,"column_end":23},"name":"usize_sc","qualname":"<crate::i::Queue<A, usize, SingleCore>>::usize_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":144802,"byte_end":144867,"line_start":335,"line_end":335,"column_start":13,"column_end":78}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":144880,"byte_end":144918,"line_start":336,"line_end":336,"column_start":13,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1408},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":151425,"byte_end":151429,"line_start":538,"line_end":538,"column_start":12,"column_end":16},"name":"Iter","qualname":"::spsc::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416}],"decl_id":null,"docs":" An iterator over the items of a queue\n","sig":null,"attributes":[{"value":"/ An iterator over the items of a queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":151372,"byte_end":151413,"line_start":537,"line_end":537,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1424},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":151919,"byte_end":151926,"line_start":565,"line_end":565,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::spsc::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432}],"decl_id":null,"docs":" A mutable iterator over the items of a queue\n","sig":null,"attributes":[{"value":"/ A mutable iterator over the items of a queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":151859,"byte_end":151907,"line_start":564,"line_end":564,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":1447},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":170410,"byte_end":170415,"line_start":9,"line_end":9,"column_start":22,"column_end":27},"name":"XCore","qualname":"::sealed::spsc::XCore","value":"XCore","parent":null,"children":[{"krate":0,"index":1448}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":170429,"byte_end":170442,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"is_multi_core","qualname":"::sealed::spsc::XCore::is_multi_core","value":"fn () -> bool","parent":{"krate":0,"index":1447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1453},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":170750,"byte_end":170753,"line_start":27,"line_end":27,"column_start":22,"column_end":25},"name":"Uxx","qualname":"::sealed::spsc::Uxx","value":"Uxx: Into<usize> + Send","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1459}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":170810,"byte_end":170818,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"saturate","qualname":"::sealed::spsc::Uxx::saturate","value":"fn (x: usize) -> Self","parent":{"krate":0,"index":1453},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":170873,"byte_end":170881,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"truncate","qualname":"::sealed::spsc::Uxx::truncate","value":"fn (x: usize) -> Self","parent":{"krate":0,"index":1453},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":170971,"byte_end":170983,"line_start":36,"line_end":36,"column_start":19,"column_end":31},"name":"load_acquire","qualname":"::sealed::spsc::Uxx::load_acquire","value":"fn <C> (x: *const Self) -> Self","parent":{"krate":0,"index":1453},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(has_atomics)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":170910,"byte_end":170929,"line_start":34,"line_end":34,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":171110,"byte_end":171122,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"load_relaxed","qualname":"::sealed::spsc::Uxx::load_relaxed","value":"fn (x: *const Self) -> Self","parent":{"krate":0,"index":1453},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(has_atomics)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":171056,"byte_end":171075,"line_start":40,"line_end":40,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":171218,"byte_end":171231,"line_start":46,"line_end":46,"column_start":19,"column_end":32},"name":"store_release","qualname":"::sealed::spsc::Uxx::store_release","value":"fn <C> (x: *const Self, val: Self) -> ()","parent":{"krate":0,"index":1453},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(has_atomics)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":171157,"byte_end":171176,"line_start":44,"line_end":44,"column_start":9,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":1490},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":175529,"byte_end":175533,"line_start":194,"line_end":194,"column_start":22,"column_end":26},"name":"Kind","qualname":"::sealed::binary_heap::Kind","value":"Kind","parent":null,"children":[{"krate":0,"index":1491}],"decl_id":null,"docs":" The binary heap kind: min-heap or max-heap\n","sig":null,"attributes":[{"value":"/ The binary heap kind: min-heap or max-heap","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":175461,"byte_end":175507,"line_start":193,"line_end":193,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":175570,"byte_end":175578,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"ordering","qualname":"::sealed::binary_heap::Kind::ordering","value":"fn () -> Ordering","parent":{"krate":0,"index":1490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":4397,"byte_end":4406,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":5176,"byte_end":5179,"line_start":49,"line_end":49,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":6240,"byte_end":6247,"line_start":97,"line_end":97,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":12466,"byte_end":12473,"line_start":273,"line_end":273,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14543,"byte_end":14551,"line_start":338,"line_end":338,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15075,"byte_end":15083,"line_start":356,"line_end":356,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":25680,"byte_end":25688,"line_start":718,"line_end":718,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":26010,"byte_end":26018,"line_start":732,"line_end":732,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":26312,"byte_end":26320,"line_start":744,"line_end":744,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":26642,"byte_end":26650,"line_start":759,"line_end":759,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":26955,"byte_end":26963,"line_start":771,"line_end":771,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":27297,"byte_end":27305,"line_start":785,"line_end":785,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":27773,"byte_end":27781,"line_start":802,"line_end":802,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":27951,"byte_end":27959,"line_start":811,"line_end":811,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":28321,"byte_end":28329,"line_start":827,"line_end":827,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":28702,"byte_end":28710,"line_start":842,"line_end":842,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":29768,"byte_end":29772,"line_start":890,"line_end":890,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":29967,"byte_end":29971,"line_start":898,"line_end":898,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":30191,"byte_end":30198,"line_start":910,"line_end":910,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33458,"byte_end":33466,"line_start":52,"line_end":52,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33771,"byte_end":33779,"line_start":66,"line_end":66,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":298},{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":45138,"byte_end":45146,"line_start":454,"line_end":454,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":45394,"byte_end":45402,"line_start":467,"line_end":467,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":45683,"byte_end":45691,"line_start":478,"line_end":478,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":45976,"byte_end":45984,"line_start":491,"line_end":491,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":46342,"byte_end":46350,"line_start":504,"line_end":504,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":46668,"byte_end":46676,"line_start":518,"line_end":518,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":46996,"byte_end":47004,"line_start":532,"line_end":532,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":47694,"byte_end":47698,"line_start":566,"line_end":566,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":47851,"byte_end":47855,"line_start":574,"line_end":574,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":48200,"byte_end":48210,"line_start":592,"line_end":592,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":48805,"byte_end":48817,"line_start":620,"line_end":620,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":49696,"byte_end":49705,"line_start":21,"line_end":21,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":49950,"byte_end":49959,"line_start":31,"line_end":31,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":461},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":479},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":59127,"byte_end":59136,"line_start":381,"line_end":381,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":59394,"byte_end":59403,"line_start":394,"line_end":394,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":59635,"byte_end":59644,"line_start":405,"line_end":405,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":59781,"byte_end":59790,"line_start":415,"line_end":415,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":60026,"byte_end":60035,"line_start":428,"line_end":428,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":60287,"byte_end":60296,"line_start":439,"line_end":439,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":60698,"byte_end":60706,"line_start":462,"line_end":462,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":60900,"byte_end":60909,"line_start":473,"line_end":473,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":61691,"byte_end":61695,"line_start":509,"line_end":509,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":61877,"byte_end":61881,"line_start":517,"line_end":517,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":62018,"byte_end":62027,"line_start":525,"line_end":525,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":62286,"byte_end":62293,"line_start":539,"line_end":539,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":62515,"byte_end":62524,"line_start":547,"line_end":547,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":62876,"byte_end":62885,"line_start":562,"line_end":562,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64311,"byte_end":64317,"line_start":23,"line_end":23,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64536,"byte_end":64542,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72873,"byte_end":72879,"line_start":353,"line_end":353,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":73001,"byte_end":73007,"line_start":362,"line_end":362,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":73194,"byte_end":73200,"line_start":373,"line_end":373,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":73416,"byte_end":73422,"line_start":386,"line_end":386,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":73600,"byte_end":73606,"line_start":397,"line_end":397,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":73781,"byte_end":73787,"line_start":406,"line_end":406,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":73962,"byte_end":73968,"line_start":415,"line_end":415,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":74154,"byte_end":74160,"line_start":425,"line_end":425,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":74348,"byte_end":74354,"line_start":435,"line_end":435,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":74654,"byte_end":74660,"line_start":448,"line_end":448,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":74807,"byte_end":74813,"line_start":459,"line_end":459,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":74949,"byte_end":74955,"line_start":468,"line_end":468,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":75082,"byte_end":75088,"line_start":478,"line_end":478,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":75242,"byte_end":75248,"line_start":488,"line_end":488,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":76379,"byte_end":76385,"line_start":537,"line_end":537,"column_start":16,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":82711,"byte_end":82714,"line_start":6,"line_end":6,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":82961,"byte_end":82964,"line_start":16,"line_end":16,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87081,"byte_end":87084,"line_start":167,"line_end":167,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87214,"byte_end":87217,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":92190,"byte_end":92193,"line_start":349,"line_end":349,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":92313,"byte_end":92316,"line_start":358,"line_end":358,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":92507,"byte_end":92510,"line_start":368,"line_end":368,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":92660,"byte_end":92663,"line_start":377,"line_end":377,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":92859,"byte_end":92862,"line_start":389,"line_end":389,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":93092,"byte_end":93095,"line_start":402,"line_end":402,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":93295,"byte_end":93298,"line_start":412,"line_end":412,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":93942,"byte_end":93945,"line_start":446,"line_end":446,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":94555,"byte_end":94563,"line_start":476,"line_end":476,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":95000,"byte_end":95008,"line_start":496,"line_end":496,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":95208,"byte_end":95216,"line_start":509,"line_end":509,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":95558,"byte_end":95561,"line_start":523,"line_end":523,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":95792,"byte_end":95795,"line_start":535,"line_end":535,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":96671,"byte_end":96674,"line_start":578,"line_end":578,"column_start":19,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":96752,"byte_end":96755,"line_start":585,"line_end":585,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":96911,"byte_end":96914,"line_start":596,"line_end":596,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":97065,"byte_end":97068,"line_start":605,"line_end":605,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":97206,"byte_end":97209,"line_start":615,"line_end":615,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":97349,"byte_end":97352,"line_start":625,"line_end":625,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":97483,"byte_end":97486,"line_start":635,"line_end":635,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":104606,"byte_end":104616,"line_start":15,"line_end":15,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":104962,"byte_end":104974,"line_start":27,"line_end":27,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":105932,"byte_end":105940,"line_start":58,"line_end":58,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":106351,"byte_end":106363,"line_start":70,"line_end":70,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":107387,"byte_end":107390,"line_start":101,"line_end":101,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":107680,"byte_end":107692,"line_start":112,"line_end":112,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":108604,"byte_end":108612,"line_start":144,"line_end":144,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":109059,"byte_end":109071,"line_start":157,"line_end":157,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":110141,"byte_end":110150,"line_start":189,"line_end":189,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":110487,"byte_end":110499,"line_start":201,"line_end":201,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":111475,"byte_end":111481,"line_start":234,"line_end":234,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":111735,"byte_end":111747,"line_start":244,"line_end":244,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/ser.rs","byte_start":113364,"byte_end":113374,"line_start":13,"line_end":13,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/ser.rs","byte_start":113783,"byte_end":113791,"line_start":31,"line_end":31,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/ser.rs","byte_start":114256,"byte_end":114259,"line_start":49,"line_end":49,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/ser.rs","byte_start":114650,"byte_end":114658,"line_start":68,"line_end":68,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/ser.rs","byte_start":115127,"byte_end":115136,"line_start":87,"line_end":87,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/ser.rs","byte_start":115558,"byte_end":115564,"line_start":107,"line_end":107,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":116495,"byte_end":116505,"line_start":29,"line_end":29,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118502,"byte_end":118512,"line_start":95,"line_end":95,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":126868,"byte_end":126872,"line_start":382,"line_end":382,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":128767,"byte_end":128774,"line_start":450,"line_end":450,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":128981,"byte_end":128988,"line_start":463,"line_end":463,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":129319,"byte_end":129326,"line_start":477,"line_end":477,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":129647,"byte_end":129654,"line_start":490,"line_end":490,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":129958,"byte_end":129962,"line_start":504,"line_end":504,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":130217,"byte_end":130227,"line_start":515,"line_end":515,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":130373,"byte_end":130383,"line_start":526,"line_end":526,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":130644,"byte_end":130654,"line_start":540,"line_end":540,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":130849,"byte_end":130859,"line_start":551,"line_end":551,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/split.rs","byte_start":161436,"byte_end":161441,"line_start":10,"line_end":10,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/split.rs","byte_start":162379,"byte_end":162387,"line_start":43,"line_end":43,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/split.rs","byte_start":162860,"byte_end":162868,"line_start":64,"line_end":64,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":138795,"byte_end":138801,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":138964,"byte_end":138970,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":140866,"byte_end":140871,"line_start":172,"line_end":172,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":141929,"byte_end":141934,"line_start":215,"line_end":215,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":142200,"byte_end":142205,"line_start":230,"line_end":230,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":142467,"byte_end":142472,"line_start":242,"line_end":242,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":142792,"byte_end":142797,"line_start":257,"line_end":257,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":149829,"byte_end":149834,"line_start":472,"line_end":472,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150057,"byte_end":150062,"line_start":480,"line_end":480,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150283,"byte_end":150288,"line_start":490,"line_end":490,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150525,"byte_end":150530,"line_start":498,"line_end":498,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150884,"byte_end":150889,"line_start":512,"line_end":512,"column_start":66,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":151267,"byte_end":151272,"line_start":528,"line_end":528,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":151618,"byte_end":151622,"line_start":549,"line_end":549,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":170511,"byte_end":170521,"line_start":14,"line_end":14,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":170646,"byte_end":170655,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":175626,"byte_end":175629,"line_start":199,"line_end":199,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":175737,"byte_end":175740,"line_start":205,"line_end":205,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3729,"byte_end":3740,"line_start":91,"line_end":91,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1084}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3750,"byte_end":3751,"line_start":92,"line_end":92,"column_start":9,"column_end":10},"ref_id":{"krate":0,"index":1206}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/lib.rs","byte_start":3885,"byte_end":3889,"line_start":98,"line_end":98,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1235}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":4397,"byte_end":4406,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":5176,"byte_end":5179,"line_start":49,"line_end":49,"column_start":6,"column_end":9},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":6240,"byte_end":6247,"line_start":97,"line_end":97,"column_start":15,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":59},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":12466,"byte_end":12473,"line_start":273,"line_end":273,"column_start":25,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":59},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":14543,"byte_end":14551,"line_start":338,"line_end":338,"column_start":18,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":83},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":15075,"byte_end":15083,"line_start":356,"line_end":356,"column_start":18,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":83},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":25680,"byte_end":25688,"line_start":718,"line_end":718,"column_start":47,"column_end":55},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":2099}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":26010,"byte_end":26018,"line_start":732,"line_end":732,"column_start":50,"column_end":58},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":2103}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":26312,"byte_end":26320,"line_start":744,"line_end":744,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":26642,"byte_end":26650,"line_start":759,"line_end":759,"column_start":33,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":5884}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":26955,"byte_end":26963,"line_start":771,"line_end":771,"column_start":30,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":27297,"byte_end":27305,"line_start":785,"line_end":785,"column_start":64,"column_end":72},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":27773,"byte_end":27781,"line_start":802,"line_end":802,"column_start":25,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":27951,"byte_end":27959,"line_start":811,"line_end":811,"column_start":37,"column_end":45},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":4640}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":28321,"byte_end":28329,"line_start":827,"line_end":827,"column_start":49,"column_end":57},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":4640}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":28702,"byte_end":28710,"line_start":842,"line_end":842,"column_start":43,"column_end":51},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":4627}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":29768,"byte_end":29772,"line_start":890,"line_end":890,"column_start":29,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":29967,"byte_end":29971,"line_start":898,"line_end":898,"column_start":26,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexmap.rs","byte_start":30191,"byte_end":30198,"line_start":910,"line_end":910,"column_start":29,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":241},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33458,"byte_end":33466,"line_start":52,"line_end":52,"column_start":15,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":33771,"byte_end":33779,"line_start":66,"line_end":66,"column_start":15,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":45138,"byte_end":45146,"line_start":454,"line_end":454,"column_start":25,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":278},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":45394,"byte_end":45402,"line_start":467,"line_end":467,"column_start":30,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":278},"to":{"krate":1,"index":5884}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":45683,"byte_end":45691,"line_start":478,"line_end":478,"column_start":27,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":278},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":45976,"byte_end":45984,"line_start":491,"line_end":491,"column_start":60,"column_end":68},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":278},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":46342,"byte_end":46350,"line_start":504,"line_end":504,"column_start":29,"column_end":37},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":278},"to":{"krate":1,"index":4640}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":46668,"byte_end":46676,"line_start":518,"line_end":518,"column_start":37,"column_end":45},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":278},"to":{"krate":1,"index":4640}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":46996,"byte_end":47004,"line_start":532,"line_end":532,"column_start":35,"column_end":43},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":278},"to":{"krate":1,"index":4627}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":47694,"byte_end":47698,"line_start":566,"line_end":566,"column_start":26,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":383},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":47851,"byte_end":47855,"line_start":574,"line_end":574,"column_start":23,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":383},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":48200,"byte_end":48210,"line_start":592,"line_end":592,"column_start":32,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":397},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/indexset.rs","byte_start":48805,"byte_end":48817,"line_start":620,"line_end":620,"column_start":32,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":411},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":49696,"byte_end":49705,"line_start":21,"line_end":21,"column_start":19,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":49950,"byte_end":49959,"line_start":31,"line_end":31,"column_start":15,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":59127,"byte_end":59136,"line_start":381,"line_end":381,"column_start":44,"column_end":53},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":440},"to":{"krate":1,"index":2099}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":59394,"byte_end":59403,"line_start":394,"line_end":394,"column_start":47,"column_end":56},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":440},"to":{"krate":1,"index":2103}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":59635,"byte_end":59644,"line_start":405,"line_end":405,"column_start":27,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":440},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":59781,"byte_end":59790,"line_start":415,"line_end":415,"column_start":25,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":440},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":60026,"byte_end":60035,"line_start":428,"line_end":428,"column_start":30,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":440},"to":{"krate":1,"index":5884}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":60287,"byte_end":60296,"line_start":439,"line_end":439,"column_start":40,"column_end":49},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":440},"to":{"krate":1,"index":4627}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":60698,"byte_end":60706,"line_start":462,"line_end":462,"column_start":28,"column_end":36},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":521},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":60900,"byte_end":60909,"line_start":473,"line_end":473,"column_start":32,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":440},"to":{"krate":1,"index":4631}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":61691,"byte_end":61695,"line_start":509,"line_end":509,"column_start":29,"column_end":33},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":547},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":61877,"byte_end":61881,"line_start":517,"line_end":517,"column_start":26,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":547},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":62018,"byte_end":62027,"line_start":525,"line_end":525,"column_start":24,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":440},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":62286,"byte_end":62293,"line_start":539,"line_end":539,"column_start":29,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":569},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":62515,"byte_end":62524,"line_start":547,"line_end":547,"column_start":54,"column_end":63},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":440},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/linear_map.rs","byte_start":62876,"byte_end":62885,"line_start":562,"line_end":562,"column_start":22,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":440},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64311,"byte_end":64317,"line_start":23,"line_end":23,"column_start":19,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":64536,"byte_end":64542,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":72873,"byte_end":72879,"line_start":353,"line_end":353,"column_start":21,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":612},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":73001,"byte_end":73007,"line_start":362,"line_end":362,"column_start":31,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":612},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":73194,"byte_end":73200,"line_start":373,"line_end":373,"column_start":26,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":612},"to":{"krate":1,"index":7336}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":73416,"byte_end":73422,"line_start":386,"line_end":386,"column_start":19,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":612},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":73600,"byte_end":73606,"line_start":397,"line_end":397,"column_start":24,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":612},"to":{"krate":1,"index":5884}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":73781,"byte_end":73787,"line_start":406,"line_end":406,"column_start":26,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":612},"to":{"krate":1,"index":5889}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":73962,"byte_end":73968,"line_start":415,"line_end":415,"column_start":24,"column_end":30},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":612},"to":{"krate":1,"index":6075}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":74154,"byte_end":74160,"line_start":425,"line_end":425,"column_start":26,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":612},"to":{"krate":6,"index":72}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":74348,"byte_end":74354,"line_start":435,"line_end":435,"column_start":24,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":612},"to":{"krate":1,"index":5845}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":74654,"byte_end":74660,"line_start":448,"line_end":448,"column_start":24,"column_end":30},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":612},"to":{"krate":1,"index":2023}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":74807,"byte_end":74813,"line_start":459,"line_end":459,"column_start":27,"column_end":33},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":612},"to":{"krate":1,"index":2034}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":74949,"byte_end":74955,"line_start":468,"line_end":468,"column_start":24,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":612},"to":{"krate":1,"index":1767}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":75082,"byte_end":75088,"line_start":478,"line_end":478,"column_start":25,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":612},"to":{"krate":1,"index":1767}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":75242,"byte_end":75248,"line_start":488,"line_end":488,"column_start":40,"column_end":46},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":612},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/string.rs","byte_start":76379,"byte_end":76385,"line_start":537,"line_end":537,"column_start":16,"column_end":22},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":612},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":82711,"byte_end":82714,"line_start":6,"line_end":6,"column_start":19,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":82961,"byte_end":82964,"line_start":16,"line_end":16,"column_start":22,"column_end":25},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87081,"byte_end":87084,"line_start":167,"line_end":167,"column_start":22,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":87214,"byte_end":87217,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":92190,"byte_end":92193,"line_start":349,"line_end":349,"column_start":24,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":92313,"byte_end":92316,"line_start":358,"line_end":358,"column_start":27,"column_end":30},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":5884}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":92507,"byte_end":92510,"line_start":368,"line_end":368,"column_start":21,"column_end":24},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":92660,"byte_end":92663,"line_start":377,"line_end":377,"column_start":26,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":4640}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":92859,"byte_end":92862,"line_start":389,"line_end":389,"column_start":34,"column_end":37},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":4640}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":93092,"byte_end":93095,"line_start":402,"line_end":402,"column_start":27,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":6075}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":93295,"byte_end":93298,"line_start":412,"line_end":412,"column_start":29,"column_end":32},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":725},"to":{"krate":6,"index":72}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":93942,"byte_end":93945,"line_start":446,"line_end":446,"column_start":32,"column_end":35},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":4627}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":94555,"byte_end":94563,"line_start":476,"line_end":476,"column_start":25,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":802},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":95000,"byte_end":95008,"line_start":496,"line_end":496,"column_start":22,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":802},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":95208,"byte_end":95216,"line_start":509,"line_end":509,"column_start":21,"column_end":29},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":802},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":95558,"byte_end":95561,"line_start":523,"line_end":523,"column_start":29,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":4631}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":95792,"byte_end":95795,"line_start":535,"line_end":535,"column_start":46,"column_end":49},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":96671,"byte_end":96674,"line_start":578,"line_end":578,"column_start":19,"column_end":22},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":96752,"byte_end":96755,"line_start":585,"line_end":585,"column_start":27,"column_end":30},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":2023}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":96911,"byte_end":96914,"line_start":596,"line_end":596,"column_start":30,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":2034}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":97065,"byte_end":97068,"line_start":605,"line_end":605,"column_start":33,"column_end":36},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":1767}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":97206,"byte_end":97209,"line_start":615,"line_end":615,"column_start":33,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":1770}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":97349,"byte_end":97352,"line_start":625,"line_end":625,"column_start":27,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":1767}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/vec.rs","byte_start":97483,"byte_end":97486,"line_start":635,"line_end":635,"column_start":27,"column_end":30},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":725},"to":{"krate":1,"index":1770}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":104606,"byte_end":104616,"line_start":15,"line_end":15,"column_start":44,"column_end":54},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1106},"to":{"krate":8,"index":835}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":104962,"byte_end":104974,"line_start":27,"line_end":27,"column_start":52,"column_end":64},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":898},"to":{"krate":8,"index":919}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":105932,"byte_end":105940,"line_start":58,"line_end":58,"column_start":41,"column_end":49},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":278},"to":{"krate":8,"index":835}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":106351,"byte_end":106363,"line_start":70,"line_end":70,"column_start":49,"column_end":61},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":921},"to":{"krate":8,"index":919}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":107387,"byte_end":107390,"line_start":101,"line_end":101,"column_start":38,"column_end":41},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":725},"to":{"krate":8,"index":835}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":107680,"byte_end":107692,"line_start":112,"line_end":112,"column_start":46,"column_end":58},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":943},"to":{"krate":8,"index":919}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":108604,"byte_end":108612,"line_start":144,"line_end":144,"column_start":44,"column_end":52},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":83},"to":{"krate":8,"index":835}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":109059,"byte_end":109071,"line_start":157,"line_end":157,"column_start":52,"column_end":64},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":965},"to":{"krate":8,"index":919}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":110141,"byte_end":110150,"line_start":189,"line_end":189,"column_start":41,"column_end":50},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":440},"to":{"krate":8,"index":835}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":110487,"byte_end":110499,"line_start":201,"line_end":201,"column_start":49,"column_end":61},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":990},"to":{"krate":8,"index":919}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":111475,"byte_end":111481,"line_start":234,"line_end":234,"column_start":35,"column_end":41},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":612},"to":{"krate":8,"index":835}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/de.rs","byte_start":111735,"byte_end":111747,"line_start":244,"line_end":244,"column_start":43,"column_end":55},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1011},"to":{"krate":8,"index":919}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/ser.rs","byte_start":113364,"byte_end":113374,"line_start":13,"line_end":13,"column_start":32,"column_end":42},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1106},"to":{"krate":8,"index":1212}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/ser.rs","byte_start":113783,"byte_end":113791,"line_start":31,"line_end":31,"column_start":29,"column_end":37},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":278},"to":{"krate":8,"index":1212}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/ser.rs","byte_start":114256,"byte_end":114259,"line_start":49,"line_end":49,"column_start":26,"column_end":29},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":725},"to":{"krate":8,"index":1212}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/ser.rs","byte_start":114650,"byte_end":114658,"line_start":68,"line_end":68,"column_start":32,"column_end":40},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":83},"to":{"krate":8,"index":1212}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/ser.rs","byte_start":115127,"byte_end":115136,"line_start":87,"line_end":87,"column_start":29,"column_end":38},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":440},"to":{"krate":8,"index":1212}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/ser.rs","byte_start":115558,"byte_end":115564,"line_start":107,"line_end":107,"column_start":23,"column_end":29},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":612},"to":{"krate":8,"index":1212}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":116495,"byte_end":116505,"line_start":29,"line_end":29,"column_start":22,"column_end":32},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":118502,"byte_end":118512,"line_start":95,"line_end":95,"column_start":15,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":126868,"byte_end":126872,"line_start":382,"line_end":382,"column_start":13,"column_end":17},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":128767,"byte_end":128774,"line_start":450,"line_end":450,"column_start":24,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1145},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":128981,"byte_end":128988,"line_start":463,"line_end":463,"column_start":25,"column_end":32},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1145},"to":{"krate":1,"index":2023}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":129319,"byte_end":129326,"line_start":477,"line_end":477,"column_start":28,"column_end":35},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1145},"to":{"krate":1,"index":2034}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":129647,"byte_end":129654,"line_start":490,"line_end":490,"column_start":19,"column_end":26},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":129958,"byte_end":129962,"line_start":504,"line_end":504,"column_start":22,"column_end":26},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1131},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":130217,"byte_end":130227,"line_start":515,"line_end":515,"column_start":27,"column_end":37},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1106},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":130373,"byte_end":130383,"line_start":526,"line_end":526,"column_start":25,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1106},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":130644,"byte_end":130654,"line_start":540,"line_end":540,"column_start":24,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1106},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/binary_heap.rs","byte_start":130849,"byte_end":130859,"line_start":551,"line_end":551,"column_start":30,"column_end":40},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1106},"to":{"krate":1,"index":5884}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/split.rs","byte_start":161436,"byte_end":161441,"line_start":10,"line_end":10,"column_start":18,"column_end":23},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/split.rs","byte_start":162379,"byte_end":162387,"line_start":43,"line_end":43,"column_start":38,"column_end":46},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1268},"to":{"krate":1,"index":1852}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/split.rs","byte_start":162860,"byte_end":162868,"line_start":64,"line_end":64,"column_start":35,"column_end":43},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":1852}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":138795,"byte_end":138801,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":138964,"byte_end":138970,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":140866,"byte_end":140871,"line_start":172,"line_end":172,"column_start":18,"column_end":23},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":141929,"byte_end":141934,"line_start":215,"line_end":215,"column_start":27,"column_end":32},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1317},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":142200,"byte_end":142205,"line_start":230,"line_end":230,"column_start":33,"column_end":38},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1317},"to":{"krate":1,"index":5884}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":142467,"byte_end":142472,"line_start":242,"line_end":242,"column_start":33,"column_end":38},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1317},"to":{"krate":1,"index":6075}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":142792,"byte_end":142797,"line_start":257,"line_end":257,"column_start":35,"column_end":40},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1317},"to":{"krate":6,"index":72}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":149829,"byte_end":149834,"line_start":472,"line_end":472,"column_start":19,"column_end":24},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150057,"byte_end":150062,"line_start":480,"line_end":480,"column_start":12,"column_end":17},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150283,"byte_end":150288,"line_start":490,"line_end":490,"column_start":19,"column_end":24},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150525,"byte_end":150530,"line_start":498,"line_end":498,"column_start":12,"column_end":17},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":150884,"byte_end":150889,"line_start":512,"line_end":512,"column_start":66,"column_end":71},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1317},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":151267,"byte_end":151272,"line_start":528,"line_end":528,"column_start":25,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1317},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/spsc/mod.rs","byte_start":151618,"byte_end":151622,"line_start":549,"line_end":549,"column_start":32,"column_end":36},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1408},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":170511,"byte_end":170521,"line_start":14,"line_end":14,"column_start":27,"column_end":37},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":1447}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":170646,"byte_end":170655,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1296},"to":{"krate":0,"index":1447}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":170755,"byte_end":170759,"line_start":27,"line_end":27,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":1773},"to":{"krate":0,"index":1453}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":170769,"byte_end":170773,"line_start":27,"line_end":27,"column_start":41,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":1852},"to":{"krate":0,"index":1453}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":175626,"byte_end":175629,"line_start":199,"line_end":199,"column_start":26,"column_end":29},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1100},"to":{"krate":0,"index":1490}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.3/src/sealed.rs","byte_start":175737,"byte_end":175740,"line_start":205,"line_end":205,"column_start":26,"column_end":29},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1101},"to":{"krate":0,"index":1490}}]}
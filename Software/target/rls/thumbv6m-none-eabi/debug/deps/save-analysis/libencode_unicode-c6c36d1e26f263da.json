{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6","program":"/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","encode_unicode","/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=1","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=c6c36d1e26f263da","-C","extra-filename=-c6c36d1e26f263da","--out-dir","/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps","--target","thumbv6m-none-eabi","-L","dependency=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps","-L","dependency=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libencode_unicode-c6c36d1e26f263da.rmeta"},"prelude":{"crate_id":{"name":"encode_unicode","disambiguator":[1756890938908774450,14201072790108062982]},"crate_root":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src","external_crates":[{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17860656607429628872,7899905306774645774]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12612412396037403104,10036660482193044370]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14692023445700134427,11043489410451781886]}}],"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":351,"byte_end":3487,"line_start":10,"line_end":78,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2391,"byte_end":2398,"line_start":56,"line_end":56,"column_start":18,"column_end":25},"alias_span":null,"name":"CharExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2400,"byte_end":2408,"line_start":56,"line_end":56,"column_start":27,"column_end":35},"alias_span":null,"name":"U8UtfExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2410,"byte_end":2419,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"alias_span":null,"name":"U16UtfExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2421,"byte_end":2427,"line_start":56,"line_end":56,"column_start":48,"column_end":54},"alias_span":null,"name":"StrExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":120},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2429,"byte_end":2436,"line_start":56,"line_end":56,"column_start":56,"column_end":63},"alias_span":null,"name":"IterExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":131},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2438,"byte_end":2446,"line_start":56,"line_end":56,"column_start":65,"column_end":73},"alias_span":null,"name":"SliceExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":941},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2468,"byte_end":2476,"line_start":57,"line_end":57,"column_start":20,"column_end":28},"alias_span":null,"name":"Utf8Char","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2498,"byte_end":2507,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"alias_span":null,"name":"Utf16Char","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":966},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2534,"byte_end":2546,"line_start":59,"line_end":59,"column_start":26,"column_end":38},"alias_span":null,"name":"Utf8Iterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2548,"byte_end":2558,"line_start":59,"line_end":59,"column_start":40,"column_end":50},"alias_span":null,"name":"iter_bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1011},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2587,"byte_end":2600,"line_start":60,"line_end":60,"column_start":27,"column_end":40},"alias_span":null,"name":"Utf16Iterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":417},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2602,"byte_end":2612,"line_start":60,"line_end":60,"column_start":42,"column_end":52},"alias_span":null,"name":"iter_units","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":812},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2765,"byte_end":2777,"line_start":64,"line_end":64,"column_start":22,"column_end":34},"alias_span":null,"name":"FromStrError","value":"","parent":{"krate":0,"index":590}},{"kind":"Use","ref_id":{"krate":0,"index":643},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2779,"byte_end":2792,"line_start":64,"line_end":64,"column_start":36,"column_end":49},"alias_span":null,"name":"EmptyStrError","value":"","parent":{"krate":0,"index":590}},{"kind":"Use","ref_id":{"krate":0,"index":697},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2816,"byte_end":2832,"line_start":65,"line_end":65,"column_start":22,"column_end":38},"alias_span":null,"name":"InvalidCodepoint","value":"","parent":{"krate":0,"index":590}},{"kind":"Use","ref_id":{"krate":0,"index":854},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2834,"byte_end":2845,"line_start":65,"line_end":65,"column_start":40,"column_end":51},"alias_span":null,"name":"InvalidUtf8","value":"","parent":{"krate":0,"index":590}},{"kind":"Use","ref_id":{"krate":0,"index":833},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2869,"byte_end":2889,"line_start":66,"line_end":66,"column_start":22,"column_end":42},"alias_span":null,"name":"InvalidUtf8FirstByte","value":"","parent":{"krate":0,"index":590}},{"kind":"Use","ref_id":{"krate":0,"index":625},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2890,"byte_end":2911,"line_start":66,"line_end":66,"column_start":43,"column_end":64},"alias_span":null,"name":"InvalidUtf16FirstUnit","value":"","parent":{"krate":0,"index":590}},{"kind":"Use","ref_id":{"krate":0,"index":910},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2935,"byte_end":2951,"line_start":67,"line_end":67,"column_start":22,"column_end":38},"alias_span":null,"name":"InvalidUtf8Slice","value":"","parent":{"krate":0,"index":590}},{"kind":"Use","ref_id":{"krate":0,"index":764},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2952,"byte_end":2969,"line_start":67,"line_end":67,"column_start":39,"column_end":56},"alias_span":null,"name":"InvalidUtf16Slice","value":"","parent":{"krate":0,"index":590}},{"kind":"Use","ref_id":{"krate":0,"index":882},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2993,"byte_end":3009,"line_start":68,"line_end":68,"column_start":22,"column_end":38},"alias_span":null,"name":"InvalidUtf8Array","value":"","parent":{"krate":0,"index":590}},{"kind":"Use","ref_id":{"krate":0,"index":718},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3010,"byte_end":3027,"line_start":68,"line_end":68,"column_start":39,"column_end":56},"alias_span":null,"name":"InvalidUtf16Array","value":"","parent":{"krate":0,"index":590}},{"kind":"Use","ref_id":{"krate":0,"index":739},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3028,"byte_end":3045,"line_start":68,"line_end":68,"column_start":57,"column_end":74},"alias_span":null,"name":"InvalidUtf16Tuple","value":"","parent":{"krate":0,"index":590}},{"kind":"Use","ref_id":{"krate":0,"index":789},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3068,"byte_end":3082,"line_start":69,"line_end":69,"column_start":21,"column_end":35},"alias_span":null,"name":"Utf16PairError","value":"","parent":{"krate":0,"index":590}},{"kind":"Use","ref_id":{"krate":0,"index":966},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3194,"byte_end":3206,"line_start":74,"line_end":74,"column_start":30,"column_end":42},"alias_span":null,"name":"Utf8Iterator","value":"","parent":{"krate":0,"index":608}},{"kind":"Use","ref_id":{"krate":0,"index":971},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3208,"byte_end":3224,"line_start":74,"line_end":74,"column_start":44,"column_end":60},"alias_span":null,"name":"Utf8CharSplitter","value":"","parent":{"krate":0,"index":608}},{"kind":"Use","ref_id":{"krate":0,"index":987},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3226,"byte_end":3235,"line_start":74,"line_end":74,"column_start":62,"column_end":71},"alias_span":null,"name":"Utf8Chars","value":"","parent":{"krate":0,"index":608}},{"kind":"Use","ref_id":{"krate":0,"index":980},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3237,"byte_end":3252,"line_start":74,"line_end":74,"column_start":73,"column_end":88},"alias_span":null,"name":"Utf8CharIndices","value":"","parent":{"krate":0,"index":608}},{"kind":"Use","ref_id":{"krate":0,"index":1011},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3285,"byte_end":3298,"line_start":75,"line_end":75,"column_start":31,"column_end":44},"alias_span":null,"name":"Utf16Iterator","value":"","parent":{"krate":0,"index":608}},{"kind":"Use","ref_id":{"krate":0,"index":1016},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3300,"byte_end":3317,"line_start":75,"line_end":75,"column_start":46,"column_end":63},"alias_span":null,"name":"Utf16CharSplitter","value":"","parent":{"krate":0,"index":608}},{"kind":"Use","ref_id":{"krate":0,"index":1032},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3319,"byte_end":3329,"line_start":75,"line_end":75,"column_start":65,"column_end":75},"alias_span":null,"name":"Utf16Chars","value":"","parent":{"krate":0,"index":608}},{"kind":"Use","ref_id":{"krate":0,"index":1025},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3331,"byte_end":3347,"line_start":75,"line_end":75,"column_start":77,"column_end":93},"alias_span":null,"name":"Utf16CharIndices","value":"","parent":{"krate":0,"index":608}},{"kind":"Use","ref_id":{"krate":0,"index":1039},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3383,"byte_end":3397,"line_start":76,"line_end":76,"column_start":34,"column_end":48},"alias_span":null,"name":"Utf8CharMerger","value":"","parent":{"krate":0,"index":608}},{"kind":"Use","ref_id":{"krate":0,"index":1054},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3399,"byte_end":3414,"line_start":76,"line_end":76,"column_start":50,"column_end":65},"alias_span":null,"name":"Utf8CharDecoder","value":"","parent":{"krate":0,"index":608}},{"kind":"Use","ref_id":{"krate":0,"index":1064},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3450,"byte_end":3465,"line_start":77,"line_end":77,"column_start":34,"column_end":49},"alias_span":null,"name":"Utf16CharMerger","value":"","parent":{"krate":0,"index":608}},{"kind":"Use","ref_id":{"krate":0,"index":1077},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3467,"byte_end":3483,"line_start":77,"line_end":77,"column_start":51,"column_end":67},"alias_span":null,"name":"Utf16CharDecoder","value":"","parent":{"krate":0,"index":608}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":351,"byte_end":3487,"line_start":10,"line_end":78,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":19},{"krate":0,"index":138},{"krate":0,"index":226},{"krate":0,"index":305},{"krate":0,"index":396},{"krate":0,"index":472},{"krate":0,"index":575},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":608}],"decl_id":null,"docs":"Miscellaneous UTF-8 and UTF-16 types and methods.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":1371,"byte_end":1393,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":1427,"byte_end":1433,"line_start":35,"line_end":35,"column_start":33,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":625},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":4921,"byte_end":4942,"line_start":53,"line_end":53,"column_start":5,"column_end":26},"name":"InvalidUtf16FirstUnit","qualname":"::errors::InvalidUtf16FirstUnit","value":"","parent":null,"children":[],"decl_id":null,"docs":" Cannot tell whether an `u16` needs an extra unit,\n because it's a trailing surrogate itself.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":643},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":5112,"byte_end":5125,"line_start":59,"line_end":59,"column_start":5,"column_end":18},"name":"EmptyStrError","qualname":"::errors::EmptyStrError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Cannot create an `Utf8Char` or `Utf16Char` from the first codepoint of a str,\n because there are none.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":661},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":5261,"byte_end":5274,"line_start":65,"line_end":65,"column_start":5,"column_end":18},"name":"NonAsciiError","qualname":"::errors::NonAsciiError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Cannot create an `Utf8Char` from a standalone `u8`\n that is not an ASCII character.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":679},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":5485,"byte_end":5496,"line_start":71,"line_end":71,"column_start":5,"column_end":16},"name":"NonBMPError","qualname":"::errors::NonBMPError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Cannot create an `Utf16Char` from a standalone `u16` that is not a\n codepoint in the basic multilingual plane, but part of a suurrogate pair.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":698},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":6081,"byte_end":6094,"line_start":91,"line_end":91,"column_start":11,"column_end":24},"name":"Utf16Reserved","qualname":"::errors::InvalidCodepoint::Utf16Reserved","value":"InvalidCodepoint::Utf16Reserved","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":" It's reserved for UTF-16 surrogate pairs.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":700},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":6222,"byte_end":6229,"line_start":93,"line_end":93,"column_start":11,"column_end":18},"name":"TooHigh","qualname":"::errors::InvalidCodepoint::TooHigh","value":"InvalidCodepoint::TooHigh","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":" It's higher than the highest codepoint (which is 0x10ffff).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":697},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":5997,"byte_end":6013,"line_start":89,"line_end":89,"column_start":5,"column_end":21},"name":"InvalidCodepoint","qualname":"::errors::InvalidCodepoint","value":"InvalidCodepoint::{Utf16Reserved, TooHigh}","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":700}],"decl_id":null,"docs":" Reasons why an `u32` is not a valid UTF codepoint.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":6415,"byte_end":6426,"line_start":98,"line_end":98,"column_start":12,"column_end":23},"name":"error_range","qualname":"<InvalidCodepoint>::error_range","value":"fn (self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the range of values for which this error would be given.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":719},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":6755,"byte_end":6779,"line_start":108,"line_end":108,"column_start":11,"column_end":35},"name":"FirstIsTrailingSurrogate","qualname":"::errors::InvalidUtf16Array::FirstIsTrailingSurrogate","value":"InvalidUtf16Array::FirstIsTrailingSurrogate","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":" The first unit is a trailing/low surrogate, which is never valid.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":721},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":6929,"byte_end":6957,"line_start":110,"line_end":110,"column_start":11,"column_end":39},"name":"SecondIsNotTrailingSurrogate","qualname":"::errors::InvalidUtf16Array::SecondIsNotTrailingSurrogate","value":"InvalidUtf16Array::SecondIsNotTrailingSurrogate","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":" The second unit is needed, but is not a trailing surrogate.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":718},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":6647,"byte_end":6664,"line_start":106,"line_end":106,"column_start":5,"column_end":22},"name":"InvalidUtf16Array","qualname":"::errors::InvalidUtf16Array","value":"InvalidUtf16Array::{FirstIsTrailingSurrogate, SecondIsNotTrailingSurrogate}","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":721}],"decl_id":null,"docs":" Reasons why a `[u16; 2]` doesn't form a valid UTF-16 codepoint.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":740},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":7334,"byte_end":7358,"line_start":118,"line_end":118,"column_start":11,"column_end":35},"name":"FirstIsTrailingSurrogate","qualname":"::errors::InvalidUtf16Tuple::FirstIsTrailingSurrogate","value":"InvalidUtf16Tuple::FirstIsTrailingSurrogate","parent":{"krate":0,"index":739},"children":[],"decl_id":null,"docs":" The first unit is a trailing/low surrogate, which is never valid.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":742},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":7519,"byte_end":7536,"line_start":120,"line_end":120,"column_start":11,"column_end":28},"name":"SuperfluousSecond","qualname":"::errors::InvalidUtf16Tuple::SuperfluousSecond","value":"InvalidUtf16Tuple::SuperfluousSecond","parent":{"krate":0,"index":739},"children":[],"decl_id":null,"docs":" You provided a second unit, but the first one stands on its own.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":744},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":7644,"byte_end":7657,"line_start":122,"line_end":122,"column_start":11,"column_end":24},"name":"MissingSecond","qualname":"::errors::InvalidUtf16Tuple::MissingSecond","value":"InvalidUtf16Tuple::MissingSecond","parent":{"krate":0,"index":739},"children":[],"decl_id":null,"docs":" The first and only unit requires a second unit.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":746},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":7907,"byte_end":7920,"line_start":126,"line_end":126,"column_start":11,"column_end":24},"name":"InvalidSecond","qualname":"::errors::InvalidUtf16Tuple::InvalidSecond","value":"InvalidUtf16Tuple::InvalidSecond","parent":{"krate":0,"index":739},"children":[],"decl_id":null,"docs":" The first unit requires a second unit, but it's not a trailing/low surrogate.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":739},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":7121,"byte_end":7138,"line_start":114,"line_end":114,"column_start":5,"column_end":22},"name":"InvalidUtf16Tuple","qualname":"::errors::InvalidUtf16Tuple","value":"InvalidUtf16Tuple::{FirstIsTrailingSurrogate, SuperfluousSecond, MissingSecond, InvalidSecond}","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":746}],"decl_id":null,"docs":" Reasons why one or two `u16`s are not valid UTF-16, in sinking precedence.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":765},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":8136,"byte_end":8146,"line_start":133,"line_end":133,"column_start":11,"column_end":21},"name":"EmptySlice","qualname":"::errors::InvalidUtf16Slice::EmptySlice","value":"InvalidUtf16Slice::EmptySlice","parent":{"krate":0,"index":764},"children":[],"decl_id":null,"docs":" The slice is empty.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":767},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":8229,"byte_end":8246,"line_start":135,"line_end":135,"column_start":11,"column_end":28},"name":"FirstLowSurrogate","qualname":"::errors::InvalidUtf16Slice::FirstLowSurrogate","value":"InvalidUtf16Slice::FirstLowSurrogate","parent":{"krate":0,"index":764},"children":[],"decl_id":null,"docs":" The first unit is a low surrogate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":769},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":8362,"byte_end":8375,"line_start":137,"line_end":137,"column_start":11,"column_end":24},"name":"MissingSecond","qualname":"::errors::InvalidUtf16Slice::MissingSecond","value":"InvalidUtf16Slice::MissingSecond","parent":{"krate":0,"index":764},"children":[],"decl_id":null,"docs":" The first and only unit requires a second unit.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":771},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":8523,"byte_end":8544,"line_start":139,"line_end":139,"column_start":11,"column_end":32},"name":"SecondNotLowSurrogate","qualname":"::errors::InvalidUtf16Slice::SecondNotLowSurrogate","value":"InvalidUtf16Slice::SecondNotLowSurrogate","parent":{"krate":0,"index":764},"children":[],"decl_id":null,"docs":" The first unit requires a second one, but it's not a trailing surrogate.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":764},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":8074,"byte_end":8091,"line_start":131,"line_end":131,"column_start":5,"column_end":22},"name":"InvalidUtf16Slice","qualname":"::errors::InvalidUtf16Slice","value":"InvalidUtf16Slice::{EmptySlice, FirstLowSurrogate, MissingSecond, SecondNotLowSurrogate}","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":771}],"decl_id":null,"docs":" Reasons why a slice of `u16`s doesn't start with valid UTF-16.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":790},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":8791,"byte_end":8818,"line_start":145,"line_end":145,"column_start":11,"column_end":38},"name":"UnexpectedTrailingSurrogate","qualname":"::errors::Utf16PairError::UnexpectedTrailingSurrogate","value":"Utf16PairError::UnexpectedTrailingSurrogate","parent":{"krate":0,"index":789},"children":[],"decl_id":null,"docs":" A trailing surrogate was not preceeded by a leading surrogate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":792},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":8988,"byte_end":9013,"line_start":147,"line_end":147,"column_start":11,"column_end":36},"name":"UnmatchedLeadingSurrogate","qualname":"::errors::Utf16PairError::UnmatchedLeadingSurrogate","value":"Utf16PairError::UnmatchedLeadingSurrogate","parent":{"krate":0,"index":789},"children":[],"decl_id":null,"docs":" A leading surrogate was followed by an unit that was not a trailing surrogate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":794},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":9180,"byte_end":9190,"line_start":149,"line_end":149,"column_start":11,"column_end":21},"name":"Incomplete","qualname":"::errors::Utf16PairError::Incomplete","value":"Utf16PairError::Incomplete","parent":{"krate":0,"index":789},"children":[],"decl_id":null,"docs":" A trailing surrogate was expected when the end was reached.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":789},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":8689,"byte_end":8703,"line_start":143,"line_end":143,"column_start":5,"column_end":19},"name":"Utf16PairError","qualname":"::errors::Utf16PairError","value":"Utf16PairError::{UnexpectedTrailingSurrogate, UnmatchedLeadingSurrogate, Incomplete}","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":794}],"decl_id":null,"docs":" Types of invalid sequences encountered by `Utf16CharParser`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":813},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":9457,"byte_end":9475,"line_start":156,"line_end":156,"column_start":11,"column_end":29},"name":"MultipleCodepoints","qualname":"::errors::FromStrError::MultipleCodepoints","value":"FromStrError::MultipleCodepoints","parent":{"krate":0,"index":812},"children":[],"decl_id":null,"docs":" `Utf8Char` or `Utf16Char` cannot store more than a single codepoint.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":815},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":9575,"byte_end":9580,"line_start":158,"line_end":158,"column_start":11,"column_end":16},"name":"Empty","qualname":"::errors::FromStrError::Empty","value":"FromStrError::Empty","parent":{"krate":0,"index":812},"children":[],"decl_id":null,"docs":" `Utf8Char` or `Utf16Char` cannot be empty.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":812},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":9351,"byte_end":9363,"line_start":154,"line_end":154,"column_start":5,"column_end":17},"name":"FromStrError","qualname":"::errors::FromStrError","value":"FromStrError::{MultipleCodepoints, Empty}","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":815}],"decl_id":null,"docs":" Reasons why `Utf8Char::from_str()` or `Utf16Char::from_str()` failed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":834},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":9793,"byte_end":9807,"line_start":165,"line_end":165,"column_start":11,"column_end":25},"name":"TooLongSeqence","qualname":"::errors::InvalidUtf8FirstByte::TooLongSeqence","value":"InvalidUtf8FirstByte::TooLongSeqence","parent":{"krate":0,"index":833},"children":[],"decl_id":null,"docs":" Sequences cannot be longer than 4 bytes. Is given for values >= 240.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":836},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":10002,"byte_end":10018,"line_start":167,"line_end":167,"column_start":11,"column_end":27},"name":"ContinuationByte","qualname":"::errors::InvalidUtf8FirstByte::ContinuationByte","value":"InvalidUtf8FirstByte::ContinuationByte","parent":{"krate":0,"index":833},"children":[],"decl_id":null,"docs":" This byte belongs to a previous sequence. Is given for values between 128 and 192 (exclusive).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":833},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":9679,"byte_end":9699,"line_start":163,"line_end":163,"column_start":5,"column_end":25},"name":"InvalidUtf8FirstByte","qualname":"::errors::InvalidUtf8FirstByte","value":"InvalidUtf8FirstByte::{TooLongSeqence, ContinuationByte}","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":836}],"decl_id":null,"docs":" Reasons why a byte is not the start of a UTF-8 codepoint.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":855},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":11554,"byte_end":11563,"line_start":220,"line_end":220,"column_start":5,"column_end":14},"name":"FirstByte","qualname":"::errors::InvalidUtf8::FirstByte","value":"InvalidUtf8::FirstByte(InvalidUtf8FirstByte)","parent":{"krate":0,"index":854},"children":[],"decl_id":null,"docs":" Something is wrong with the first byte.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":858},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":11704,"byte_end":11724,"line_start":223,"line_end":223,"column_start":5,"column_end":25},"name":"NotAContinuationByte","qualname":"::errors::InvalidUtf8::NotAContinuationByte","value":"InvalidUtf8::NotAContinuationByte(usize)","parent":{"krate":0,"index":854},"children":[],"decl_id":null,"docs":" The byte at index 1...3 should be a continuation byte,\n but dosesn't fit the pattern 0b10xx_xxxx.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":861},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":11986,"byte_end":11994,"line_start":228,"line_end":228,"column_start":5,"column_end":13},"name":"OverLong","qualname":"::errors::InvalidUtf8::OverLong","value":"InvalidUtf8::OverLong","parent":{"krate":0,"index":854},"children":[],"decl_id":null,"docs":" There are too many leading zeros: it could be a byte shorter.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":854},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":11488,"byte_end":11499,"line_start":218,"line_end":218,"column_start":10,"column_end":21},"name":"InvalidUtf8","qualname":"::errors::InvalidUtf8","value":"InvalidUtf8::{FirstByte, NotAContinuationByte, OverLong}","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":858},{"krate":0,"index":861}],"decl_id":null,"docs":" Reasons why a byte sequence is not valid UTF-8, excluding invalid codepoint.\n In sinking precedence.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":883},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":12804,"byte_end":12808,"line_start":249,"line_end":249,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::errors::InvalidUtf8Array::Utf8","value":"InvalidUtf8Array::Utf8(InvalidUtf8)","parent":{"krate":0,"index":882},"children":[],"decl_id":null,"docs":" Not a valid UTF-8 sequence.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":886},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":12866,"byte_end":12875,"line_start":251,"line_end":251,"column_start":5,"column_end":14},"name":"Codepoint","qualname":"::errors::InvalidUtf8Array::Codepoint","value":"InvalidUtf8Array::Codepoint(InvalidCodepoint)","parent":{"krate":0,"index":882},"children":[],"decl_id":null,"docs":" Not a valid unicode codepoint.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":882},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":12745,"byte_end":12761,"line_start":247,"line_end":247,"column_start":10,"column_end":26},"name":"InvalidUtf8Array","qualname":"::errors::InvalidUtf8Array","value":"InvalidUtf8Array::{Utf8, Codepoint}","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":886}],"decl_id":null,"docs":" Reasons why a byte array is not valid UTF-8, in sinking precedence.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":911},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":13550,"byte_end":13554,"line_start":270,"line_end":270,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::errors::InvalidUtf8Slice::Utf8","value":"InvalidUtf8Slice::Utf8(InvalidUtf8)","parent":{"krate":0,"index":910},"children":[],"decl_id":null,"docs":" Something is certainly wrong with the first byte.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":914},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":13615,"byte_end":13624,"line_start":272,"line_end":272,"column_start":5,"column_end":14},"name":"Codepoint","qualname":"::errors::InvalidUtf8Slice::Codepoint","value":"InvalidUtf8Slice::Codepoint(InvalidCodepoint)","parent":{"krate":0,"index":910},"children":[],"decl_id":null,"docs":" The encoded codepoint is invalid:\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":917},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":13702,"byte_end":13710,"line_start":274,"line_end":274,"column_start":5,"column_end":13},"name":"TooShort","qualname":"::errors::InvalidUtf8Slice::TooShort","value":"InvalidUtf8Slice::TooShort(usize)","parent":{"krate":0,"index":910},"children":[],"decl_id":null,"docs":" The slice is too short; n bytes was required.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":910},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":13469,"byte_end":13485,"line_start":268,"line_end":268,"column_start":10,"column_end":26},"name":"InvalidUtf8Slice","qualname":"::errors::InvalidUtf8Slice","value":"InvalidUtf8Slice::{Utf8, Codepoint, TooShort}","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":917}],"decl_id":null,"docs":" Reasons why a byte slice is not valid UTF-8, in sinking precedence.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":15235,"byte_end":15243,"line_start":29,"line_end":29,"column_start":11,"column_end":19},"name":"U8UtfExt","qualname":"::traits::U8UtfExt","value":"U8UtfExt","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" Methods for working with `u8`s as UTF-8 bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":15633,"byte_end":15649,"line_start":42,"line_end":42,"column_start":8,"column_end":24},"name":"extra_utf8_bytes","qualname":"::traits::U8UtfExt::extra_utf8_bytes","value":"fn (self) -> Result<usize, InvalidUtf8FirstByte>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" How many more bytes will you need to complete this codepoint?","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":15963,"byte_end":15989,"line_start":49,"line_end":49,"column_start":8,"column_end":34},"name":"extra_utf8_bytes_unchecked","qualname":"::traits::U8UtfExt::extra_utf8_bytes_unchecked","value":"fn (self) -> usize","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" How many more bytes will you need to complete this codepoint?","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":19850,"byte_end":19859,"line_start":127,"line_end":127,"column_start":11,"column_end":20},"name":"U16UtfExt","qualname":"::traits::U16UtfExt","value":"U16UtfExt","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" Methods for working with `u16`s as UTF-16 units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":20059,"byte_end":20081,"line_start":132,"line_end":132,"column_start":8,"column_end":30},"name":"utf16_needs_extra_unit","qualname":"::traits::U16UtfExt::utf16_needs_extra_unit","value":"fn (self) -> Result<bool, InvalidUtf16FirstUnit>","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Will you need an extra unit to complete this codepoint?","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":20328,"byte_end":20354,"line_start":138,"line_end":138,"column_start":8,"column_end":34},"name":"is_utf16_leading_surrogate","qualname":"::traits::U16UtfExt::is_utf16_leading_surrogate","value":"fn (self) -> bool","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Does this `u16` need another `u16` to complete a codepoint?\n Returns `(self & 0xfc00) == 0xd800`","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":21099,"byte_end":21106,"line_start":161,"line_end":161,"column_start":11,"column_end":18},"name":"CharExt","qualname":"::traits::CharExt","value":"CharExt: Sized","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":72}],"decl_id":null,"docs":" Extension trait for `char` that adds methods for converting to and from UTF-8 or UTF-16.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":21307,"byte_end":21314,"line_start":166,"line_end":166,"column_start":8,"column_end":15},"name":"to_utf8","qualname":"::traits::CharExt::to_utf8","value":"fn (self) -> Utf8Char","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Get the UTF-8 representation of this codepoint.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":21529,"byte_end":21537,"line_start":172,"line_end":172,"column_start":8,"column_end":16},"name":"to_utf16","qualname":"::traits::CharExt::to_utf16","value":"fn (self) -> Utf16Char","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Get the UTF-16 representation of this codepoint.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":21889,"byte_end":21904,"line_start":179,"line_end":179,"column_start":8,"column_end":23},"name":"iter_utf8_bytes","qualname":"::traits::CharExt::iter_utf8_bytes","value":"fn (self) -> Utf8Iterator","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Iterate over or [read](https://doc.rust-lang.org/std/io/trait.Read.html)\n the one to four bytes in the UTF-8 representation of this codepoint.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":22192,"byte_end":22208,"line_start":185,"line_end":185,"column_start":8,"column_end":24},"name":"iter_utf16_units","qualname":"::traits::CharExt::iter_utf16_units","value":"fn (self) -> Utf16Iterator","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Iterate over the one or two units in the UTF-16 representation of this codepoint.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":22431,"byte_end":22444,"line_start":192,"line_end":192,"column_start":8,"column_end":21},"name":"to_utf8_array","qualname":"::traits::CharExt::to_utf8_array","value":"fn (self) -> ([u8; 4], usize)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert this char to an UTF-8 array, and also return how many bytes of\n the array are used,","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":22895,"byte_end":22909,"line_start":207,"line_end":207,"column_start":8,"column_end":22},"name":"to_utf16_array","qualname":"::traits::CharExt::to_utf16_array","value":"fn (self) -> [u16; 2]","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert this `char` to UTF-16.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":23349,"byte_end":23363,"line_start":221,"line_end":221,"column_start":8,"column_end":22},"name":"to_utf16_tuple","qualname":"::traits::CharExt::to_utf16_tuple","value":"fn (self) -> (u16, Option<u16>)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert this `char` to UTF-16.\n The second item is `Some` if a surrogate pair is required.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":24427,"byte_end":24448,"line_start":248,"line_end":248,"column_start":8,"column_end":29},"name":"from_utf8_slice_start","qualname":"::traits::CharExt::from_utf8_slice_start","value":"fn (src: &[u8]) -> Result<(Self, usize), InvalidUtf8Slice>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Create a `char` from the start of an UTF-8 slice,\n and also return how many bytes were used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":24711,"byte_end":24733,"line_start":254,"line_end":254,"column_start":8,"column_end":30},"name":"from_utf16_slice_start","qualname":"::traits::CharExt::from_utf16_slice_start","value":"fn (src: &[u16]) -> Result<(Self, usize), InvalidUtf16Slice>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Create a `char` from the start of an UTF-16 slice,\n and also return how many units were used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":25955,"byte_end":25970,"line_start":282,"line_end":282,"column_start":8,"column_end":23},"name":"from_utf8_array","qualname":"::traits::CharExt::from_utf8_array","value":"fn (utf8: [u8; 4]) -> Result<Self, InvalidUtf8Array>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert an UTF-8 sequence as returned from `.to_utf8_array()` into a `char`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":26871,"byte_end":26887,"line_start":301,"line_end":301,"column_start":8,"column_end":24},"name":"from_utf16_array","qualname":"::traits::CharExt::from_utf16_array","value":"fn (utf16: [u16; 2]) -> Result<Self, InvalidUtf16Array>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert a UTF-16 pair as returned from `.to_utf16_array()` into a `char`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":27031,"byte_end":27047,"line_start":304,"line_end":304,"column_start":8,"column_end":24},"name":"from_utf16_tuple","qualname":"::traits::CharExt::from_utf16_tuple","value":"fn (utf16: (u16, Option<u16>)) -> Result<Self, InvalidUtf16Tuple>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert a UTF-16 pair as returned from `.to_utf16_tuple()` into a `char`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":27632,"byte_end":27663,"line_start":323,"line_end":323,"column_start":15,"column_end":46},"name":"from_utf8_exact_slice_unchecked","qualname":"::traits::CharExt::from_utf8_exact_slice_unchecked","value":"fn (src: &[u8]) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert an UTF-8 sequence into a char.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":28359,"byte_end":28385,"line_start":342,"line_end":342,"column_start":8,"column_end":34},"name":"from_utf16_array_unchecked","qualname":"::traits::CharExt::from_utf16_array_unchecked","value":"fn (utf16: [u16; 2]) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert a UTF-16 array as returned from `.to_utf16_array()` into a\n `char`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":28509,"byte_end":28535,"line_start":345,"line_end":345,"column_start":15,"column_end":41},"name":"from_utf16_tuple_unchecked","qualname":"::traits::CharExt::from_utf16_tuple_unchecked","value":"fn (utf16: (u16, Option<u16>)) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert a UTF-16 tuple as returned from `.to_utf16_tuple()` into a `char`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":29451,"byte_end":29468,"line_start":370,"line_end":370,"column_start":8,"column_end":25},"name":"from_u32_detailed","qualname":"::traits::CharExt::from_u32_detailed","value":"fn (c: u32) -> Result<Self, InvalidCodepoint>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Produces more detailed errors than `char::from_u32()`","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":37978,"byte_end":37984,"line_start":605,"line_end":605,"column_start":11,"column_end":17},"name":"StrExt","qualname":"::traits::StrExt","value":"StrExt: AsRef<str>","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":" Adds `.utf8chars()` and `.utf16chars()` iterator constructors to `&str`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":38065,"byte_end":38074,"line_start":607,"line_end":607,"column_start":8,"column_end":17},"name":"utf8chars","qualname":"::traits::StrExt::utf8chars","value":"fn (&self) -> Utf8Chars","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Equivalent to `.chars()` but produces `Utf8Char`s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":38163,"byte_end":38173,"line_start":609,"line_end":609,"column_start":8,"column_end":18},"name":"utf16chars","qualname":"::traits::StrExt::utf16chars","value":"fn (&self) -> Utf16Chars","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Equivalent to `.chars()` but produces `Utf16Char`s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":38269,"byte_end":38285,"line_start":611,"line_end":611,"column_start":8,"column_end":24},"name":"utf8char_indices","qualname":"::traits::StrExt::utf8char_indices","value":"fn (&self) -> Utf8CharIndices","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Equivalent to `.char_indices()` but produces `Utf8Char`s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":38387,"byte_end":38404,"line_start":613,"line_end":613,"column_start":8,"column_end":25},"name":"utf16char_indices","qualname":"::traits::StrExt::utf16char_indices","value":"fn (&self) -> Utf16CharIndices","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Equivalent to `.char_indices()` but produces `Utf16Char`s.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":120},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":39455,"byte_end":39462,"line_start":653,"line_end":653,"column_start":11,"column_end":18},"name":"IterExt","qualname":"::traits::IterExt","value":"IterExt: Iterator + Sized","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"decl_id":null,"docs":" Iterator methods that convert between `u8`s and `Utf8Char` or `u16`s and `Utf16Char`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":41509,"byte_end":41517,"line_start":710,"line_end":710,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::traits::IterExt::to_bytes","value":"fn (self) -> Utf8CharSplitter<Self::Item, Self>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts an iterator of `Utf8Char`s or `&Utf8Char`s to an iterator of\n `u8`s.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":42860,"byte_end":42868,"line_start":748,"line_end":748,"column_start":8,"column_end":16},"name":"to_units","qualname":"::traits::IterExt::to_units","value":"fn (self) -> Utf16CharSplitter<Self::Item, Self>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts an iterator of `Utf16Char` (or `&Utf16Char`) to an iterator of\n `u16`s.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":45042,"byte_end":45054,"line_start":803,"line_end":803,"column_start":8,"column_end":20},"name":"to_utf8chars","qualname":"::traits::IterExt::to_utf8chars","value":"fn (self) -> Utf8CharMerger<Self::Item, Self>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Decodes bytes as UTF-8 and groups them into `Utf8Char`s","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":47079,"byte_end":47092,"line_start":852,"line_end":852,"column_start":8,"column_end":21},"name":"to_utf16chars","qualname":"::traits::IterExt::to_utf16chars","value":"fn (self) -> Utf16CharMerger<Self::Item, Self>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Decodes bytes as UTF-16 and groups them into `Utf16Char`s","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":131},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":48075,"byte_end":48083,"line_start":876,"line_end":876,"column_start":11,"column_end":19},"name":"SliceExt","qualname":"::traits::SliceExt","value":"SliceExt: Index<RangeFull>","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133}],"decl_id":null,"docs":" Methods for iterating over `u8` and `u16` slices as UTF-8 or UTF-16 characters.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":51152,"byte_end":51168,"line_start":943,"line_end":943,"column_start":8,"column_end":24},"name":"utf8char_indices","qualname":"::traits::SliceExt::utf8char_indices","value":"fn (&self) -> Utf8CharDecoder","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" Decode `u8` slices as UTF-8 and iterate over the codepoints as `Utf8Char`s,","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":53696,"byte_end":53713,"line_start":1004,"line_end":1004,"column_start":8,"column_end":25},"name":"utf16char_indices","qualname":"::traits::SliceExt::utf16char_indices","value":"fn (&self) -> Utf16CharDecoder","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" Decode `u16` slices as UTF-16 and iterate over the codepoints as `Utf16Char`s,","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":941},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":55698,"byte_end":55706,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"Utf8Char","qualname":"::utf8_char::Utf8Char","value":"Utf8Char {  }","parent":null,"children":[{"krate":0,"index":942}],"decl_id":null,"docs":" An unicode codepoint stored as UTF-8.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":66500,"byte_end":66514,"line_start":402,"line_end":402,"column_start":12,"column_end":26},"name":"from_str_start","qualname":"<Utf8Char>::from_str_start","value":"fn (src: &str) -> Result<(Self, usize), EmptyStrError>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf8Char` from the first codepoint in a `str`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":67971,"byte_end":67987,"line_start":436,"line_end":436,"column_start":12,"column_end":28},"name":"from_slice_start","qualname":"<Utf8Char>::from_slice_start","value":"fn (src: &[u8]) -> Result<(Self, usize), InvalidUtf8Slice>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf8Char` of the first codepoint in an UTF-8 slice.  \n Also returns the length of the UTF-8 sequence for the codepoint.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":68528,"byte_end":68554,"line_start":449,"line_end":449,"column_start":19,"column_end":45},"name":"from_slice_start_unchecked","qualname":"<Utf8Char>::from_slice_start_unchecked","value":"fn (src: &[u8]) -> (Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" A `from_slice_start()` that doesn't validate the codepoint.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":70069,"byte_end":70079,"line_start":481,"line_end":481,"column_start":12,"column_end":22},"name":"from_array","qualname":"<Utf8Char>::from_array","value":"fn (utf8: [u8; 4]) -> Result<Self, InvalidUtf8Array>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf8Char` from a byte array after validating it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":70920,"byte_end":70940,"line_start":501,"line_end":501,"column_start":19,"column_end":39},"name":"from_array_unchecked","qualname":"<Utf8Char>::from_array_unchecked","value":"fn (utf8: [u8; 4]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Zero-cost constructor.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":70892,"byte_end":70901,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":71425,"byte_end":71435,"line_start":519,"line_end":519,"column_start":12,"column_end":22},"name":"from_ascii","qualname":"<Utf8Char>::from_ascii","value":"fn (ascii: u8) -> Result<Self, NonAsciiError>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf8Char` from a single byte.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":71884,"byte_end":71904,"line_start":533,"line_end":533,"column_start":19,"column_end":39},"name":"from_ascii_unchecked","qualname":"<Utf8Char>::from_ascii_unchecked","value":"fn (ascii: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf8Char` from a single byte without checking that it's a\n valid codepoint on its own, which is only true for ASCII characters.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":71856,"byte_end":71865,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":72170,"byte_end":72173,"line_start":542,"line_end":542,"column_start":12,"column_end":15},"name":"len","qualname":"<Utf8Char>::len","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes this character needs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":72149,"byte_end":72158,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":73452,"byte_end":73460,"line_start":568,"line_end":568,"column_start":12,"column_end":20},"name":"is_ascii","qualname":"<Utf8Char>::is_ascii","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that the codepoint is an ASCII character.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":75252,"byte_end":75259,"line_start":619,"line_end":619,"column_start":12,"column_end":19},"name":"to_char","qualname":"<Utf8Char>::to_char","value":"fn (self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Convert from UTF-8 to UTF-32\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":75613,"byte_end":75621,"line_start":630,"line_end":630,"column_start":12,"column_end":20},"name":"to_slice","qualname":"<Utf8Char>::to_slice","value":"fn (self, dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Write the internal representation to a slice,\n and then returns the number of bytes written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":75928,"byte_end":75936,"line_start":638,"line_end":638,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Utf8Char>::to_array","value":"fn (self) -> ([u8; 4], usize)","parent":null,"children":[],"decl_id":null,"docs":" Expose the internal array and the number of used bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":76140,"byte_end":76146,"line_start":644,"line_end":644,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Utf8Char>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return a `str` view of the array the codepoint is stored as.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":966},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":76898,"byte_end":76910,"line_start":23,"line_end":23,"column_start":12,"column_end":24},"name":"Utf8Iterator","qualname":"::utf8_iterators::Utf8Iterator","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read or iterate over the bytes of the UTF-8 representation of a codepoint.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":250},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":80551,"byte_end":80561,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"iter_bytes","qualname":"::utf8_iterators::iter_bytes","value":"fn <U, I> (iterable: I) -> Utf8CharSplitter<U, I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator of `Utf8Char` (or `&Utf8Char`)\n to an iterator of `u8`s.  \n Is equivalent to calling `.flat_map()` on the original iterator,\n but the returned iterator is ~40% faster.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":971},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":80843,"byte_end":80859,"line_start":150,"line_end":150,"column_start":12,"column_end":28},"name":"Utf8CharSplitter","qualname":"::utf8_iterators::Utf8CharSplitter","value":"Utf8CharSplitter {  }","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975}],"decl_id":null,"docs":" The iterator type returned by `iter_bytes()`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":81445,"byte_end":81455,"line_start":166,"line_end":166,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Utf8CharSplitter<U, I>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Extracts the source iterator.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":980},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":83975,"byte_end":83990,"line_start":238,"line_end":238,"column_start":12,"column_end":27},"name":"Utf8CharIndices","qualname":"::utf8_iterators::Utf8CharIndices","value":"Utf8CharIndices {  }","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983}],"decl_id":null,"docs":" An iterator over the `Utf8Char` of a string slice, and their positions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":84599,"byte_end":84605,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Utf8CharIndices>::as_str","value":"fn (&self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source `str`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":987},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":86410,"byte_end":86419,"line_start":310,"line_end":310,"column_start":12,"column_end":21},"name":"Utf8Chars","qualname":"::utf8_iterators::Utf8Chars","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the codepoints in a `str` represented as `Utf8Char`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":86978,"byte_end":86984,"line_start":328,"line_end":328,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Utf8Chars>::as_str","value":"fn (&self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source `str`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":994},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":89165,"byte_end":89174,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"Utf16Char","qualname":"::utf16_char::Utf16Char","value":"Utf16Char {  }","parent":null,"children":[{"krate":0,"index":995}],"decl_id":null,"docs":" An unicode codepoint stored as UTF-16.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":101425,"byte_end":101439,"line_start":435,"line_end":435,"column_start":12,"column_end":26},"name":"from_str_start","qualname":"<Utf16Char>::from_str_start","value":"fn (s: &str) -> Result<(Self, usize), EmptyStrError>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf16Char` from the first codepoint in a string slice,\n converting from UTF-8 to UTF-16.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":103413,"byte_end":103429,"line_start":471,"line_end":471,"column_start":12,"column_end":28},"name":"from_slice_start","qualname":"<Utf16Char>::from_slice_start","value":"fn (src: &[u16]) -> Result<(Self, usize), InvalidUtf16Slice>","parent":null,"children":[],"decl_id":null,"docs":" Validate and store the first UTF-16 codepoint in the slice.\n Also return how many units were needed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":103908,"byte_end":103934,"line_start":483,"line_end":483,"column_start":19,"column_end":45},"name":"from_slice_start_unchecked","qualname":"<Utf16Char>::from_slice_start_unchecked","value":"fn (src: &[u16]) -> (Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Store the first UTF-16 codepoint of the slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":105062,"byte_end":105072,"line_start":506,"line_end":506,"column_start":12,"column_end":22},"name":"from_array","qualname":"<Utf16Char>::from_array","value":"fn (units: [u16; 2]) -> Result<Self, InvalidUtf16Array>","parent":null,"children":[],"decl_id":null,"docs":" Validate and store an UTF-16 array as returned from `char.to_utf16_array()`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":105949,"byte_end":105969,"line_start":525,"line_end":525,"column_start":19,"column_end":39},"name":"from_array_unchecked","qualname":"<Utf16Char>::from_array_unchecked","value":"fn (units: [u16; 2]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf16Char` from an array as returned from `char.to_utf16_array()`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":106132,"byte_end":106142,"line_start":529,"line_end":529,"column_start":12,"column_end":22},"name":"from_tuple","qualname":"<Utf16Char>::from_tuple","value":"fn (utf16: (u16, Option<u16>)) -> Result<Self, InvalidUtf16Tuple>","parent":null,"children":[],"decl_id":null,"docs":" Validate and store a UTF-16 pair as returned from `char.to_utf16_tuple()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":106637,"byte_end":106657,"line_start":541,"line_end":541,"column_start":19,"column_end":39},"name":"from_tuple_unchecked","qualname":"<Utf16Char>::from_tuple_unchecked","value":"fn (utf16: (u16, Option<u16>)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf16Char` from a tuple as returned from `char.to_utf16_tuple()`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":107431,"byte_end":107439,"line_start":562,"line_end":562,"column_start":12,"column_end":20},"name":"from_bmp","qualname":"<Utf16Char>::from_bmp","value":"fn (bmp_codepoint: u16) -> Result<Self, NonBMPError>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf16Char` from a single unit.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":108016,"byte_end":108034,"line_start":578,"line_end":578,"column_start":19,"column_end":37},"name":"from_bmp_unchecked","qualname":"<Utf16Char>::from_bmp_unchecked","value":"fn (bmp_codepoint: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf16Char` from a single unit without checking that it's a\n valid codepoint on its own.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":107988,"byte_end":107997,"line_start":577,"line_end":577,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":108482,"byte_end":108488,"line_start":591,"line_end":591,"column_start":12,"column_end":18},"name":"is_bmp","qualname":"<Utf16Char>::is_bmp","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that the codepoint is in the basic multilingual plane.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":108461,"byte_end":108470,"line_start":590,"line_end":590,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":108728,"byte_end":108731,"line_start":600,"line_end":600,"column_start":12,"column_end":15},"name":"len","qualname":"<Utf16Char>::len","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of units this character is made up of.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":108707,"byte_end":108716,"line_start":599,"line_end":599,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":108951,"byte_end":108959,"line_start":607,"line_end":607,"column_start":12,"column_end":20},"name":"is_ascii","qualname":"<Utf16Char>::is_ascii","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that the codepoint is an ASCII character.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":108930,"byte_end":108939,"line_start":606,"line_end":606,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":110794,"byte_end":110801,"line_start":655,"line_end":655,"column_start":12,"column_end":19},"name":"to_char","qualname":"<Utf16Char>::to_char","value":"fn (self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Convert from UTF-16 to UTF-32\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":111147,"byte_end":111155,"line_start":665,"line_end":665,"column_start":12,"column_end":20},"name":"to_slice","qualname":"<Utf16Char>::to_slice","value":"fn (self, dst: &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Write the internal representation to a slice,\n and then returns the number of `u16`s written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":111711,"byte_end":111719,"line_start":679,"line_end":679,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Utf16Char>::to_array","value":"fn (self) -> [u16; 2]","parent":null,"children":[],"decl_id":null,"docs":" Get the character represented as an array of two units.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":111690,"byte_end":111699,"line_start":678,"line_end":678,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":111843,"byte_end":111851,"line_start":684,"line_end":684,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Utf16Char>::to_tuple","value":"fn (self) -> (u16, Option<u16>)","parent":null,"children":[],"decl_id":null,"docs":" The second `u16` is used for surrogate pairs.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":111822,"byte_end":111831,"line_start":683,"line_end":683,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1011},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":112691,"byte_end":112704,"line_start":22,"line_end":22,"column_start":12,"column_end":25},"name":"Utf16Iterator","qualname":"::utf16_iterators::Utf16Iterator","value":"Utf16Iterator {  }","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013}],"decl_id":null,"docs":" Iterate over the units of the UTF-16 representation of a codepoint.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":417},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":115394,"byte_end":115404,"line_start":103,"line_end":103,"column_start":8,"column_end":18},"name":"iter_units","qualname":"::utf16_iterators::iter_units","value":"fn <U, I> (iterable: I) -> Utf16CharSplitter<U, I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator of `Utf16Char` (or `&Utf16Char`)\n to an iterator of `u16`s.  \n Is equivalent to calling `.flat_map()` on the original iterator,\n but the returned iterator is about twice as fast.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1016},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":115653,"byte_end":115670,"line_start":110,"line_end":110,"column_start":12,"column_end":29},"name":"Utf16CharSplitter","qualname":"::utf16_iterators::Utf16CharSplitter","value":"Utf16CharSplitter {  }","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020}],"decl_id":null,"docs":" The iterator type returned by `iter_units()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":116258,"byte_end":116268,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Utf16CharSplitter<U, I>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Extracts the source iterator.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1025},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":117330,"byte_end":117346,"line_start":158,"line_end":158,"column_start":12,"column_end":28},"name":"Utf16CharIndices","qualname":"::utf16_iterators::Utf16CharIndices","value":"Utf16CharIndices {  }","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028}],"decl_id":null,"docs":" An iterator over the codepoints in a `str` represented as `Utf16Char`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":117963,"byte_end":117969,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Utf16CharIndices>::as_str","value":"fn (&self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source `str`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1032},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":119652,"byte_end":119662,"line_start":228,"line_end":228,"column_start":12,"column_end":22},"name":"Utf16Chars","qualname":"::utf16_iterators::Utf16Chars","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the codepoints in a `str` represented as `Utf16Char`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":120231,"byte_end":120237,"line_start":246,"line_end":246,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Utf16Chars>::as_str","value":"fn (&self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source `str`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1039},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":122301,"byte_end":122315,"line_start":39,"line_end":39,"column_start":12,"column_end":26},"name":"Utf8CharMerger","qualname":"::decoding_iterators::Utf8CharMerger","value":"Utf8CharMerger {  }","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044}],"decl_id":null,"docs":" Decodes UTF-8 characters from a byte iterator into `Utf8Char`s.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":124085,"byte_end":124095,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Utf8CharMerger<B, I>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Extract the inner iterator.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1054},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":130113,"byte_end":130128,"line_start":225,"line_end":225,"column_start":12,"column_end":27},"name":"Utf8CharDecoder","qualname":"::decoding_iterators::Utf8CharDecoder","value":"Utf8CharDecoder {  }","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057}],"decl_id":null,"docs":" An [`Utf8CharMerger`](struct.Utf8CharMerger.html) that also produces\n offsets and lengths, but can only iterate over slices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":130783,"byte_end":130791,"line_start":247,"line_end":247,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Utf8CharDecoder>::as_slice","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source slice.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1064},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":133467,"byte_end":133482,"line_start":319,"line_end":319,"column_start":12,"column_end":27},"name":"Utf16CharMerger","qualname":"::decoding_iterators::Utf16CharMerger","value":"Utf16CharMerger {  }","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068}],"decl_id":null,"docs":" Decodes UTF-16 characters from a `u16` iterator into `Utf16Char`s.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":135060,"byte_end":135070,"line_start":356,"line_end":356,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Utf16CharMerger<B, I>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Extract the inner iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":135791,"byte_end":135811,"line_start":375,"line_end":375,"column_start":12,"column_end":32},"name":"into_remaining_units","qualname":"<Utf16CharMerger<B, I>>::into_remaining_units","value":"fn (self) -> Chain<option::IntoIter<B>, I>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the remaining units.\n Unlike `into_inner()` this will never drop any units.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1077},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":138148,"byte_end":138164,"line_start":430,"line_end":430,"column_start":12,"column_end":28},"name":"Utf16CharDecoder","qualname":"::decoding_iterators::Utf16CharDecoder","value":"Utf16CharDecoder {  }","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080}],"decl_id":null,"docs":" An [`Utf16CharMerger`](struct.Utf16CharMerger.html) that also produces\n offsets and lengths, but can only iterate over slices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":138928,"byte_end":138936,"line_start":452,"line_end":452,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Utf16CharDecoder>::as_slice","value":"fn (&self) -> &[u16]","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source slice.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":590},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":2624,"byte_end":2629,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"name":"error","qualname":"::error","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":607}],"decl_id":null,"docs":" Errors returned by various conversion methods in this crate.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":608},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","byte_start":3095,"byte_end":3103,"line_start":72,"line_end":72,"column_start":9,"column_end":17},"name":"iterator","qualname":"::iterator","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":614},{"krate":0,"index":619},{"krate":0,"index":622}],"decl_id":null,"docs":" Iterator types that you should rarely need to name\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":6316,"byte_end":6332,"line_start":96,"line_end":96,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":47198,"byte_end":47199,"line_start":855,"line_end":855,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":53825,"byte_end":53826,"line_start":1007,"line_end":1007,"column_start":47,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":55824,"byte_end":55832,"line_start":52,"line_end":52,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":56971,"byte_end":56979,"line_start":82,"line_end":82,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":58117,"byte_end":58125,"line_start":111,"line_end":111,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":58390,"byte_end":58398,"line_start":121,"line_end":121,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":60567,"byte_end":60575,"line_start":195,"line_end":195,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":60672,"byte_end":60680,"line_start":200,"line_end":200,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":60804,"byte_end":60812,"line_start":205,"line_end":205,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":60898,"byte_end":60906,"line_start":210,"line_end":210,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":60985,"byte_end":60993,"line_start":215,"line_end":215,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":62656,"byte_end":62664,"line_start":277,"line_end":277,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":62786,"byte_end":62794,"line_start":282,"line_end":282,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":62937,"byte_end":62945,"line_start":287,"line_end":287,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":63186,"byte_end":63194,"line_start":297,"line_end":297,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":63437,"byte_end":63445,"line_start":307,"line_end":307,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":63751,"byte_end":63759,"line_start":318,"line_end":318,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":63882,"byte_end":63890,"line_start":323,"line_end":323,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":64597,"byte_end":64605,"line_start":344,"line_end":344,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":65839,"byte_end":65847,"line_start":386,"line_end":386,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":76943,"byte_end":76955,"line_start":25,"line_end":25,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":77272,"byte_end":77284,"line_start":33,"line_end":33,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":77382,"byte_end":77394,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":77767,"byte_end":77779,"line_start":53,"line_end":53,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":78403,"byte_end":78415,"line_start":73,"line_end":73,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":80977,"byte_end":80993,"line_start":154,"line_end":154,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":81172,"byte_end":81188,"line_start":160,"line_end":160,"column_start":46,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":81554,"byte_end":81570,"line_start":170,"line_end":170,"column_start":59,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":84061,"byte_end":84076,"line_start":242,"line_end":242,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":84184,"byte_end":84199,"line_start":247,"line_end":247,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":84688,"byte_end":84703,"line_start":263,"line_end":263,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":85405,"byte_end":85420,"line_start":282,"line_end":282,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":86080,"byte_end":86095,"line_start":298,"line_end":298,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":86473,"byte_end":86482,"line_start":311,"line_end":311,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":86586,"byte_end":86595,"line_start":316,"line_end":316,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":87059,"byte_end":87068,"line_start":332,"line_end":332,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":87313,"byte_end":87322,"line_start":341,"line_end":341,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":87458,"byte_end":87467,"line_start":346,"line_end":346,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":89288,"byte_end":89297,"line_start":53,"line_end":53,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":90328,"byte_end":90337,"line_start":79,"line_end":79,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":90510,"byte_end":90519,"line_start":85,"line_end":85,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":91623,"byte_end":91632,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":93715,"byte_end":93724,"line_start":189,"line_end":189,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":93839,"byte_end":93848,"line_start":195,"line_end":195,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":93943,"byte_end":93952,"line_start":201,"line_end":201,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":95832,"byte_end":95841,"line_start":267,"line_end":267,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":95963,"byte_end":95972,"line_start":272,"line_end":272,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":96115,"byte_end":96124,"line_start":277,"line_end":277,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":96382,"byte_end":96391,"line_start":284,"line_end":284,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":96518,"byte_end":96527,"line_start":290,"line_end":290,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":97423,"byte_end":97432,"line_start":311,"line_end":311,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":97681,"byte_end":97690,"line_start":321,"line_end":321,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":98005,"byte_end":98014,"line_start":332,"line_end":332,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":98138,"byte_end":98147,"line_start":337,"line_end":337,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":98853,"byte_end":98862,"line_start":358,"line_end":358,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":99296,"byte_end":99305,"line_start":373,"line_end":373,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":100575,"byte_end":100584,"line_start":415,"line_end":415,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":112762,"byte_end":112775,"line_start":26,"line_end":26,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":112970,"byte_end":112983,"line_start":32,"line_end":32,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":113172,"byte_end":113185,"line_start":38,"line_end":38,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":113692,"byte_end":113705,"line_start":51,"line_end":51,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":113871,"byte_end":113884,"line_start":57,"line_end":57,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":115797,"byte_end":115814,"line_start":114,"line_end":114,"column_start":46,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":115995,"byte_end":116012,"line_start":120,"line_end":120,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":116368,"byte_end":116385,"line_start":130,"line_end":130,"column_start":60,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":117417,"byte_end":117433,"line_start":162,"line_end":162,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":117543,"byte_end":117559,"line_start":167,"line_end":167,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":118052,"byte_end":118068,"line_start":183,"line_end":183,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":118779,"byte_end":118795,"line_start":202,"line_end":202,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":119319,"byte_end":119335,"line_start":216,"line_end":216,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":119717,"byte_end":119727,"line_start":229,"line_end":229,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":119834,"byte_end":119844,"line_start":234,"line_end":234,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":120312,"byte_end":120322,"line_start":250,"line_end":250,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":120571,"byte_end":120581,"line_start":259,"line_end":259,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":120720,"byte_end":120730,"line_start":264,"line_end":264,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":122624,"byte_end":122638,"line_start":47,"line_end":47,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":122862,"byte_end":122876,"line_start":56,"line_end":56,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":126013,"byte_end":126027,"line_start":130,"line_end":130,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":129340,"byte_end":129354,"line_start":205,"line_end":205,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":130202,"byte_end":130217,"line_start":229,"line_end":229,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":130331,"byte_end":130346,"line_start":234,"line_end":234,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":130876,"byte_end":130891,"line_start":251,"line_end":251,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":131806,"byte_end":131821,"line_start":276,"line_end":276,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":133046,"byte_end":133061,"line_start":306,"line_end":306,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":133722,"byte_end":133737,"line_start":325,"line_end":325,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":133882,"byte_end":133897,"line_start":330,"line_end":330,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":135960,"byte_end":135975,"line_start":379,"line_end":379,"column_start":54,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":137566,"byte_end":137581,"line_start":414,"line_end":414,"column_start":57,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":138240,"byte_end":138256,"line_start":434,"line_end":434,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":138363,"byte_end":138379,"line_start":439,"line_end":439,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":139020,"byte_end":139036,"line_start":456,"line_end":456,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":140285,"byte_end":140301,"line_start":490,"line_end":490,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/errors.rs","byte_start":6316,"byte_end":6332,"line_start":96,"line_end":96,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":21108,"byte_end":21113,"line_start":161,"line_end":161,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":1538},"to":{"krate":0,"index":51}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":37986,"byte_end":37991,"line_start":605,"line_end":605,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":2249},"to":{"krate":0,"index":110}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":39464,"byte_end":39472,"line_start":653,"line_end":653,"column_start":20,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3614},"to":{"krate":0,"index":120}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":39473,"byte_end":39478,"line_start":653,"line_end":653,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":1538},"to":{"krate":0,"index":120}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":47198,"byte_end":47199,"line_start":855,"line_end":855,"column_start":30,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":126},"to":{"krate":0,"index":120}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":48085,"byte_end":48090,"line_start":876,"line_end":876,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":1780},"to":{"krate":0,"index":131}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/traits.rs","byte_start":53825,"byte_end":53826,"line_start":1007,"line_end":1007,"column_start":47,"column_end":48},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":135},"to":{"krate":0,"index":131}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":55824,"byte_end":55832,"line_start":52,"line_end":52,"column_start":23,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":6776}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":56971,"byte_end":56979,"line_start":82,"line_end":82,"column_start":26,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":58117,"byte_end":58125,"line_start":111,"line_end":111,"column_start":21,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":58390,"byte_end":58398,"line_start":121,"line_end":121,"column_start":23,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":3912}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":60567,"byte_end":60575,"line_start":195,"line_end":195,"column_start":22,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":2249}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":60672,"byte_end":60680,"line_start":200,"line_end":200,"column_start":21,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":2249}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":60804,"byte_end":60812,"line_start":205,"line_end":205,"column_start":23,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":2325}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":60898,"byte_end":60906,"line_start":210,"line_end":210,"column_start":22,"column_end":30},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":2325}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":60985,"byte_end":60993,"line_start":215,"line_end":215,"column_start":16,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":1704}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":62656,"byte_end":62664,"line_start":277,"line_end":277,"column_start":21,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":7246}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":62786,"byte_end":62794,"line_start":282,"line_end":282,"column_start":21,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":7604}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":62937,"byte_end":62945,"line_start":287,"line_end":287,"column_start":23,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":7609}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":63186,"byte_end":63194,"line_start":297,"line_end":297,"column_start":26,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":2040}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":63437,"byte_end":63445,"line_start":307,"line_end":307,"column_start":27,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":2077}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":63751,"byte_end":63759,"line_start":318,"line_end":318,"column_start":31,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":2040}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":63882,"byte_end":63890,"line_start":323,"line_end":323,"column_start":32,"column_end":40},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":2077}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":64597,"byte_end":64605,"line_start":344,"line_end":344,"column_start":24,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":2040}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_char.rs","byte_start":65839,"byte_end":65847,"line_start":386,"line_end":386,"column_start":6,"column_end":14},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":76943,"byte_end":76955,"line_start":25,"line_end":25,"column_start":25,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":966},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":77272,"byte_end":77284,"line_start":33,"line_end":33,"column_start":21,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":966},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":77382,"byte_end":77394,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":966},"to":{"krate":1,"index":3614}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":77767,"byte_end":77779,"line_start":53,"line_end":53,"column_start":28,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":966},"to":{"krate":1,"index":3900}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":78403,"byte_end":78415,"line_start":73,"line_end":73,"column_start":21,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":966},"to":{"krate":1,"index":7604}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":80977,"byte_end":80993,"line_start":154,"line_end":154,"column_start":45,"column_end":61},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":971},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":81172,"byte_end":81188,"line_start":160,"line_end":160,"column_start":46,"column_end":62},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":81554,"byte_end":81570,"line_start":170,"line_end":170,"column_start":59,"column_end":75},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":971},"to":{"krate":1,"index":3614}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":84061,"byte_end":84076,"line_start":242,"line_end":242,"column_start":28,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":980},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":84184,"byte_end":84199,"line_start":247,"line_end":247,"column_start":10,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":84688,"byte_end":84703,"line_start":263,"line_end":263,"column_start":23,"column_end":38},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":980},"to":{"krate":1,"index":3614}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":85405,"byte_end":85420,"line_start":282,"line_end":282,"column_start":34,"column_end":49},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":980},"to":{"krate":1,"index":3871}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":86080,"byte_end":86095,"line_start":298,"line_end":298,"column_start":25,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":980},"to":{"krate":1,"index":7604}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":86473,"byte_end":86482,"line_start":311,"line_end":311,"column_start":28,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":987},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":86586,"byte_end":86595,"line_start":316,"line_end":316,"column_start":10,"column_end":19},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":87059,"byte_end":87068,"line_start":332,"line_end":332,"column_start":23,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":987},"to":{"krate":1,"index":3614}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":87313,"byte_end":87322,"line_start":341,"line_end":341,"column_start":34,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":987},"to":{"krate":1,"index":3871}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf8_iterators.rs","byte_start":87458,"byte_end":87467,"line_start":346,"line_end":346,"column_start":25,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":987},"to":{"krate":1,"index":7604}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":89288,"byte_end":89297,"line_start":53,"line_end":53,"column_start":18,"column_end":27},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":6776}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":90328,"byte_end":90337,"line_start":79,"line_end":79,"column_start":21,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":90510,"byte_end":90519,"line_start":85,"line_end":85,"column_start":25,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":91623,"byte_end":91632,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":3912}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":93715,"byte_end":93724,"line_start":189,"line_end":189,"column_start":23,"column_end":32},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2249}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":93839,"byte_end":93848,"line_start":195,"line_end":195,"column_start":24,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2325}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":93943,"byte_end":93952,"line_start":201,"line_end":201,"column_start":16,"column_end":25},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":1704}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":95832,"byte_end":95841,"line_start":267,"line_end":267,"column_start":21,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":7246}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":95963,"byte_end":95972,"line_start":272,"line_end":272,"column_start":21,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":7604}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":96115,"byte_end":96124,"line_start":277,"line_end":277,"column_start":23,"column_end":32},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":7609}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":96382,"byte_end":96391,"line_start":284,"line_end":284,"column_start":21,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2077}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":96518,"byte_end":96527,"line_start":290,"line_end":290,"column_start":14,"column_end":23},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2066}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":97423,"byte_end":97432,"line_start":311,"line_end":311,"column_start":26,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2040}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":97681,"byte_end":97690,"line_start":321,"line_end":321,"column_start":27,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2077}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":98005,"byte_end":98014,"line_start":332,"line_end":332,"column_start":30,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2040}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":98138,"byte_end":98147,"line_start":337,"line_end":337,"column_start":31,"column_end":40},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2077}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":98853,"byte_end":98862,"line_start":358,"line_end":358,"column_start":25,"column_end":34},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2040}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":99296,"byte_end":99305,"line_start":373,"line_end":373,"column_start":24,"column_end":33},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2040}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_char.rs","byte_start":100575,"byte_end":100584,"line_start":415,"line_end":415,"column_start":6,"column_end":15},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":112762,"byte_end":112775,"line_start":26,"line_end":26,"column_start":21,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1011},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":112970,"byte_end":112983,"line_start":32,"line_end":32,"column_start":26,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1011},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":113172,"byte_end":113185,"line_start":38,"line_end":38,"column_start":19,"column_end":32},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1011},"to":{"krate":1,"index":3614}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":113692,"byte_end":113705,"line_start":51,"line_end":51,"column_start":28,"column_end":41},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1011},"to":{"krate":1,"index":3900}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":113871,"byte_end":113884,"line_start":57,"line_end":57,"column_start":21,"column_end":34},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1011},"to":{"krate":1,"index":7604}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":115797,"byte_end":115814,"line_start":114,"line_end":114,"column_start":46,"column_end":63},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1016},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":115995,"byte_end":116012,"line_start":120,"line_end":120,"column_start":47,"column_end":64},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":116368,"byte_end":116385,"line_start":130,"line_end":130,"column_start":60,"column_end":77},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1016},"to":{"krate":1,"index":3614}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":117417,"byte_end":117433,"line_start":162,"line_end":162,"column_start":28,"column_end":44},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1025},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":117543,"byte_end":117559,"line_start":167,"line_end":167,"column_start":10,"column_end":26},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":118052,"byte_end":118068,"line_start":183,"line_end":183,"column_start":23,"column_end":39},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1025},"to":{"krate":1,"index":3614}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":118779,"byte_end":118795,"line_start":202,"line_end":202,"column_start":34,"column_end":50},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1025},"to":{"krate":1,"index":3871}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":119319,"byte_end":119335,"line_start":216,"line_end":216,"column_start":25,"column_end":41},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1025},"to":{"krate":1,"index":7604}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":119717,"byte_end":119727,"line_start":229,"line_end":229,"column_start":28,"column_end":38},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1032},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":119834,"byte_end":119844,"line_start":234,"line_end":234,"column_start":10,"column_end":20},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":120312,"byte_end":120322,"line_start":250,"line_end":250,"column_start":23,"column_end":33},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1032},"to":{"krate":1,"index":3614}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":120571,"byte_end":120581,"line_start":259,"line_end":259,"column_start":34,"column_end":44},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1032},"to":{"krate":1,"index":3871}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/utf16_iterators.rs","byte_start":120720,"byte_end":120730,"line_start":264,"line_end":264,"column_start":25,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1032},"to":{"krate":1,"index":7604}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":122624,"byte_end":122638,"line_start":47,"line_end":47,"column_start":13,"column_end":27},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1039},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":122862,"byte_end":122876,"line_start":56,"line_end":56,"column_start":40,"column_end":54},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":126013,"byte_end":126027,"line_start":130,"line_end":130,"column_start":53,"column_end":67},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1039},"to":{"krate":1,"index":3614}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":129340,"byte_end":129354,"line_start":205,"line_end":205,"column_start":56,"column_end":70},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1039},"to":{"krate":1,"index":7604}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":130202,"byte_end":130217,"line_start":229,"line_end":229,"column_start":28,"column_end":43},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1054},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":130331,"byte_end":130346,"line_start":234,"line_end":234,"column_start":10,"column_end":25},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":130876,"byte_end":130891,"line_start":251,"line_end":251,"column_start":23,"column_end":38},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1054},"to":{"krate":1,"index":3614}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":131806,"byte_end":131821,"line_start":276,"line_end":276,"column_start":34,"column_end":49},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1054},"to":{"krate":1,"index":3871}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":133046,"byte_end":133061,"line_start":306,"line_end":306,"column_start":20,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1054},"to":{"krate":1,"index":7604}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":133722,"byte_end":133737,"line_start":325,"line_end":325,"column_start":13,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1064},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":133882,"byte_end":133897,"line_start":330,"line_end":330,"column_start":41,"column_end":56},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":135960,"byte_end":135975,"line_start":379,"line_end":379,"column_start":54,"column_end":69},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1064},"to":{"krate":1,"index":3614}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":137566,"byte_end":137581,"line_start":414,"line_end":414,"column_start":57,"column_end":72},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1064},"to":{"krate":1,"index":7604}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":138240,"byte_end":138256,"line_start":434,"line_end":434,"column_start":29,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":138363,"byte_end":138379,"line_start":439,"line_end":439,"column_start":10,"column_end":26},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":139020,"byte_end":139036,"line_start":456,"line_end":456,"column_start":23,"column_end":39},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":3614}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/encode_unicode-0.3.6/src/decoding_iterators.rs","byte_start":140285,"byte_end":140301,"line_start":490,"line_end":490,"column_start":20,"column_end":36},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":7604}}]}
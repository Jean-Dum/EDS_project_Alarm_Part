{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4","program":"/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","heapless","/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=1","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=c0036ededcbf0d29","-C","extra-filename=-c0036ededcbf0d29","--out-dir","/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps","--target","thumbv6m-none-eabi","-L","dependency=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps","-L","dependency=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/debug/deps","--extern","as_slice=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libas_slice-5e14b77cade90694.rmeta","--extern","generic_array=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libgeneric_array-ee2d76ecdf47989c.rmeta","--extern","hash32=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libhash32-5316869ce342d642.rmeta","--cap-lints","allow","--cfg","armv6m","--error-format=json","--sysroot","/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv6m-none-eabi/debug/deps/libheapless-c0036ededcbf0d29.rmeta"},"prelude":{"crate_id":{"name":"heapless","disambiguator":[11143761854629851719,2938579571293852400]},"crate_root":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src","external_crates":[{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6948772717640016523,8206199524721505153]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13903862752718280198,3718181148960050896]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[1517153803586975564,2091417199493542624]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","num":4,"id":{"name":"as_slice","disambiguator":[2955398387142225093,5852337291100378682]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","num":5,"id":{"name":"generic_array","disambiguator":[8209656970451680602,13580433246623221760]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","num":6,"id":{"name":"typenum","disambiguator":[15357975060537762515,11335347814899673141]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","num":7,"id":{"name":"generic_array","disambiguator":[3551434372089602315,1316612288215471683]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","num":8,"id":{"name":"stable_deref_trait","disambiguator":[6011039378642777957,9875932318788967315]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","num":9,"id":{"name":"generic_array","disambiguator":[225999465115567117,17952200838459394780]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","num":10,"id":{"name":"hash32","disambiguator":[11106152591252844062,10798671999050364467]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","num":11,"id":{"name":"byteorder","disambiguator":[5964677151743033664,1191805427174745702]}}],"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":0,"byte_end":4896,"line_start":1,"line_end":135,"column_start":1,"column_end":12}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":841},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4408,"byte_end":4418,"line_start":108,"line_end":108,"column_start":22,"column_end":32},"alias_span":null,"name":"BinaryHeap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":2001},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4452,"byte_end":4458,"line_start":109,"line_end":109,"column_start":33,"column_end":39},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":9,"index":327},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4483,"byte_end":4494,"line_start":110,"line_end":110,"column_start":24,"column_end":35},"alias_span":null,"name":"ArrayLength","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":42},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4515,"byte_end":4526,"line_start":111,"line_end":111,"column_start":20,"column_end":31},"alias_span":null,"name":"FnvIndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4528,"byte_end":4536,"line_start":111,"line_end":111,"column_start":33,"column_end":41},"alias_span":null,"name":"IndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4558,"byte_end":4569,"line_start":112,"line_end":112,"column_start":20,"column_end":31},"alias_span":null,"name":"FnvIndexSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":280},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4571,"byte_end":4579,"line_start":112,"line_end":112,"column_start":33,"column_end":41},"alias_span":null,"name":"IndexSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":437},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4602,"byte_end":4611,"line_start":113,"line_end":113,"column_start":21,"column_end":30},"alias_span":null,"name":"LinearMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":595},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4629,"byte_end":4635,"line_start":114,"line_end":114,"column_start":17,"column_end":23},"alias_span":null,"name":"String","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":685},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4650,"byte_end":4653,"line_start":115,"line_end":115,"column_start":14,"column_end":17},"alias_span":null,"name":"Vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":938},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":122078,"byte_end":122086,"line_start":10,"line_end":10,"column_start":23,"column_end":31},"alias_span":null,"name":"Consumer","value":"","parent":{"krate":0,"index":905}},{"kind":"Use","ref_id":{"krate":0,"index":952},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":122088,"byte_end":122096,"line_start":10,"line_end":10,"column_start":33,"column_end":41},"alias_span":null,"name":"Producer","value":"","parent":{"krate":0,"index":905}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":0,"byte_end":4896,"line_start":1,"line_end":135,"column_start":1,"column_end":12},"name":"","qualname":"::","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":260},{"krate":0,"index":427},{"krate":0,"index":580},{"krate":0,"index":672},{"krate":0,"index":822},{"krate":0,"index":905},{"krate":0,"index":1094},{"krate":0,"index":1109}],"decl_id":null,"docs":" `static` friendly data structures that don't require dynamic memory allocation","sig":null,"attributes":[{"value":"! `static` friendly data structures that don't require dynamic memory allocation","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":0,"byte_end":82,"line_start":1,"line_end":1,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":83,"byte_end":86,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The core principle behind `heapless` is that its data structures are backed by a *static* memory","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":87,"byte_end":187,"line_start":3,"line_end":3,"column_start":1,"column_end":101}},{"value":"! allocation. For example, you can think of `heapless::Vec` as an alternative version of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":188,"byte_end":278,"line_start":4,"line_end":4,"column_start":1,"column_end":91}},{"value":"! `std::Vec` with fixed capacity and that can't be re-allocated on the fly (e.g. via `push`).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":279,"byte_end":374,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":375,"byte_end":378,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! All `heapless` data structures store their memory allocation *inline* and specify their capacity","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":379,"byte_end":479,"line_start":7,"line_end":7,"column_start":1,"column_end":101}},{"value":"! via their type parameter `N`. This means that you can instantiate a `heapless` data structure on","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":480,"byte_end":580,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"! the stack, in a `static` variable, or even in the heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":581,"byte_end":640,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":641,"byte_end":644,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":645,"byte_end":652,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"! use heapless::Vec; // fixed capacity `std::Vec`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":653,"byte_end":704,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"! use heapless::consts::U8; // type level integer used to specify capacity","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":705,"byte_end":781,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":782,"byte_end":785,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! // on the stack","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":786,"byte_end":805,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"! let mut xs: Vec<u8, U8> = Vec::new(); // can hold up to 8 elements","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":806,"byte_end":876,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"! xs.push(42).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":877,"byte_end":902,"line_start":17,"line_end":17,"column_start":1,"column_end":26}},{"value":"! assert_eq!(xs.pop(), Some(42));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":903,"byte_end":938,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":939,"byte_end":942,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! // in a `static` variable","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":943,"byte_end":972,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"! // static mut XS: Vec<u8, U8> = Vec::new(); // requires feature `const-fn`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":973,"byte_end":1051,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1052,"byte_end":1055,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! // work around","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1056,"byte_end":1074,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"! static mut XS: Option<Vec<u8, U8>> = None;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1075,"byte_end":1121,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"! unsafe { XS = Some(Vec::new()) };","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1122,"byte_end":1159,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"! let xs = unsafe { XS.as_mut().unwrap() };","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1160,"byte_end":1205,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1206,"byte_end":1209,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! xs.push(42);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1210,"byte_end":1226,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"! assert_eq!(xs.pop(), Some(42));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1227,"byte_end":1262,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1263,"byte_end":1266,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! // in the heap (though kind of pointless because no reallocation)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1267,"byte_end":1336,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"! let mut ys: Box<Vec<u8, U8>> = Box::new(Vec::new());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1337,"byte_end":1393,"line_start":32,"line_end":32,"column_start":1,"column_end":57}},{"value":"! ys.push(42).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1394,"byte_end":1419,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"! assert_eq!(ys.pop(), Some(42));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1420,"byte_end":1455,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1456,"byte_end":1463,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1464,"byte_end":1467,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! Because they have fixed capacity `heapless` data structures don't implicitly reallocate. This","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1468,"byte_end":1565,"line_start":37,"line_end":37,"column_start":1,"column_end":98}},{"value":"! means that operations like `heapless::Vec.push` are *truly* constant time rather than amortized","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1566,"byte_end":1665,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"! constant time with potentially unbounded (depends on the allocator) worst case execution time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1666,"byte_end":1763,"line_start":39,"line_end":39,"column_start":1,"column_end":98}},{"value":"! (which is bad / unacceptable for hard real time applications).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1764,"byte_end":1830,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1831,"byte_end":1834,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! `heapless` data structures don't use a memory allocator which means no risk of an uncatchable","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1835,"byte_end":1932,"line_start":42,"line_end":42,"column_start":1,"column_end":98}},{"value":"! Out Of Memory (OOM) condition (which defaults to abort) while performing operations","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":1933,"byte_end":2020,"line_start":43,"line_end":43,"column_start":1,"column_end":88}},{"value":"! on them. It's certainly possible to run out of capacity while growing `heapless` data","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2021,"byte_end":2110,"line_start":44,"line_end":44,"column_start":1,"column_end":90}},{"value":"! structures, but the API lets you handle this possibility by returning a `Result` on operations","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2111,"byte_end":2209,"line_start":45,"line_end":45,"column_start":1,"column_end":99}},{"value":"! that may exhaust the capacity of the data structure.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2210,"byte_end":2266,"line_start":46,"line_end":46,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2267,"byte_end":2270,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! List of currently implemented data structures:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2271,"byte_end":2321,"line_start":48,"line_end":48,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2322,"byte_end":2325,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! - [`BinaryHeap`](binary_heap/struct.BinaryHeap.html) -- priority queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2326,"byte_end":2400,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"! - [`IndexMap`](struct.IndexMap.html) -- hash table","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2401,"byte_end":2455,"line_start":51,"line_end":51,"column_start":1,"column_end":55}},{"value":"! - [`IndexSet`](struct.IndexSet.html) -- hash set","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2456,"byte_end":2508,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"! - [`LinearMap`](struct.LinearMap.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2509,"byte_end":2551,"line_start":53,"line_end":53,"column_start":1,"column_end":43}},{"value":"! - [`spsc::Queue`](spsc/struct.Queue.html) -- single producer single consumer lock-free queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2552,"byte_end":2648,"line_start":54,"line_end":54,"column_start":1,"column_end":97}},{"value":"! - [`String`](struct.String.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2649,"byte_end":2685,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"! - [`Vec`](struct.Vec.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2686,"byte_end":2716,"line_start":56,"line_end":56,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2717,"byte_end":2720,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! # Minimum Supported Rust Version (MSRV)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2721,"byte_end":2764,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2765,"byte_end":2768,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! This crate is guaranteed to compile on stable Rust 1.30 and up with its default set of features.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2769,"byte_end":2869,"line_start":60,"line_end":60,"column_start":1,"column_end":101}},{"value":"! It *might* compile on older versions but that may change in any new patch release.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2870,"byte_end":2956,"line_start":61,"line_end":61,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2957,"byte_end":2960,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! # Cargo features","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2961,"byte_end":2981,"line_start":63,"line_end":63,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2982,"byte_end":2985,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! In order to target the Rust stable toolchain, there are some opt-in Cargo features. The features","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":2986,"byte_end":3086,"line_start":65,"line_end":65,"column_start":1,"column_end":101}},{"value":"! need to be enabled in `Cargo.toml` in order to use them. Once the underlying features in Rust","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3087,"byte_end":3184,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"! are stable, these feature gates may be activated by default.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3185,"byte_end":3249,"line_start":67,"line_end":67,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3250,"byte_end":3253,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! Example of `Cargo.toml`:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3254,"byte_end":3282,"line_start":69,"line_end":69,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3283,"byte_end":3286,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! ``` text","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3287,"byte_end":3299,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"! # ..","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3300,"byte_end":3308,"line_start":72,"line_end":72,"column_start":1,"column_end":9}},{"value":"! [dependencies]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3309,"byte_end":3327,"line_start":73,"line_end":73,"column_start":1,"column_end":19}},{"value":"! heapless = { version = \"0.4.0\", features = [\"const-fn\"] }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3328,"byte_end":3389,"line_start":74,"line_end":74,"column_start":1,"column_end":62}},{"value":"! # ..","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3390,"byte_end":3398,"line_start":75,"line_end":75,"column_start":1,"column_end":9}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3399,"byte_end":3406,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3407,"byte_end":3410,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! Currently the following features are available and not active by default:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3411,"byte_end":3488,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3489,"byte_end":3492,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! - `\"const-fn\"` -- Enables the nightly `const_fn` and `untagged_unions` features and makes most","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3493,"byte_end":3591,"line_start":80,"line_end":80,"column_start":1,"column_end":99}},{"value":"! `new` methods `const`. This way they can be used to initialize static memory at compile time.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3592,"byte_end":3689,"line_start":81,"line_end":81,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3690,"byte_end":3693,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! - `\"min-const-fn\"` -- Turns `Pool::new` into a const fn and makes the `pool!` macro available.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3694,"byte_end":3792,"line_start":83,"line_end":83,"column_start":1,"column_end":99}},{"value":"! This bumps the required Rust version to 1.31.0.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3793,"byte_end":3844,"line_start":84,"line_end":84,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3845,"byte_end":3848,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! - `\"smaller-atomics\"` -- Lets you initialize `spsc::Queue`s with smaller head / tail indices","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3849,"byte_end":3945,"line_start":86,"line_end":86,"column_start":1,"column_end":97}},{"value":"! (they default to `usize`), shrinking the overall size of the queue.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":3946,"byte_end":4017,"line_start":87,"line_end":87,"column_start":1,"column_end":72}},{"value":"allow(warnings)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4019,"byte_end":4038,"line_start":89,"line_end":89,"column_start":1,"column_end":20}},{"value":"deny(missing_docs)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4039,"byte_end":4061,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"deny(warnings)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4062,"byte_end":4080,"line_start":91,"line_end":91,"column_start":1,"column_end":19}},{"value":"no_std","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4196,"byte_end":4206,"line_start":94,"line_end":94,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":42},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":8860,"byte_end":8871,"line_start":15,"line_end":15,"column_start":10,"column_end":21},"name":"FnvIndexMap","qualname":"::indexmap::FnvIndexMap","value":"IndexMap<K, V, N, BuildHasherDefault<FnvHasher>>","parent":null,"children":[],"decl_id":null,"docs":" An `IndexMap` using the default FNV hasher\n","sig":null,"attributes":[{"value":"/ An `IndexMap` using the default FNV hasher","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":8804,"byte_end":8850,"line_start":14,"line_end":14,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1150},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":9295,"byte_end":9301,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Bucket","qualname":"::indexmap::Bucket","value":"Bucket {  }","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1160},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":9420,"byte_end":9423,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"Pos","qualname":"::indexmap::Pos","value":"Pos {  }","parent":null,"children":[{"krate":0,"index":1161}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":87},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18948,"byte_end":18956,"line_start":328,"line_end":328,"column_start":12,"column_end":20},"name":"IndexMap","qualname":"::indexmap::IndexMap","value":"IndexMap {  }","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"decl_id":null,"docs":" Fixed capacity [`IndexMap`](https://docs.rs/indexmap/1/indexmap/map/struct.IndexMap.html)","sig":null,"attributes":[{"value":"/ Fixed capacity [`IndexMap`](https://docs.rs/indexmap/1/indexmap/map/struct.IndexMap.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17324,"byte_end":17417,"line_start":286,"line_end":286,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17418,"byte_end":17421,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Note that the capacity of the `IndexMap` must be a power of 2.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17422,"byte_end":17488,"line_start":288,"line_end":288,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17489,"byte_end":17492,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17493,"byte_end":17507,"line_start":290,"line_end":290,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17508,"byte_end":17511,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17512,"byte_end":17519,"line_start":292,"line_end":292,"column_start":1,"column_end":8}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17520,"byte_end":17550,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17551,"byte_end":17579,"line_start":294,"line_end":294,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17580,"byte_end":17583,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ // A hash map with a capacity of 16 key-value pairs allocated on the stack","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17584,"byte_end":17662,"line_start":296,"line_end":296,"column_start":1,"column_end":79}},{"value":"/ let mut book_reviews = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17663,"byte_end":17722,"line_start":297,"line_end":297,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17723,"byte_end":17726,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ // review some books.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17727,"byte_end":17752,"line_start":299,"line_end":299,"column_start":1,"column_end":26}},{"value":"/ book_reviews.insert(\"Adventures of Huckleberry Finn\",    \"My favorite book.\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17753,"byte_end":17844,"line_start":300,"line_end":300,"column_start":1,"column_end":92}},{"value":"/ book_reviews.insert(\"Grimms' Fairy Tales\",               \"Masterpiece.\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17845,"byte_end":17931,"line_start":301,"line_end":301,"column_start":1,"column_end":87}},{"value":"/ book_reviews.insert(\"Pride and Prejudice\",               \"Very enjoyable.\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17932,"byte_end":18021,"line_start":302,"line_end":302,"column_start":1,"column_end":90}},{"value":"/ book_reviews.insert(\"The Adventures of Sherlock Holmes\", \"Eye lyked it alot.\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18022,"byte_end":18114,"line_start":303,"line_end":303,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18115,"byte_end":18118,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ // check for a specific one.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18119,"byte_end":18151,"line_start":305,"line_end":305,"column_start":1,"column_end":33}},{"value":"/ if !book_reviews.contains_key(\"Les Misérables\") {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18152,"byte_end":18206,"line_start":306,"line_end":306,"column_start":1,"column_end":54}},{"value":"/     println!(\"We've got {} reviews, but Les Misérables ain't one.\",","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18207,"byte_end":18279,"line_start":307,"line_end":307,"column_start":1,"column_end":72}},{"value":"/              book_reviews.len());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18280,"byte_end":18317,"line_start":308,"line_end":308,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18318,"byte_end":18323,"line_start":309,"line_end":309,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18324,"byte_end":18327,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ // oops, this review has a lot of spelling mistakes, let's delete it.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18328,"byte_end":18401,"line_start":311,"line_end":311,"column_start":1,"column_end":74}},{"value":"/ book_reviews.remove(\"The Adventures of Sherlock Holmes\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18402,"byte_end":18463,"line_start":312,"line_end":312,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18464,"byte_end":18467,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ // look up the values associated with some keys.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18468,"byte_end":18520,"line_start":314,"line_end":314,"column_start":1,"column_end":53}},{"value":"/ let to_find = [\"Pride and Prejudice\", \"Alice's Adventure in Wonderland\"];","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18521,"byte_end":18598,"line_start":315,"line_end":315,"column_start":1,"column_end":78}},{"value":"/ for book in &to_find {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18599,"byte_end":18625,"line_start":316,"line_end":316,"column_start":1,"column_end":27}},{"value":"/     match book_reviews.get(book) {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18626,"byte_end":18664,"line_start":317,"line_end":317,"column_start":1,"column_end":39}},{"value":"/         Some(review) => println!(\"{}: {}\", book, review),","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18665,"byte_end":18726,"line_start":318,"line_end":318,"column_start":1,"column_end":62}},{"value":"/         None => println!(\"{} is unreviewed.\", book)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18727,"byte_end":18782,"line_start":319,"line_end":319,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18783,"byte_end":18792,"line_start":320,"line_end":320,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18793,"byte_end":18798,"line_start":321,"line_end":321,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18799,"byte_end":18802,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ // iterate over everything.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18803,"byte_end":18834,"line_start":323,"line_end":323,"column_start":1,"column_end":32}},{"value":"/ for (book, review) in &book_reviews {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18835,"byte_end":18876,"line_start":324,"line_end":324,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}: \\\"{}\\\"\", book, review);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18877,"byte_end":18922,"line_start":325,"line_end":325,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18923,"byte_end":18928,"line_start":326,"line_end":326,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":18929,"byte_end":18936,"line_start":327,"line_end":327,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":19495,"byte_end":19498,"line_start":347,"line_end":347,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexMap<K, V, N, BuildHasherDefault<S>>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `IndexMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `IndexMap`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":19370,"byte_end":19402,"line_start":344,"line_end":344,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":19407,"byte_end":19410,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ **NOTE** This constructor will become a `const fn` in the future","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":19415,"byte_end":19483,"line_start":346,"line_end":346,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":19873,"byte_end":19881,"line_start":363,"line_end":363,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexMap<K, V, N, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold\n","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":19810,"byte_end":19861,"line_start":362,"line_end":362,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20365,"byte_end":20369,"line_start":382,"line_end":382,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexMap<K, V, N, S>>::keys","value":"fn (&self) -> impl Iterator<Item = &K>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over the keys of the map, in their order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":19933,"byte_end":19996,"line_start":367,"line_end":367,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20001,"byte_end":20004,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20009,"byte_end":20016,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20021,"byte_end":20051,"line_start":370,"line_end":370,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20056,"byte_end":20084,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20089,"byte_end":20092,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20097,"byte_end":20147,"line_start":373,"line_end":373,"column_start":5,"column_end":55}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20152,"byte_end":20184,"line_start":374,"line_end":374,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20189,"byte_end":20221,"line_start":375,"line_end":375,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20226,"byte_end":20258,"line_start":376,"line_end":376,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20263,"byte_end":20266,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20271,"byte_end":20298,"line_start":378,"line_end":378,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20303,"byte_end":20331,"line_start":379,"line_end":379,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20336,"byte_end":20341,"line_start":380,"line_end":380,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20346,"byte_end":20353,"line_start":381,"line_end":381,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20913,"byte_end":20919,"line_start":401,"line_end":401,"column_start":12,"column_end":18},"name":"values","qualname":"<IndexMap<K, V, N, S>>::values","value":"fn (&self) -> impl Iterator<Item = &V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the map, in their order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20477,"byte_end":20542,"line_start":386,"line_end":386,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20547,"byte_end":20550,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20555,"byte_end":20562,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20567,"byte_end":20597,"line_start":389,"line_end":389,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20602,"byte_end":20630,"line_start":390,"line_end":390,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20635,"byte_end":20638,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20643,"byte_end":20693,"line_start":392,"line_end":392,"column_start":5,"column_end":55}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20698,"byte_end":20730,"line_start":393,"line_end":393,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20735,"byte_end":20767,"line_start":394,"line_end":394,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20772,"byte_end":20804,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20809,"byte_end":20812,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20817,"byte_end":20846,"line_start":397,"line_end":397,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20851,"byte_end":20879,"line_start":398,"line_end":398,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20884,"byte_end":20889,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":20894,"byte_end":20901,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21571,"byte_end":21581,"line_start":424,"line_end":424,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<IndexMap<K, V, N, S>>::values_mut","value":"fn (&mut self) -> impl Iterator<Item = &mut V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the the values of the map, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over mutable references to the the values of the map, in their order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21029,"byte_end":21120,"line_start":405,"line_end":405,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21125,"byte_end":21128,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21133,"byte_end":21140,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21145,"byte_end":21175,"line_start":408,"line_end":408,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21180,"byte_end":21208,"line_start":409,"line_end":409,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21213,"byte_end":21216,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21221,"byte_end":21271,"line_start":411,"line_end":411,"column_start":5,"column_end":55}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21276,"byte_end":21308,"line_start":412,"line_end":412,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21313,"byte_end":21345,"line_start":413,"line_end":413,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21350,"byte_end":21382,"line_start":414,"line_end":414,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21387,"byte_end":21390,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ for val in map.values_mut() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21395,"byte_end":21428,"line_start":416,"line_end":416,"column_start":5,"column_end":38}},{"value":"/     *val += 10;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21433,"byte_end":21452,"line_start":417,"line_end":417,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21457,"byte_end":21462,"line_start":418,"line_end":418,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21467,"byte_end":21470,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21475,"byte_end":21504,"line_start":420,"line_end":420,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21509,"byte_end":21537,"line_start":421,"line_end":421,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21542,"byte_end":21547,"line_start":422,"line_end":422,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21552,"byte_end":21559,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22175,"byte_end":22179,"line_start":443,"line_end":443,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexMap<K, V, N, S>>::iter","value":"fn (&self) -> Iter<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21707,"byte_end":21781,"line_start":428,"line_end":428,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21786,"byte_end":21789,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21794,"byte_end":21801,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21806,"byte_end":21836,"line_start":431,"line_end":431,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21841,"byte_end":21869,"line_start":432,"line_end":432,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21874,"byte_end":21877,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21882,"byte_end":21932,"line_start":434,"line_end":434,"column_start":5,"column_end":55}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21937,"byte_end":21969,"line_start":435,"line_end":435,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":21974,"byte_end":22006,"line_start":436,"line_end":436,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22011,"byte_end":22043,"line_start":437,"line_end":437,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22048,"byte_end":22051,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in map.iter() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22056,"byte_end":22090,"line_start":439,"line_end":439,"column_start":5,"column_end":39}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22095,"byte_end":22141,"line_start":440,"line_end":440,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22146,"byte_end":22151,"line_start":441,"line_end":441,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22156,"byte_end":22163,"line_start":442,"line_end":442,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22826,"byte_end":22834,"line_start":468,"line_end":468,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<IndexMap<K, V, N, S>>::iter_mut","value":"fn (&mut self) -> IterMut<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22283,"byte_end":22357,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22362,"byte_end":22365,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22370,"byte_end":22377,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22382,"byte_end":22412,"line_start":452,"line_end":452,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22417,"byte_end":22445,"line_start":453,"line_end":453,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22450,"byte_end":22453,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22458,"byte_end":22508,"line_start":455,"line_end":455,"column_start":5,"column_end":55}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22513,"byte_end":22545,"line_start":456,"line_end":456,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22550,"byte_end":22582,"line_start":457,"line_end":457,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22587,"byte_end":22619,"line_start":458,"line_end":458,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22624,"byte_end":22627,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ for (_, val) in map.iter_mut() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22632,"byte_end":22668,"line_start":460,"line_end":460,"column_start":5,"column_end":41}},{"value":"/     *val = 2;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22673,"byte_end":22690,"line_start":461,"line_end":461,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22695,"byte_end":22700,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22705,"byte_end":22708,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in &map {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22713,"byte_end":22741,"line_start":464,"line_end":464,"column_start":5,"column_end":33}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22746,"byte_end":22792,"line_start":465,"line_end":465,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22797,"byte_end":22802,"line_start":466,"line_end":466,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":22807,"byte_end":22814,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23393,"byte_end":23396,"line_start":490,"line_end":490,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexMap<K, V, N, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Return the number of key-value pairs in the map.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23026,"byte_end":23078,"line_start":477,"line_end":477,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23083,"byte_end":23086,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23091,"byte_end":23121,"line_start":479,"line_end":479,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23126,"byte_end":23129,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23134,"byte_end":23141,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23146,"byte_end":23176,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23181,"byte_end":23209,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23214,"byte_end":23217,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let mut a = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23222,"byte_end":23270,"line_start":485,"line_end":485,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23275,"byte_end":23302,"line_start":486,"line_end":486,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23307,"byte_end":23337,"line_start":487,"line_end":487,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23342,"byte_end":23369,"line_start":488,"line_end":488,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23374,"byte_end":23381,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23812,"byte_end":23820,"line_start":507,"line_end":507,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexMap<K, V, N, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23458,"byte_end":23507,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23512,"byte_end":23515,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23520,"byte_end":23550,"line_start":496,"line_end":496,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23555,"byte_end":23558,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23563,"byte_end":23570,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23575,"byte_end":23605,"line_start":499,"line_end":499,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23610,"byte_end":23638,"line_start":500,"line_end":500,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23643,"byte_end":23646,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let mut a = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23651,"byte_end":23699,"line_start":502,"line_end":502,"column_start":5,"column_end":53}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23704,"byte_end":23730,"line_start":503,"line_end":503,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23735,"byte_end":23756,"line_start":504,"line_end":504,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23761,"byte_end":23788,"line_start":505,"line_end":505,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23793,"byte_end":23800,"line_start":506,"line_end":506,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24238,"byte_end":24243,"line_start":524,"line_end":524,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexMap<K, V, N, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all key-value pairs in the map, while preserving its capacity.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23873,"byte_end":23946,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23951,"byte_end":23954,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23959,"byte_end":23989,"line_start":513,"line_end":513,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":23994,"byte_end":23997,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24002,"byte_end":24009,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24014,"byte_end":24044,"line_start":516,"line_end":516,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24049,"byte_end":24077,"line_start":517,"line_end":517,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24082,"byte_end":24085,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ let mut a = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24090,"byte_end":24138,"line_start":519,"line_end":519,"column_start":5,"column_end":53}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24143,"byte_end":24164,"line_start":520,"line_end":520,"column_start":5,"column_end":26}},{"value":"/ a.clear();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24169,"byte_end":24183,"line_start":521,"line_end":521,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24188,"byte_end":24214,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24219,"byte_end":24226,"line_start":523,"line_end":523,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24957,"byte_end":24960,"line_start":547,"line_end":547,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexMap<K, V, N, S>>::get","value":"fn <Q> (&self, key: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24388,"byte_end":24450,"line_start":531,"line_end":531,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24455,"byte_end":24458,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and `Eq` on the borrowed","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24463,"byte_end":24558,"line_start":533,"line_end":533,"column_start":5,"column_end":100}},{"value":"/ form *must* match those for the key type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24563,"byte_end":24608,"line_start":534,"line_end":534,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24613,"byte_end":24616,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24621,"byte_end":24661,"line_start":536,"line_end":536,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24666,"byte_end":24669,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24674,"byte_end":24681,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24686,"byte_end":24716,"line_start":539,"line_end":539,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24721,"byte_end":24749,"line_start":540,"line_end":540,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24754,"byte_end":24757,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24762,"byte_end":24812,"line_start":542,"line_end":542,"column_start":5,"column_end":55}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24817,"byte_end":24849,"line_start":543,"line_end":543,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24854,"byte_end":24894,"line_start":544,"line_end":544,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24899,"byte_end":24933,"line_start":545,"line_end":545,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":24938,"byte_end":24945,"line_start":546,"line_end":546,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25798,"byte_end":25810,"line_start":574,"line_end":574,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IndexMap<K, V, N, S>>::contains_key","value":"fn <Q> (&self, key: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25185,"byte_end":25252,"line_start":556,"line_end":556,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25257,"byte_end":25260,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and `Eq` on the borrowed","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25265,"byte_end":25360,"line_start":558,"line_end":558,"column_start":5,"column_end":100}},{"value":"/ form *must* match those for the key type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25365,"byte_end":25410,"line_start":559,"line_end":559,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25415,"byte_end":25418,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25423,"byte_end":25463,"line_start":561,"line_end":561,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25468,"byte_end":25471,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25476,"byte_end":25490,"line_start":563,"line_end":563,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25495,"byte_end":25498,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25503,"byte_end":25510,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25515,"byte_end":25545,"line_start":566,"line_end":566,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25550,"byte_end":25578,"line_start":567,"line_end":567,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25583,"byte_end":25586,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U8>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25591,"byte_end":25640,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25645,"byte_end":25677,"line_start":570,"line_end":570,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25682,"byte_end":25725,"line_start":571,"line_end":571,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25730,"byte_end":25774,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25779,"byte_end":25786,"line_start":573,"line_end":573,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26579,"byte_end":26586,"line_start":602,"line_end":602,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IndexMap<K, V, N, S>>::get_mut","value":"fn <'v, Q> (&'v mut self, key: &Q) -> Option<&'v mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":25951,"byte_end":26021,"line_start":582,"line_end":582,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26026,"byte_end":26029,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and `Eq` on the borrowed","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26034,"byte_end":26129,"line_start":584,"line_end":584,"column_start":5,"column_end":100}},{"value":"/ form *must* match those for the key type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26134,"byte_end":26179,"line_start":585,"line_end":585,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26184,"byte_end":26187,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26192,"byte_end":26232,"line_start":587,"line_end":587,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26237,"byte_end":26240,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26245,"byte_end":26259,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26264,"byte_end":26267,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26272,"byte_end":26279,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26284,"byte_end":26314,"line_start":592,"line_end":592,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26319,"byte_end":26347,"line_start":593,"line_end":593,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26352,"byte_end":26355,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U8>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26360,"byte_end":26409,"line_start":595,"line_end":595,"column_start":5,"column_end":54}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26414,"byte_end":26446,"line_start":596,"line_end":596,"column_start":5,"column_end":37}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26451,"byte_end":26489,"line_start":597,"line_end":597,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26494,"byte_end":26511,"line_start":598,"line_end":598,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26516,"byte_end":26521,"line_start":599,"line_end":599,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26526,"byte_end":26555,"line_start":600,"line_end":600,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26560,"byte_end":26567,"line_start":601,"line_end":601,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27931,"byte_end":27937,"line_start":642,"line_end":642,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexMap<K, V, N, S>>::insert","value":"fn (&mut self, key: K, value: V) -> Result<Option<V>, (K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26896,"byte_end":26938,"line_start":614,"line_end":614,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26943,"byte_end":26946,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and retains in its place in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":26951,"byte_end":27046,"line_start":616,"line_end":616,"column_start":5,"column_end":100}},{"value":"/ the order, its corresponding value is updated with `value` and the older value is returned","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27051,"byte_end":27145,"line_start":617,"line_end":617,"column_start":5,"column_end":99}},{"value":"/ inside `Some(_)`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27150,"byte_end":27171,"line_start":618,"line_end":618,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27176,"byte_end":27179,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is inserted, last in order,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27184,"byte_end":27279,"line_start":620,"line_end":620,"column_start":5,"column_end":100}},{"value":"/ and `None` is returned.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27284,"byte_end":27311,"line_start":621,"line_end":621,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27316,"byte_end":27319,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27324,"byte_end":27364,"line_start":623,"line_end":623,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27369,"byte_end":27372,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ See also entry if you you want to insert or modify or if you need to get the index of the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27377,"byte_end":27470,"line_start":625,"line_end":625,"column_start":5,"column_end":98}},{"value":"/ corresponding key-value pair.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27475,"byte_end":27508,"line_start":626,"line_end":626,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27513,"byte_end":27516,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27521,"byte_end":27535,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27540,"byte_end":27543,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27548,"byte_end":27555,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27560,"byte_end":27590,"line_start":631,"line_end":631,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27595,"byte_end":27623,"line_start":632,"line_end":632,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27628,"byte_end":27631,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U8>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27636,"byte_end":27685,"line_start":634,"line_end":634,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(map.insert(37, \"a\"), Ok(None));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27690,"byte_end":27736,"line_start":635,"line_end":635,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27741,"byte_end":27779,"line_start":636,"line_end":636,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27784,"byte_end":27787,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27792,"byte_end":27816,"line_start":638,"line_end":638,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.insert(37, \"c\"), Ok(Some(\"b\")));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27821,"byte_end":27872,"line_start":639,"line_end":639,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27877,"byte_end":27907,"line_start":640,"line_end":640,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":27912,"byte_end":27919,"line_start":641,"line_end":641,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28900,"byte_end":28906,"line_start":672,"line_end":672,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexMap<K, V, N, S>>::remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`swap_remove`](struct.IndexMap.html#method.swap_remove)","sig":null,"attributes":[{"value":"/ Same as [`swap_remove`](struct.IndexMap.html#method.swap_remove)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28452,"byte_end":28520,"line_start":657,"line_end":657,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28525,"byte_end":28528,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28533,"byte_end":28573,"line_start":659,"line_end":659,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28578,"byte_end":28581,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28586,"byte_end":28600,"line_start":661,"line_end":661,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28605,"byte_end":28608,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28613,"byte_end":28620,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28625,"byte_end":28655,"line_start":664,"line_end":664,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28660,"byte_end":28688,"line_start":665,"line_end":665,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28693,"byte_end":28696,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U8>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28701,"byte_end":28750,"line_start":667,"line_end":667,"column_start":5,"column_end":54}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28755,"byte_end":28787,"line_start":668,"line_end":668,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28792,"byte_end":28834,"line_start":669,"line_end":669,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28839,"byte_end":28876,"line_start":670,"line_end":670,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":28881,"byte_end":28888,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":29447,"byte_end":29458,"line_start":688,"line_end":688,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexMap<K, V, N, S>>::swap_remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return its value.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":29053,"byte_end":29124,"line_start":680,"line_end":680,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":29129,"byte_end":29132,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the last element of the map","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":29137,"byte_end":29233,"line_start":682,"line_end":682,"column_start":5,"column_end":101}},{"value":"/ and popping it off. **This perturbs the postion of what used to be the last element!**","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":29238,"byte_end":29328,"line_start":683,"line_end":683,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":29333,"byte_end":29336,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":29341,"byte_end":29382,"line_start":685,"line_end":685,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":29387,"byte_end":29390,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":29395,"byte_end":29435,"line_start":687,"line_end":687,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":228},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":34251,"byte_end":34255,"line_start":887,"line_end":887,"column_start":12,"column_end":16},"name":"Iter","qualname":"::indexmap::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":232}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":245},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":34752,"byte_end":34759,"line_start":919,"line_end":919,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::indexmap::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":249}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":277},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37008,"byte_end":37019,"line_start":12,"line_end":12,"column_start":10,"column_end":21},"name":"FnvIndexSet","qualname":"::indexset::FnvIndexSet","value":"IndexSet<T, N, BuildHasherDefault<FnvHasher>>","parent":null,"children":[],"decl_id":null,"docs":" An `IndexSet` using the default FNV hasher\n","sig":null,"attributes":[{"value":"/ An `IndexSet` using the default FNV hasher","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":36952,"byte_end":36998,"line_start":11,"line_end":11,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":280},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38047,"byte_end":38055,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"IndexSet","qualname":"::indexset::IndexSet","value":"IndexSet {  }","parent":null,"children":[{"krate":0,"index":284}],"decl_id":null,"docs":" Fixed capacity [`IndexSet`](https://docs.rs/indexmap/1/indexmap/set/struct.IndexSet.html)","sig":null,"attributes":[{"value":"/ Fixed capacity [`IndexSet`](https://docs.rs/indexmap/1/indexmap/set/struct.IndexSet.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37076,"byte_end":37169,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37170,"byte_end":37173,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Note that the capacity of the `IndexSet` must be a power of 2.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37174,"byte_end":37240,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37241,"byte_end":37244,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37245,"byte_end":37259,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37260,"byte_end":37263,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37264,"byte_end":37271,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37272,"byte_end":37302,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37303,"byte_end":37331,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37332,"byte_end":37335,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ // A hash set with a capacity of 16 elements allocated on the stack","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37336,"byte_end":37407,"line_start":24,"line_end":24,"column_start":1,"column_end":72}},{"value":"/ let mut books = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37408,"byte_end":37457,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37458,"byte_end":37461,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Add some books.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37462,"byte_end":37484,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/ books.insert(\"A Dance With Dragons\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37485,"byte_end":37535,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ books.insert(\"To Kill a Mockingbird\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37536,"byte_end":37587,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ books.insert(\"The Odyssey\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37588,"byte_end":37629,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ books.insert(\"The Great Gatsby\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37630,"byte_end":37676,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37677,"byte_end":37680,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37681,"byte_end":37713,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/ if !books.contains(\"The Winds of Winter\") {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37714,"byte_end":37761,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/     println!(\"We have {} books, but The Winds of Winter ain't one.\",","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37762,"byte_end":37834,"line_start":35,"line_end":35,"column_start":1,"column_end":73}},{"value":"/              books.len());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37835,"byte_end":37865,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37866,"byte_end":37871,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37872,"byte_end":37875,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Remove a book.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37876,"byte_end":37897,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/ books.remove(\"The Odyssey\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37898,"byte_end":37930,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37931,"byte_end":37934,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37935,"byte_end":37966,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ for book in &books {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37967,"byte_end":37991,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/     println!(\"{}\", book);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":37992,"byte_end":38021,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38022,"byte_end":38027,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38028,"byte_end":38035,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38413,"byte_end":38416,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexSet<T, N, BuildHasherDefault<S>>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `IndexSet`\n","sig":null,"attributes":[{"value":"/ Creates an empty `IndexSet`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38370,"byte_end":38401,"line_start":61,"line_end":61,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38933,"byte_end":38941,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexSet<T, N, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the set can hold","sig":null,"attributes":[{"value":"/ Returns the number of elements the set can hold","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38645,"byte_end":38696,"line_start":75,"line_end":75,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38701,"byte_end":38704,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38709,"byte_end":38723,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38728,"byte_end":38731,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38736,"byte_end":38743,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38748,"byte_end":38778,"line_start":80,"line_end":80,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38783,"byte_end":38811,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38816,"byte_end":38819,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let set = FnvIndexSet::<i32, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38824,"byte_end":38869,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(set.capacity(), 16);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38874,"byte_end":38909,"line_start":84,"line_end":84,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38914,"byte_end":38921,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39455,"byte_end":39459,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexSet<T, N, S>>::iter","value":"fn (&self) -> Iter<T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the set, in their order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38999,"byte_end":39064,"line_start":90,"line_end":90,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39069,"byte_end":39072,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39077,"byte_end":39091,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39096,"byte_end":39099,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39104,"byte_end":39111,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39116,"byte_end":39146,"line_start":95,"line_end":95,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39151,"byte_end":39179,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39184,"byte_end":39187,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let mut set = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39192,"byte_end":39239,"line_start":98,"line_end":98,"column_start":5,"column_end":52}},{"value":"/ set.insert(\"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39244,"byte_end":39273,"line_start":99,"line_end":99,"column_start":5,"column_end":34}},{"value":"/ set.insert(\"b\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39278,"byte_end":39307,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39312,"byte_end":39315,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ // Will print in an arbitrary order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39320,"byte_end":39360,"line_start":102,"line_end":102,"column_start":5,"column_end":45}},{"value":"/ for x in set.iter() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39365,"byte_end":39390,"line_start":103,"line_end":103,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39395,"byte_end":39421,"line_start":104,"line_end":104,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39426,"byte_end":39431,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39436,"byte_end":39443,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40490,"byte_end":40500,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"difference","qualname":"<IndexSet<T, N, S>>::difference","value":"fn <'a, N2, S2> (&'a self, other: &'a IndexSet<T, N2, S2>) -> Difference<'a, T, N2, S2>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the difference, i.e. the values that are in `self` but not in\n `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the difference, i.e. the values that are in `self` but not in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39551,"byte_end":39647,"line_start":113,"line_end":113,"column_start":5,"column_end":101}},{"value":"/ `other`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39652,"byte_end":39664,"line_start":114,"line_end":114,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39669,"byte_end":39672,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39677,"byte_end":39691,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39696,"byte_end":39699,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39704,"byte_end":39711,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39716,"byte_end":39746,"line_start":119,"line_end":119,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39751,"byte_end":39779,"line_start":120,"line_end":120,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39784,"byte_end":39787,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let mut a: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39792,"byte_end":39865,"line_start":122,"line_end":122,"column_start":5,"column_end":78}},{"value":"/ let mut b: FnvIndexSet<_, U16> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39870,"byte_end":39946,"line_start":123,"line_end":123,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39951,"byte_end":39954,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ // Can be seen as `a - b`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39959,"byte_end":39989,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ for x in a.difference(&b) {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":39994,"byte_end":40025,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"/     println!(\"{}\", x); // Print 1","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40030,"byte_end":40067,"line_start":127,"line_end":127,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40072,"byte_end":40077,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40082,"byte_end":40085,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let diff: FnvIndexSet<_, U16> = a.difference(&b).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40090,"byte_end":40153,"line_start":130,"line_end":130,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(diff, [1].iter().collect::<FnvIndexSet<_, U16>>());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40158,"byte_end":40224,"line_start":131,"line_end":131,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40229,"byte_end":40232,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ // Note that difference is not symmetric,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40237,"byte_end":40282,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/ // and `b - a` means something else:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40287,"byte_end":40327,"line_start":134,"line_end":134,"column_start":5,"column_end":45}},{"value":"/ let diff: FnvIndexSet<_, U16> = b.difference(&a).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40332,"byte_end":40395,"line_start":135,"line_end":135,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(diff, [4].iter().collect::<FnvIndexSet<_, U16>>());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40400,"byte_end":40466,"line_start":136,"line_end":136,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40471,"byte_end":40478,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41668,"byte_end":41688,"line_start":175,"line_end":175,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<IndexSet<T, N, S>>::symmetric_difference","value":"fn <'a, N2, S2> (&'a self, other: &'a IndexSet<T, N2, S2>) -> impl Iterator<Item = &'a T>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the symmetric difference, i.e. the values that are in `self`\n or in `other` but not in both.","sig":null,"attributes":[{"value":"/ Visits the values representing the symmetric difference, i.e. the values that are in `self`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40807,"byte_end":40902,"line_start":152,"line_end":152,"column_start":5,"column_end":100}},{"value":"/ or in `other` but not in both.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40907,"byte_end":40941,"line_start":153,"line_end":153,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40946,"byte_end":40949,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40954,"byte_end":40968,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40973,"byte_end":40976,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40981,"byte_end":40988,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":40993,"byte_end":41023,"line_start":158,"line_end":158,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41028,"byte_end":41056,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41061,"byte_end":41064,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut a: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41069,"byte_end":41142,"line_start":161,"line_end":161,"column_start":5,"column_end":78}},{"value":"/ let mut b: FnvIndexSet<_, U16> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41147,"byte_end":41223,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41228,"byte_end":41231,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 4 in that order order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41236,"byte_end":41274,"line_start":164,"line_end":164,"column_start":5,"column_end":43}},{"value":"/ for x in a.symmetric_difference(&b) {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41279,"byte_end":41320,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41325,"byte_end":41351,"line_start":166,"line_end":166,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41356,"byte_end":41361,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41366,"byte_end":41369,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ let diff1: FnvIndexSet<_, U16> = a.symmetric_difference(&b).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41374,"byte_end":41448,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ let diff2: FnvIndexSet<_, U16> = b.symmetric_difference(&a).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41453,"byte_end":41527,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41532,"byte_end":41535,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(diff1, diff2);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41540,"byte_end":41569,"line_start":172,"line_end":172,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(diff1, [1, 4].iter().collect::<FnvIndexSet<_, U16>>());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41574,"byte_end":41644,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41649,"byte_end":41656,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42688,"byte_end":42700,"line_start":206,"line_end":206,"column_start":12,"column_end":24},"name":"intersection","qualname":"<IndexSet<T, N, S>>::intersection","value":"fn <'a, N2, S2> (&'a self, other: &'a IndexSet<T, N2, S2>) -> Intersection<'a, T, N2, S2>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the intersection, i.e. the values that are both in `self` and\n `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the intersection, i.e. the values that are both in `self` and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":41977,"byte_end":42073,"line_start":186,"line_end":186,"column_start":5,"column_end":101}},{"value":"/ `other`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42078,"byte_end":42090,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42095,"byte_end":42098,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42103,"byte_end":42117,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42122,"byte_end":42125,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42130,"byte_end":42137,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42142,"byte_end":42172,"line_start":192,"line_end":192,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42177,"byte_end":42205,"line_start":193,"line_end":193,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42210,"byte_end":42213,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let mut a: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42218,"byte_end":42291,"line_start":195,"line_end":195,"column_start":5,"column_end":78}},{"value":"/ let mut b: FnvIndexSet<_, U16> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42296,"byte_end":42372,"line_start":196,"line_end":196,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42377,"byte_end":42380,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // Print 2, 3 in that order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42385,"byte_end":42417,"line_start":198,"line_end":198,"column_start":5,"column_end":37}},{"value":"/ for x in a.intersection(&b) {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42422,"byte_end":42455,"line_start":199,"line_end":199,"column_start":5,"column_end":38}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42460,"byte_end":42486,"line_start":200,"line_end":200,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42491,"byte_end":42496,"line_start":201,"line_end":201,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42501,"byte_end":42504,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let intersection: FnvIndexSet<_, U16> = a.intersection(&b).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42509,"byte_end":42582,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(intersection, [2, 3].iter().collect::<FnvIndexSet<_, U16>>());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42587,"byte_end":42664,"line_start":204,"line_end":204,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":42669,"byte_end":42676,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43708,"byte_end":43713,"line_start":240,"line_end":240,"column_start":12,"column_end":17},"name":"union","qualname":"<IndexSet<T, N, S>>::union","value":"fn <'a, N2, S2> (&'a self, other: &'a IndexSet<T, N2, S2>) -> impl Iterator<Item = &'a T>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the union, i.e. all the values in `self` or `other`, without\n duplicates.","sig":null,"attributes":[{"value":"/ Visits the values representing the union, i.e. all the values in `self` or `other`, without","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43011,"byte_end":43106,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ duplicates.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43111,"byte_end":43126,"line_start":221,"line_end":221,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43131,"byte_end":43134,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43139,"byte_end":43153,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43158,"byte_end":43161,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43166,"byte_end":43173,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43178,"byte_end":43208,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43213,"byte_end":43241,"line_start":227,"line_end":227,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43246,"byte_end":43249,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let mut a: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43254,"byte_end":43327,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/ let mut b: FnvIndexSet<_, U16> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43332,"byte_end":43408,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43413,"byte_end":43416,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 2, 3, 4 in that order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43421,"byte_end":43459,"line_start":232,"line_end":232,"column_start":5,"column_end":43}},{"value":"/ for x in a.union(&b) {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43464,"byte_end":43490,"line_start":233,"line_end":233,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43495,"byte_end":43521,"line_start":234,"line_end":234,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43526,"byte_end":43531,"line_start":235,"line_end":235,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43536,"byte_end":43539,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let union: FnvIndexSet<_, U16> = a.union(&b).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43544,"byte_end":43603,"line_start":237,"line_end":237,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(union, [1, 2, 3, 4].iter().collect::<FnvIndexSet<_, U16>>());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43608,"byte_end":43684,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43689,"byte_end":43696,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44339,"byte_end":44342,"line_start":264,"line_end":264,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexSet<T, N, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the set.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the set.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":43991,"byte_end":44037,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44042,"byte_end":44045,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44050,"byte_end":44064,"line_start":253,"line_end":253,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44069,"byte_end":44072,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44077,"byte_end":44084,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44089,"byte_end":44119,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44124,"byte_end":44152,"line_start":257,"line_end":257,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44157,"byte_end":44160,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let mut v: FnvIndexSet<_, U16> = FnvIndexSet::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44165,"byte_end":44221,"line_start":259,"line_end":259,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(v.len(), 0);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44226,"byte_end":44253,"line_start":260,"line_end":260,"column_start":5,"column_end":32}},{"value":"/ v.insert(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44258,"byte_end":44283,"line_start":261,"line_end":261,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(v.len(), 1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44288,"byte_end":44315,"line_start":262,"line_end":262,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44320,"byte_end":44327,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44747,"byte_end":44755,"line_start":281,"line_end":281,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexSet<T, N, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44395,"byte_end":44446,"line_start":268,"line_end":268,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44451,"byte_end":44454,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44459,"byte_end":44473,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44478,"byte_end":44481,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44486,"byte_end":44493,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44498,"byte_end":44528,"line_start":273,"line_end":273,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44533,"byte_end":44561,"line_start":274,"line_end":274,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44566,"byte_end":44569,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let mut v: FnvIndexSet<_, U16> = FnvIndexSet::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44574,"byte_end":44630,"line_start":276,"line_end":276,"column_start":5,"column_end":61}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44635,"byte_end":44661,"line_start":277,"line_end":277,"column_start":5,"column_end":31}},{"value":"/ v.insert(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44666,"byte_end":44691,"line_start":278,"line_end":278,"column_start":5,"column_end":30}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44696,"byte_end":44723,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44728,"byte_end":44735,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45140,"byte_end":45145,"line_start":298,"line_end":298,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexSet<T, N, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all values.","sig":null,"attributes":[{"value":"/ Clears the set, removing all values.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44812,"byte_end":44852,"line_start":285,"line_end":285,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44857,"byte_end":44860,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44865,"byte_end":44879,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44884,"byte_end":44887,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44892,"byte_end":44899,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44904,"byte_end":44934,"line_start":290,"line_end":290,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44939,"byte_end":44967,"line_start":291,"line_end":291,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44972,"byte_end":44975,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut v: FnvIndexSet<_, U16> = FnvIndexSet::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":44980,"byte_end":45036,"line_start":293,"line_end":293,"column_start":5,"column_end":61}},{"value":"/ v.insert(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45041,"byte_end":45066,"line_start":294,"line_end":294,"column_start":5,"column_end":30}},{"value":"/ v.clear();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45071,"byte_end":45085,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45090,"byte_end":45116,"line_start":296,"line_end":296,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45121,"byte_end":45128,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45716,"byte_end":45724,"line_start":317,"line_end":317,"column_start":12,"column_end":20},"name":"contains","qualname":"<IndexSet<T, N, S>>::contains","value":"fn <Q> (&self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains a value.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45195,"byte_end":45242,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45247,"byte_end":45250,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but `Hash` and `Eq` on the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45255,"byte_end":45345,"line_start":304,"line_end":304,"column_start":5,"column_end":95}},{"value":"/ borrowed form must match those for the value type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45350,"byte_end":45404,"line_start":305,"line_end":305,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45409,"byte_end":45412,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45417,"byte_end":45431,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45436,"byte_end":45439,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45444,"byte_end":45451,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45456,"byte_end":45486,"line_start":310,"line_end":310,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45491,"byte_end":45519,"line_start":311,"line_end":311,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45524,"byte_end":45527,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let set: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45532,"byte_end":45603,"line_start":313,"line_end":313,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(set.contains(&1), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45608,"byte_end":45647,"line_start":314,"line_end":314,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(set.contains(&4), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45652,"byte_end":45692,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45697,"byte_end":45704,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46480,"byte_end":46491,"line_start":343,"line_end":343,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<IndexSet<T, N, S>>::is_disjoint","value":"fn <N2, S2> (&self, other: &IndexSet<T, N2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`. This is equivalent to\n checking for an empty intersection.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`. This is equivalent to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45871,"byte_end":45961,"line_start":325,"line_end":325,"column_start":5,"column_end":95}},{"value":"/ checking for an empty intersection.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":45966,"byte_end":46005,"line_start":326,"line_end":326,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46010,"byte_end":46013,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46018,"byte_end":46032,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46037,"byte_end":46040,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46045,"byte_end":46052,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46057,"byte_end":46087,"line_start":331,"line_end":331,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46092,"byte_end":46120,"line_start":332,"line_end":332,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46125,"byte_end":46128,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ let a: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46133,"byte_end":46202,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/ let mut b = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46207,"byte_end":46252,"line_start":335,"line_end":335,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46257,"byte_end":46260,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46265,"byte_end":46305,"line_start":337,"line_end":337,"column_start":5,"column_end":45}},{"value":"/ b.insert(4).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46310,"byte_end":46335,"line_start":338,"line_end":338,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46340,"byte_end":46380,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/ b.insert(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46385,"byte_end":46410,"line_start":340,"line_end":340,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.is_disjoint(&b), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46415,"byte_end":46456,"line_start":341,"line_end":341,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46461,"byte_end":46468,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47318,"byte_end":47327,"line_start":369,"line_end":369,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<IndexSet<T, N, S>>::is_subset","value":"fn <N2, S2> (&self, other: &IndexSet<T, N2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another, i.e. `other` contains at least all the\n values in `self`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another, i.e. `other` contains at least all the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46711,"byte_end":46803,"line_start":351,"line_end":351,"column_start":5,"column_end":97}},{"value":"/ values in `self`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46808,"byte_end":46829,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46834,"byte_end":46837,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46842,"byte_end":46856,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46861,"byte_end":46864,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46869,"byte_end":46876,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46881,"byte_end":46911,"line_start":357,"line_end":357,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46916,"byte_end":46944,"line_start":358,"line_end":358,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46949,"byte_end":46952,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let sup: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":46957,"byte_end":47028,"line_start":360,"line_end":360,"column_start":5,"column_end":76}},{"value":"/ let mut set = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47033,"byte_end":47080,"line_start":361,"line_end":361,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47085,"byte_end":47088,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47093,"byte_end":47135,"line_start":363,"line_end":363,"column_start":5,"column_end":47}},{"value":"/ set.insert(2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47140,"byte_end":47167,"line_start":364,"line_end":364,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47172,"byte_end":47214,"line_start":365,"line_end":365,"column_start":5,"column_end":47}},{"value":"/ set.insert(4).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47219,"byte_end":47246,"line_start":366,"line_end":366,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(set.is_subset(&sup), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47251,"byte_end":47294,"line_start":367,"line_end":367,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47299,"byte_end":47306,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48205,"byte_end":48216,"line_start":398,"line_end":398,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<IndexSet<T, N, S>>::is_superset","value":"fn <N2, S2> (&self, other: &IndexSet<T, N2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":"\n # Examples","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47669,"byte_end":47672,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47677,"byte_end":47691,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47696,"byte_end":47699,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47704,"byte_end":47711,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47716,"byte_end":47746,"line_start":383,"line_end":383,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47751,"byte_end":47779,"line_start":384,"line_end":384,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47784,"byte_end":47787,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let sub: FnvIndexSet<_, U16> = [1, 2].iter().cloned().collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47792,"byte_end":47860,"line_start":386,"line_end":386,"column_start":5,"column_end":73}},{"value":"/ let mut set = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47865,"byte_end":47912,"line_start":387,"line_end":387,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47917,"byte_end":47920,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47925,"byte_end":47970,"line_start":389,"line_end":389,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47975,"byte_end":47978,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ set.insert(0).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":47983,"byte_end":48010,"line_start":391,"line_end":391,"column_start":5,"column_end":32}},{"value":"/ set.insert(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48015,"byte_end":48042,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48047,"byte_end":48092,"line_start":393,"line_end":393,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48097,"byte_end":48100,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ set.insert(2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48105,"byte_end":48132,"line_start":395,"line_end":395,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(set.is_superset(&sub), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48137,"byte_end":48181,"line_start":396,"line_end":396,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48186,"byte_end":48193,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48945,"byte_end":48951,"line_start":424,"line_end":424,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexSet<T, N, S>>::insert","value":"fn (&mut self, value: T) -> Result<bool, T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set.","sig":null,"attributes":[{"value":"/ Adds a value to the set.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48418,"byte_end":48446,"line_start":406,"line_end":406,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48451,"byte_end":48454,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If the set did not have this value present, `true` is returned.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48459,"byte_end":48526,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48531,"byte_end":48534,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ If the set did have this value present, `false` is returned.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48539,"byte_end":48603,"line_start":410,"line_end":410,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48608,"byte_end":48611,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48616,"byte_end":48630,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48635,"byte_end":48638,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48643,"byte_end":48650,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48655,"byte_end":48685,"line_start":415,"line_end":415,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48690,"byte_end":48718,"line_start":416,"line_end":416,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48723,"byte_end":48726,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ let mut set = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48731,"byte_end":48778,"line_start":418,"line_end":418,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48783,"byte_end":48786,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.insert(2).unwrap(), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48791,"byte_end":48836,"line_start":420,"line_end":420,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(set.insert(2).unwrap(), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48841,"byte_end":48887,"line_start":421,"line_end":421,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(set.len(), 1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48892,"byte_end":48921,"line_start":422,"line_end":422,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":48926,"byte_end":48933,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49695,"byte_end":49701,"line_start":448,"line_end":448,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexSet<T, N, S>>::remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns `true` if the value was present in the set.","sig":null,"attributes":[{"value":"/ Removes a value from the set. Returns `true` if the value was present in the set.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49124,"byte_end":49209,"line_start":431,"line_end":431,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49214,"byte_end":49217,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but `Hash` and `Eq` on the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49222,"byte_end":49312,"line_start":433,"line_end":433,"column_start":5,"column_end":95}},{"value":"/ borrowed form must match those for the value type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49317,"byte_end":49371,"line_start":434,"line_end":434,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49376,"byte_end":49379,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49384,"byte_end":49398,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49403,"byte_end":49406,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49411,"byte_end":49418,"line_start":438,"line_end":438,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49423,"byte_end":49453,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49458,"byte_end":49486,"line_start":440,"line_end":440,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49491,"byte_end":49494,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ let mut set = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49499,"byte_end":49546,"line_start":442,"line_end":442,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49551,"byte_end":49554,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ set.insert(2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49559,"byte_end":49586,"line_start":444,"line_end":444,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(set.remove(&2), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49591,"byte_end":49628,"line_start":445,"line_end":445,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.remove(&2), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49633,"byte_end":49671,"line_start":446,"line_end":446,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49676,"byte_end":49683,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":385},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":52351,"byte_end":52355,"line_start":565,"line_end":565,"column_start":12,"column_end":16},"name":"Iter","qualname":"::indexset::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":388}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":399},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":52764,"byte_end":52774,"line_start":594,"line_end":594,"column_start":12,"column_end":22},"name":"Difference","qualname":"::indexset::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":413},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":53397,"byte_end":53409,"line_start":622,"line_end":622,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::indexset::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":437},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":54343,"byte_end":54352,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"LinearMap","qualname":"::linear_map::LinearMap","value":"LinearMap {  }","parent":null,"children":[{"krate":0,"index":441}],"decl_id":null,"docs":" A fixed capacity map / dictionary that performs lookups via linear search","sig":null,"attributes":[{"value":"/ A fixed capacity map / dictionary that performs lookups via linear search","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":54156,"byte_end":54233,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":54234,"byte_end":54237,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Note that as this map doesn't use hashing so most operations are **O(N)** instead of O(1)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":54238,"byte_end":54331,"line_start":11,"line_end":11,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":54835,"byte_end":54838,"line_start":36,"line_end":36,"column_start":22,"column_end":25},"name":"new","qualname":"<LinearMap<K, V, N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `LinearMap`","sig":null,"attributes":[{"value":"cfg(not (feature = \"const-fn\"))","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/const_fn.rs","byte_start":5591,"byte_end":5624,"line_start":23,"line_end":23,"column_start":9,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55267,"byte_end":55275,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"capacity","qualname":"<LinearMap<K, V, N>>::capacity","value":"fn (&mut self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements that the map can hold","sig":null,"attributes":[{"value":"/ Returns the number of elements that the map can hold","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":54917,"byte_end":54973,"line_start":41,"line_end":41,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":54978,"byte_end":54981,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":54986,"byte_end":55015,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55020,"byte_end":55023,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55028,"byte_end":55042,"line_start":45,"line_end":45,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55047,"byte_end":55050,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55055,"byte_end":55062,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55067,"byte_end":55095,"line_start":48,"line_end":48,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55100,"byte_end":55128,"line_start":49,"line_end":49,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55133,"byte_end":55136,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<&str, isize, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55141,"byte_end":55204,"line_start":51,"line_end":51,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(map.capacity(), 8);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55209,"byte_end":55243,"line_start":52,"line_end":52,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55248,"byte_end":55255,"line_start":53,"line_end":53,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55727,"byte_end":55732,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"clear","qualname":"<LinearMap<K, V, N>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55340,"byte_end":55388,"line_start":58,"line_end":58,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55393,"byte_end":55396,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55401,"byte_end":55430,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55435,"byte_end":55438,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55443,"byte_end":55457,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55462,"byte_end":55465,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55470,"byte_end":55477,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55482,"byte_end":55510,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55515,"byte_end":55543,"line_start":66,"line_end":66,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55548,"byte_end":55551,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55556,"byte_end":55612,"line_start":68,"line_end":68,"column_start":5,"column_end":61}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55617,"byte_end":55649,"line_start":69,"line_end":69,"column_start":5,"column_end":37}},{"value":"/ map.clear();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55654,"byte_end":55670,"line_start":70,"line_end":70,"column_start":5,"column_end":21}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55675,"byte_end":55703,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55708,"byte_end":55715,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56234,"byte_end":56246,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<LinearMap<K, V, N>>::contains_key","value":"fn (&self, key: &K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55785,"byte_end":55852,"line_start":77,"line_end":77,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55857,"byte_end":55860,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(N)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55865,"byte_end":55894,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55899,"byte_end":55902,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55907,"byte_end":55921,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55926,"byte_end":55929,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55934,"byte_end":55941,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55946,"byte_end":55974,"line_start":84,"line_end":84,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":55979,"byte_end":56007,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56012,"byte_end":56015,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56020,"byte_end":56076,"line_start":87,"line_end":87,"column_start":5,"column_end":61}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56081,"byte_end":56113,"line_start":88,"line_end":88,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56118,"byte_end":56161,"line_start":89,"line_end":89,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56166,"byte_end":56210,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56215,"byte_end":56222,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56746,"byte_end":56749,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"get","qualname":"<LinearMap<K, V, N>>::get","value":"fn <Q> (&self, key: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56316,"byte_end":56377,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56382,"byte_end":56385,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(N)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56390,"byte_end":56419,"line_start":98,"line_end":98,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56424,"byte_end":56427,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56432,"byte_end":56446,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56451,"byte_end":56454,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56459,"byte_end":56466,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56471,"byte_end":56499,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56504,"byte_end":56532,"line_start":104,"line_end":104,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56537,"byte_end":56540,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56545,"byte_end":56601,"line_start":106,"line_end":106,"column_start":5,"column_end":61}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56606,"byte_end":56638,"line_start":107,"line_end":107,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56643,"byte_end":56683,"line_start":108,"line_end":108,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56688,"byte_end":56722,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56727,"byte_end":56734,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57415,"byte_end":57422,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LinearMap<K, V, N>>::get_mut","value":"fn <Q> (&mut self, key: &Q) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":56952,"byte_end":57021,"line_start":121,"line_end":121,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57026,"byte_end":57029,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(N)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57034,"byte_end":57063,"line_start":123,"line_end":123,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57068,"byte_end":57071,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57076,"byte_end":57090,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57095,"byte_end":57098,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57103,"byte_end":57110,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57115,"byte_end":57143,"line_start":128,"line_end":128,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57148,"byte_end":57176,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57181,"byte_end":57184,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57189,"byte_end":57245,"line_start":131,"line_end":131,"column_start":5,"column_end":61}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57250,"byte_end":57282,"line_start":132,"line_end":132,"column_start":5,"column_end":37}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57287,"byte_end":57325,"line_start":133,"line_end":133,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57330,"byte_end":57347,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57352,"byte_end":57357,"line_start":135,"line_end":135,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57362,"byte_end":57391,"line_start":136,"line_end":136,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57396,"byte_end":57403,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58028,"byte_end":58031,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"len","qualname":"<LinearMap<K, V, N>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in this map","sig":null,"attributes":[{"value":"/ Returns the number of elements in this map","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57637,"byte_end":57683,"line_start":148,"line_end":148,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57688,"byte_end":57691,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57696,"byte_end":57725,"line_start":150,"line_end":150,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57730,"byte_end":57733,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57738,"byte_end":57752,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57757,"byte_end":57760,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57765,"byte_end":57772,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57777,"byte_end":57805,"line_start":155,"line_end":155,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57810,"byte_end":57838,"line_start":156,"line_end":156,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57843,"byte_end":57846,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let mut a: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57851,"byte_end":57905,"line_start":158,"line_end":158,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57910,"byte_end":57937,"line_start":159,"line_end":159,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57942,"byte_end":57972,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":57977,"byte_end":58004,"line_start":161,"line_end":161,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58009,"byte_end":58016,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58803,"byte_end":58809,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"insert","qualname":"<LinearMap<K, V, N>>::insert","value":"fn (&mut self, key: K, mut value: V) -> Result<Option<V>, (K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58087,"byte_end":58129,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58134,"byte_end":58137,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58142,"byte_end":58207,"line_start":169,"line_end":169,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58212,"byte_end":58215,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old value is returned.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58220,"byte_end":58314,"line_start":171,"line_end":171,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58319,"byte_end":58322,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(N)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58327,"byte_end":58356,"line_start":173,"line_end":173,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58361,"byte_end":58364,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58369,"byte_end":58383,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58388,"byte_end":58391,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58396,"byte_end":58403,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58408,"byte_end":58436,"line_start":178,"line_end":178,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58441,"byte_end":58469,"line_start":179,"line_end":179,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58474,"byte_end":58477,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58482,"byte_end":58538,"line_start":181,"line_end":181,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(map.insert(37, \"a\").unwrap(), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58543,"byte_end":58594,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58599,"byte_end":58637,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58642,"byte_end":58645,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58650,"byte_end":58683,"line_start":185,"line_end":185,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.insert(37, \"c\").unwrap(), Some(\"b\"));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58688,"byte_end":58744,"line_start":186,"line_end":186,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58749,"byte_end":58779,"line_start":187,"line_end":187,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":58784,"byte_end":58791,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59494,"byte_end":59502,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LinearMap<K, V, N>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59102,"byte_end":59150,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59155,"byte_end":59158,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59163,"byte_end":59192,"line_start":201,"line_end":201,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59197,"byte_end":59200,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59205,"byte_end":59219,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59224,"byte_end":59227,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59232,"byte_end":59239,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59244,"byte_end":59272,"line_start":206,"line_end":206,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59277,"byte_end":59305,"line_start":207,"line_end":207,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59310,"byte_end":59313,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut a: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59318,"byte_end":59372,"line_start":209,"line_end":209,"column_start":5,"column_end":59}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59377,"byte_end":59403,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59408,"byte_end":59438,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59443,"byte_end":59470,"line_start":212,"line_end":212,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59475,"byte_end":59482,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60044,"byte_end":60048,"line_start":235,"line_end":235,"column_start":12,"column_end":16},"name":"iter","qualname":"<LinearMap<K, V, N>>::iter","value":"fn (&self) -> Iter<K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59555,"byte_end":59619,"line_start":218,"line_end":218,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59624,"byte_end":59627,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59632,"byte_end":59646,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59651,"byte_end":59654,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59659,"byte_end":59666,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59671,"byte_end":59699,"line_start":223,"line_end":223,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59704,"byte_end":59732,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59737,"byte_end":59740,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59745,"byte_end":59801,"line_start":226,"line_end":226,"column_start":5,"column_end":61}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59806,"byte_end":59838,"line_start":227,"line_end":227,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59843,"byte_end":59875,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59880,"byte_end":59912,"line_start":229,"line_end":229,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59917,"byte_end":59920,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in map.iter() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59925,"byte_end":59959,"line_start":231,"line_end":231,"column_start":5,"column_end":39}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":59964,"byte_end":60010,"line_start":232,"line_end":232,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60015,"byte_end":60020,"line_start":233,"line_end":233,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60025,"byte_end":60032,"line_start":234,"line_end":234,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60785,"byte_end":60793,"line_start":264,"line_end":264,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<LinearMap<K, V, N>>::iter_mut","value":"fn (&mut self) -> IterMut<K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order, with mutable references to the\n values","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order, with mutable references to the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60146,"byte_end":60241,"line_start":241,"line_end":241,"column_start":5,"column_end":100}},{"value":"/ values","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60246,"byte_end":60256,"line_start":242,"line_end":242,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60261,"byte_end":60264,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60269,"byte_end":60283,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60288,"byte_end":60291,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60296,"byte_end":60303,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60308,"byte_end":60336,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60341,"byte_end":60369,"line_start":248,"line_end":248,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60374,"byte_end":60377,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60382,"byte_end":60438,"line_start":250,"line_end":250,"column_start":5,"column_end":61}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60443,"byte_end":60475,"line_start":251,"line_end":251,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60480,"byte_end":60512,"line_start":252,"line_end":252,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60517,"byte_end":60549,"line_start":253,"line_end":253,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60554,"byte_end":60557,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // Update all values","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60562,"byte_end":60586,"line_start":255,"line_end":255,"column_start":5,"column_end":29}},{"value":"/ for (_, val) in map.iter_mut() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60591,"byte_end":60627,"line_start":256,"line_end":256,"column_start":5,"column_end":41}},{"value":"/     *val = 2;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60632,"byte_end":60649,"line_start":257,"line_end":257,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60654,"byte_end":60659,"line_start":258,"line_end":258,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60664,"byte_end":60667,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in &map {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60672,"byte_end":60700,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60705,"byte_end":60751,"line_start":261,"line_end":261,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60756,"byte_end":60761,"line_start":262,"line_end":262,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60766,"byte_end":60773,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61357,"byte_end":61361,"line_start":287,"line_end":287,"column_start":12,"column_end":16},"name":"keys","qualname":"<LinearMap<K, V, N>>::keys","value":"fn (&self) -> impl Iterator<Item = &K>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order","sig":null,"attributes":[{"value":"/ An iterator visiting all keys in arbitrary order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60905,"byte_end":60957,"line_start":270,"line_end":270,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60962,"byte_end":60965,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60970,"byte_end":60984,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60989,"byte_end":60992,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":60997,"byte_end":61004,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61009,"byte_end":61037,"line_start":275,"line_end":275,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61042,"byte_end":61070,"line_start":276,"line_end":276,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61075,"byte_end":61078,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61083,"byte_end":61139,"line_start":278,"line_end":278,"column_start":5,"column_end":61}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61144,"byte_end":61176,"line_start":279,"line_end":279,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61181,"byte_end":61213,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61218,"byte_end":61250,"line_start":281,"line_end":281,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61255,"byte_end":61258,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61263,"byte_end":61290,"line_start":283,"line_end":283,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61295,"byte_end":61323,"line_start":284,"line_end":284,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61328,"byte_end":61333,"line_start":285,"line_end":285,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61338,"byte_end":61345,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61927,"byte_end":61933,"line_start":307,"line_end":307,"column_start":12,"column_end":18},"name":"remove","qualname":"<LinearMap<K, V, N>>::remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key was previously in the\n map","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key was previously in the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61446,"byte_end":61541,"line_start":291,"line_end":291,"column_start":5,"column_end":100}},{"value":"/ map","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61546,"byte_end":61553,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61558,"byte_end":61561,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(N)** time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61566,"byte_end":61595,"line_start":294,"line_end":294,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61600,"byte_end":61603,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61608,"byte_end":61622,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61627,"byte_end":61630,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61635,"byte_end":61642,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61647,"byte_end":61675,"line_start":299,"line_end":299,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61680,"byte_end":61708,"line_start":300,"line_end":300,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61713,"byte_end":61716,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61721,"byte_end":61777,"line_start":302,"line_end":302,"column_start":5,"column_end":61}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61782,"byte_end":61814,"line_start":303,"line_end":303,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61819,"byte_end":61861,"line_start":304,"line_end":304,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61866,"byte_end":61903,"line_start":305,"line_end":305,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":61908,"byte_end":61915,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62703,"byte_end":62709,"line_start":338,"line_end":338,"column_start":12,"column_end":18},"name":"values","qualname":"<LinearMap<K, V, N>>::values","value":"fn (&self) -> impl Iterator<Item = &V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62247,"byte_end":62301,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62306,"byte_end":62309,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62314,"byte_end":62328,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62333,"byte_end":62336,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62341,"byte_end":62348,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62353,"byte_end":62381,"line_start":326,"line_end":326,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62386,"byte_end":62414,"line_start":327,"line_end":327,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62419,"byte_end":62422,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62427,"byte_end":62483,"line_start":329,"line_end":329,"column_start":5,"column_end":61}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62488,"byte_end":62520,"line_start":330,"line_end":330,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62525,"byte_end":62557,"line_start":331,"line_end":331,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62562,"byte_end":62594,"line_start":332,"line_end":332,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62599,"byte_end":62602,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62607,"byte_end":62636,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62641,"byte_end":62669,"line_start":335,"line_end":335,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62674,"byte_end":62679,"line_start":336,"line_end":336,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62684,"byte_end":62691,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63338,"byte_end":63348,"line_start":363,"line_end":363,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<LinearMap<K, V, N>>::values_mut","value":"fn (&mut self) -> impl Iterator<Item = &mut V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62794,"byte_end":62856,"line_start":342,"line_end":342,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62861,"byte_end":62864,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62869,"byte_end":62883,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62888,"byte_end":62891,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62896,"byte_end":62903,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62908,"byte_end":62936,"line_start":347,"line_end":347,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62941,"byte_end":62969,"line_start":348,"line_end":348,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62974,"byte_end":62977,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":62982,"byte_end":63038,"line_start":350,"line_end":350,"column_start":5,"column_end":61}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63043,"byte_end":63075,"line_start":351,"line_end":351,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63080,"byte_end":63112,"line_start":352,"line_end":352,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63117,"byte_end":63149,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63154,"byte_end":63157,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ for val in map.values_mut() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63162,"byte_end":63195,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/     *val += 10;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63200,"byte_end":63219,"line_start":356,"line_end":356,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63224,"byte_end":63229,"line_start":357,"line_end":357,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63234,"byte_end":63237,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63242,"byte_end":63271,"line_start":359,"line_end":359,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63276,"byte_end":63304,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63309,"byte_end":63314,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63319,"byte_end":63326,"line_start":362,"line_end":362,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":513},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":64900,"byte_end":64908,"line_start":443,"line_end":443,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::linear_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":517}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":539},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":65770,"byte_end":65774,"line_start":490,"line_end":490,"column_start":12,"column_end":16},"name":"Iter","qualname":"::linear_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":543}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":556},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":66252,"byte_end":66259,"line_start":522,"line_end":522,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::linear_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":560}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":595},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":68331,"byte_end":68337,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"String","qualname":"::string::String","value":"String {  }","parent":null,"children":[{"krate":0,"index":597}],"decl_id":null,"docs":" A fixed capacity [`String`](https://doc.rust-lang.org/std/string/struct.String.html)\n","sig":null,"attributes":[{"value":"/ A fixed capacity [`String`](https://doc.rust-lang.org/std/string/struct.String.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":68231,"byte_end":68319,"line_start":14,"line_end":14,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":68822,"byte_end":68825,"line_start":40,"line_end":40,"column_start":22,"column_end":25},"name":"new","qualname":"<String<N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `String` with a fixed capacity of `N`","sig":null,"attributes":[{"value":"cfg(not (feature = \"const-fn\"))","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/const_fn.rs","byte_start":5591,"byte_end":5624,"line_start":23,"line_end":23,"column_start":9,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70185,"byte_end":70194,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"from_utf8","qualname":"<String<N>>::from_utf8","value":"fn (vec: Vec<u8, N>) -> Result<(String<N>), Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a vector of bytes into a `String`.","sig":null,"attributes":[{"value":"/ Converts a vector of bytes into a `String`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":68898,"byte_end":68945,"line_start":45,"line_end":45,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":68950,"byte_end":68953,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ A string slice ([`&str`]) is made of bytes ([`u8`]), and a vector of bytes","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":68958,"byte_end":69036,"line_start":47,"line_end":47,"column_start":5,"column_end":83}},{"value":"/ ([`Vec<u8>`]) is made of bytes, so this function converts between the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69041,"byte_end":69114,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ two. Not all byte slices are valid `String`s, however: `String`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69119,"byte_end":69186,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/ requires that it is valid UTF-8. `from_utf8()` checks to ensure that","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69191,"byte_end":69263,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ the bytes are valid UTF-8, and then does the conversion.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69268,"byte_end":69328,"line_start":51,"line_end":51,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69333,"byte_end":69336,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ See std::String for further information.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69341,"byte_end":69385,"line_start":53,"line_end":53,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69390,"byte_end":69393,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69398,"byte_end":69412,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69417,"byte_end":69420,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69425,"byte_end":69441,"line_start":57,"line_end":57,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69446,"byte_end":69449,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69454,"byte_end":69461,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ use heapless::{String, Vec};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69466,"byte_end":69498,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69503,"byte_end":69531,"line_start":61,"line_end":61,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69536,"byte_end":69539,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let mut v: Vec<u8, U8> = Vec::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69544,"byte_end":69584,"line_start":63,"line_end":63,"column_start":5,"column_end":45}},{"value":"/ v.push('a' as u8).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69589,"byte_end":69620,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"/ v.push('b' as u8).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69625,"byte_end":69656,"line_start":65,"line_end":65,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69661,"byte_end":69664,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ let s = String::from_utf8(v).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69669,"byte_end":69711,"line_start":67,"line_end":67,"column_start":5,"column_end":47}},{"value":"/ assert!(s.len() == 2);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69716,"byte_end":69742,"line_start":68,"line_end":68,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69747,"byte_end":69754,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69759,"byte_end":69762,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Incorrect bytes:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69767,"byte_end":69787,"line_start":71,"line_end":71,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69792,"byte_end":69795,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69800,"byte_end":69807,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use heapless::{String, Vec};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69812,"byte_end":69844,"line_start":74,"line_end":74,"column_start":5,"column_end":37}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69849,"byte_end":69877,"line_start":75,"line_end":75,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69882,"byte_end":69885,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ // some invalid bytes, in a vector","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69890,"byte_end":69928,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69933,"byte_end":69936,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let mut v: Vec<u8, U8> = Vec::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69941,"byte_end":69981,"line_start":79,"line_end":79,"column_start":5,"column_end":45}},{"value":"/ v.push(0).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":69986,"byte_end":70009,"line_start":80,"line_end":80,"column_start":5,"column_end":28}},{"value":"/ v.push(159).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70014,"byte_end":70039,"line_start":81,"line_end":81,"column_start":5,"column_end":30}},{"value":"/ v.push(146).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70044,"byte_end":70069,"line_start":82,"line_end":82,"column_start":5,"column_end":30}},{"value":"/ v.push(150).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70074,"byte_end":70099,"line_start":83,"line_end":83,"column_start":5,"column_end":30}},{"value":"/ assert!(String::from_utf8(v).is_err());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70104,"byte_end":70147,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70152,"byte_end":70159,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70164,"byte_end":70173,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70559,"byte_end":70578,"line_start":99,"line_end":99,"column_start":19,"column_end":38},"name":"from_utf8_unchecked","qualname":"<String<N>>::from_utf8_unchecked","value":"fn (vec: Vec<u8, N>) -> String<N>","parent":null,"children":[],"decl_id":null,"docs":" Converts a vector of bytes to a `String` without checking that the\n string contains valid UTF-8.","sig":null,"attributes":[{"value":"/ Converts a vector of bytes to a `String` without checking that the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70350,"byte_end":70420,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ string contains valid UTF-8.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70425,"byte_end":70457,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70462,"byte_end":70465,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ See the safe version, `from_utf8`, for more details.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70470,"byte_end":70526,"line_start":97,"line_end":97,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70531,"byte_end":70540,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71134,"byte_end":71144,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<String<N>>::into_bytes","value":"fn (self) -> Vec<u8, N>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `String` into a byte vector.","sig":null,"attributes":[{"value":"/ Converts a `String` into a byte vector.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70650,"byte_end":70693,"line_start":103,"line_end":103,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70698,"byte_end":70701,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This consumes the `String`, so we do not need to copy its contents.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70706,"byte_end":70777,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70782,"byte_end":70785,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70790,"byte_end":70804,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70809,"byte_end":70812,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70817,"byte_end":70833,"line_start":109,"line_end":109,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70838,"byte_end":70841,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70846,"byte_end":70853,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70858,"byte_end":70883,"line_start":112,"line_end":112,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70888,"byte_end":70916,"line_start":113,"line_end":113,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70921,"byte_end":70924,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let s: String<U4> = String::from(\"ab\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70929,"byte_end":70972,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ let b = s.into_bytes();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":70977,"byte_end":71004,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/ assert!(b.len() == 2);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71009,"byte_end":71035,"line_start":117,"line_end":117,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71040,"byte_end":71043,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&['a' as u8, 'b' as u8], &b[..]);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71048,"byte_end":71096,"line_start":119,"line_end":119,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71101,"byte_end":71108,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71113,"byte_end":71122,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71663,"byte_end":71669,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"as_str","qualname":"<String<N>>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Extracts a string slice containing the entire string.","sig":null,"attributes":[{"value":"/ Extracts a string slice containing the entire string.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71195,"byte_end":71252,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71257,"byte_end":71260,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71265,"byte_end":71279,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71284,"byte_end":71287,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71292,"byte_end":71308,"line_start":130,"line_end":130,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71313,"byte_end":71316,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71321,"byte_end":71328,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71333,"byte_end":71358,"line_start":133,"line_end":133,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71363,"byte_end":71391,"line_start":134,"line_end":134,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71396,"byte_end":71399,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U4> = String::from(\"ab\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71404,"byte_end":71451,"line_start":136,"line_end":136,"column_start":5,"column_end":52}},{"value":"/ assert!(s.as_str() == \"ab\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71456,"byte_end":71488,"line_start":137,"line_end":137,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71493,"byte_end":71496,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let _s = s.as_str();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71501,"byte_end":71525,"line_start":139,"line_end":139,"column_start":5,"column_end":29}},{"value":"/ // s.push('c'); // <- cannot borrow `s` as mutable because it is also borrowed as immutable","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71530,"byte_end":71625,"line_start":140,"line_end":140,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71630,"byte_end":71637,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71642,"byte_end":71651,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72109,"byte_end":72119,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"as_mut_str","qualname":"<String<N>>::as_mut_str","value":"fn (&mut self) -> &mut str","parent":null,"children":[],"decl_id":null,"docs":" Converts a `String` into a mutable string slice.","sig":null,"attributes":[{"value":"/ Converts a `String` into a mutable string slice.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71754,"byte_end":71806,"line_start":147,"line_end":147,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71811,"byte_end":71814,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71819,"byte_end":71833,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71838,"byte_end":71841,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71846,"byte_end":71862,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71867,"byte_end":71870,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71875,"byte_end":71882,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71887,"byte_end":71912,"line_start":154,"line_end":154,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71917,"byte_end":71945,"line_start":155,"line_end":155,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71950,"byte_end":71953,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U4> = String::from(\"ab\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":71958,"byte_end":72005,"line_start":157,"line_end":157,"column_start":5,"column_end":52}},{"value":"/ let s = s.as_mut_str();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72010,"byte_end":72037,"line_start":158,"line_end":158,"column_start":5,"column_end":32}},{"value":"/ s.make_ascii_uppercase();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72042,"byte_end":72071,"line_start":159,"line_end":159,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72076,"byte_end":72083,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72088,"byte_end":72097,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72670,"byte_end":72678,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"push_str","qualname":"<String<N>>::push_str","value":"fn (&mut self, string: &str) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Appends a given string slice onto the end of this `String`.","sig":null,"attributes":[{"value":"/ Appends a given string slice onto the end of this `String`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72220,"byte_end":72283,"line_start":166,"line_end":166,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72288,"byte_end":72291,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72296,"byte_end":72310,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72315,"byte_end":72318,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72323,"byte_end":72339,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72344,"byte_end":72347,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72352,"byte_end":72359,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72364,"byte_end":72389,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72394,"byte_end":72422,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72427,"byte_end":72430,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U8> = String::from(\"foo\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72435,"byte_end":72483,"line_start":176,"line_end":176,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72488,"byte_end":72491,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ assert!(s.push_str(\"bar\").is_ok());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72496,"byte_end":72535,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72540,"byte_end":72543,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foobar\", s);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72548,"byte_end":72576,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72581,"byte_end":72584,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ assert!(s.push_str(\"tender\").is_err());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72589,"byte_end":72632,"line_start":182,"line_end":182,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72637,"byte_end":72644,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72649,"byte_end":72658,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73119,"byte_end":73127,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"capacity","qualname":"<String<N>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of elements the String can hold","sig":null,"attributes":[{"value":"/ Returns the maximum number of elements the String can hold","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72789,"byte_end":72851,"line_start":189,"line_end":189,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72856,"byte_end":72859,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72864,"byte_end":72878,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72883,"byte_end":72886,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72891,"byte_end":72907,"line_start":193,"line_end":193,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72912,"byte_end":72915,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72920,"byte_end":72927,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72932,"byte_end":72957,"line_start":196,"line_end":196,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72962,"byte_end":72990,"line_start":197,"line_end":197,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":72995,"byte_end":72998,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U4> = String::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73003,"byte_end":73045,"line_start":199,"line_end":199,"column_start":5,"column_end":47}},{"value":"/ assert!(s.capacity() == 4);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73050,"byte_end":73081,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73086,"byte_end":73093,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73098,"byte_end":73107,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73726,"byte_end":73730,"line_start":230,"line_end":230,"column_start":12,"column_end":16},"name":"push","qualname":"<String<N>>::push","value":"fn (&mut self, c: char) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Appends the given [`char`] to the end of this `String`.","sig":null,"attributes":[{"value":"/ Appends the given [`char`] to the end of this `String`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73185,"byte_end":73244,"line_start":207,"line_end":207,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73249,"byte_end":73252,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`char`]: ../../std/primitive.char.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73257,"byte_end":73300,"line_start":209,"line_end":209,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73305,"byte_end":73308,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73313,"byte_end":73327,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73332,"byte_end":73335,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73340,"byte_end":73356,"line_start":213,"line_end":213,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73361,"byte_end":73364,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73369,"byte_end":73376,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73381,"byte_end":73406,"line_start":216,"line_end":216,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73411,"byte_end":73439,"line_start":217,"line_end":217,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73444,"byte_end":73447,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U8> = String::from(\"abc\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73452,"byte_end":73500,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73505,"byte_end":73508,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ s.push('1').unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73513,"byte_end":73538,"line_start":221,"line_end":221,"column_start":5,"column_end":30}},{"value":"/ s.push('2').unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73543,"byte_end":73568,"line_start":222,"line_end":222,"column_start":5,"column_end":30}},{"value":"/ s.push('3').unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73573,"byte_end":73598,"line_start":223,"line_end":223,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73603,"byte_end":73606,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ assert!(\"abc123\" == s.as_str());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73611,"byte_end":73647,"line_start":225,"line_end":225,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73652,"byte_end":73655,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"abc123\", s);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73660,"byte_end":73688,"line_start":227,"line_end":227,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73693,"byte_end":73700,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73705,"byte_end":73714,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74453,"byte_end":74461,"line_start":257,"line_end":257,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<String<N>>::as_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a byte slice of this `String`'s contents.","sig":null,"attributes":[{"value":"/ Returns a byte slice of this `String`'s contents.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":73996,"byte_end":74049,"line_start":239,"line_end":239,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74054,"byte_end":74057,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ The inverse of this method is [`from_utf8`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74062,"byte_end":74110,"line_start":241,"line_end":241,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74115,"byte_end":74118,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`from_utf8`]: #method.from_utf8","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74123,"byte_end":74159,"line_start":243,"line_end":243,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74164,"byte_end":74167,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74172,"byte_end":74186,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74191,"byte_end":74194,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74199,"byte_end":74215,"line_start":247,"line_end":247,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74220,"byte_end":74223,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74228,"byte_end":74235,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74240,"byte_end":74265,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74270,"byte_end":74298,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74303,"byte_end":74306,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let s: String<U8> = String::from(\"hello\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74311,"byte_end":74357,"line_start":253,"line_end":253,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74362,"byte_end":74365,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&[104, 101, 108, 108, 111], s.as_bytes());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74370,"byte_end":74427,"line_start":255,"line_end":255,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74432,"byte_end":74441,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75224,"byte_end":75232,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"truncate","qualname":"<String<N>>::truncate","value":"fn (&mut self, new_len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens this `String` to the specified length.","sig":null,"attributes":[{"value":"/ Shortens this `String` to the specified length.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74509,"byte_end":74560,"line_start":261,"line_end":261,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74565,"byte_end":74568,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than the string's current length, this has no","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74573,"byte_end":74646,"line_start":263,"line_end":263,"column_start":5,"column_end":78}},{"value":"/ effect.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74651,"byte_end":74662,"line_start":264,"line_end":264,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74667,"byte_end":74670,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74675,"byte_end":74740,"line_start":266,"line_end":266,"column_start":5,"column_end":70}},{"value":"/ of the string","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74745,"byte_end":74762,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74767,"byte_end":74770,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74775,"byte_end":74787,"line_start":269,"line_end":269,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74792,"byte_end":74795,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Panics if `new_len` does not lie on a [`char`] boundary.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74800,"byte_end":74860,"line_start":271,"line_end":271,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74865,"byte_end":74868,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ [`char`]: ../../std/primitive.char.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74873,"byte_end":74916,"line_start":273,"line_end":273,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74921,"byte_end":74924,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74929,"byte_end":74943,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74948,"byte_end":74951,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74956,"byte_end":74972,"line_start":277,"line_end":277,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74977,"byte_end":74980,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74985,"byte_end":74992,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":74997,"byte_end":75022,"line_start":280,"line_end":280,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75027,"byte_end":75055,"line_start":281,"line_end":281,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75060,"byte_end":75063,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U8> = String::from(\"hello\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75068,"byte_end":75118,"line_start":283,"line_end":283,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75123,"byte_end":75126,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ s.truncate(2);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75131,"byte_end":75149,"line_start":285,"line_end":285,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75154,"byte_end":75157,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"he\", s);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75162,"byte_end":75186,"line_start":287,"line_end":287,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75191,"byte_end":75198,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75203,"byte_end":75212,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76007,"byte_end":76010,"line_start":319,"line_end":319,"column_start":12,"column_end":15},"name":"pop","qualname":"<String<N>>::pop","value":"fn (&mut self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last character from the string buffer and returns it.","sig":null,"attributes":[{"value":"/ Removes the last character from the string buffer and returns it.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75410,"byte_end":75479,"line_start":297,"line_end":297,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75484,"byte_end":75487,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if this `String` is empty.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75492,"byte_end":75539,"line_start":299,"line_end":299,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75544,"byte_end":75547,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75552,"byte_end":75612,"line_start":301,"line_end":301,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75617,"byte_end":75620,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75625,"byte_end":75639,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75644,"byte_end":75647,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75652,"byte_end":75668,"line_start":305,"line_end":305,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75673,"byte_end":75676,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75681,"byte_end":75688,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75693,"byte_end":75718,"line_start":308,"line_end":308,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75723,"byte_end":75751,"line_start":309,"line_end":309,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75756,"byte_end":75759,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U8> = String::from(\"foo\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75764,"byte_end":75812,"line_start":311,"line_end":311,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75817,"byte_end":75820,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.pop(), Some('o'));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75825,"byte_end":75860,"line_start":313,"line_end":313,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(s.pop(), Some('o'));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75865,"byte_end":75900,"line_start":314,"line_end":314,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(s.pop(), Some('f'));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75905,"byte_end":75940,"line_start":315,"line_end":315,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75945,"byte_end":75948,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.pop(), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75953,"byte_end":75983,"line_start":317,"line_end":317,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":75988,"byte_end":75995,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76666,"byte_end":76674,"line_start":350,"line_end":350,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<String<N>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"\n Returns `true` if this `String` has a length of zero.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76234,"byte_end":76237,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if this `String` has a length of zero.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76242,"byte_end":76299,"line_start":331,"line_end":331,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76304,"byte_end":76307,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Returns `false` otherwise.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76312,"byte_end":76342,"line_start":333,"line_end":333,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76347,"byte_end":76350,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76355,"byte_end":76369,"line_start":335,"line_end":335,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76374,"byte_end":76377,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76382,"byte_end":76398,"line_start":337,"line_end":337,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76403,"byte_end":76406,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76411,"byte_end":76418,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76423,"byte_end":76448,"line_start":340,"line_end":340,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76453,"byte_end":76481,"line_start":341,"line_end":341,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76486,"byte_end":76489,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let mut v: String<U8> = String::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76494,"byte_end":76536,"line_start":343,"line_end":343,"column_start":5,"column_end":47}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76541,"byte_end":76567,"line_start":344,"line_end":344,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76572,"byte_end":76575,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ v.push('a');","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76580,"byte_end":76596,"line_start":346,"line_end":346,"column_start":5,"column_end":21}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76601,"byte_end":76628,"line_start":347,"line_end":347,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76633,"byte_end":76640,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76645,"byte_end":76654,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77265,"byte_end":77270,"line_start":376,"line_end":376,"column_start":12,"column_end":17},"name":"clear","qualname":"<String<N>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Truncates this `String`, removing all contents.","sig":null,"attributes":[{"value":"/ Truncates this `String`, removing all contents.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76727,"byte_end":76778,"line_start":354,"line_end":354,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76783,"byte_end":76786,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ While this means the `String` will have a length of zero, it does not","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76791,"byte_end":76864,"line_start":356,"line_end":356,"column_start":5,"column_end":78}},{"value":"/ touch its capacity.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76869,"byte_end":76892,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76897,"byte_end":76900,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76905,"byte_end":76919,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76924,"byte_end":76927,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76932,"byte_end":76948,"line_start":361,"line_end":361,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76953,"byte_end":76956,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76961,"byte_end":76968,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":76973,"byte_end":76998,"line_start":364,"line_end":364,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77003,"byte_end":77031,"line_start":365,"line_end":365,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77036,"byte_end":77039,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U8> = String::from(\"foo\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77044,"byte_end":77092,"line_start":367,"line_end":367,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77097,"byte_end":77100,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ s.clear();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77105,"byte_end":77119,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77124,"byte_end":77127,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ assert!(s.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77132,"byte_end":77158,"line_start":371,"line_end":371,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(0, s.len());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77163,"byte_end":77190,"line_start":372,"line_end":372,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(8, s.capacity());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77195,"byte_end":77227,"line_start":373,"line_end":373,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77232,"byte_end":77239,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77244,"byte_end":77253,"line_start":375,"line_end":375,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77630,"byte_end":77633,"line_start":394,"line_end":394,"column_start":12,"column_end":15},"name":"len","qualname":"<String<N>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of this `String`, in bytes.","sig":null,"attributes":[{"value":"/ Returns the length of this `String`, in bytes.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77320,"byte_end":77370,"line_start":380,"line_end":380,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77375,"byte_end":77378,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77383,"byte_end":77397,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77402,"byte_end":77405,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77410,"byte_end":77426,"line_start":384,"line_end":384,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77431,"byte_end":77434,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77439,"byte_end":77446,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77451,"byte_end":77476,"line_start":387,"line_end":387,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77481,"byte_end":77509,"line_start":388,"line_end":388,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77514,"byte_end":77517,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let a: String<U8> = String::from(\"foo\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77522,"byte_end":77566,"line_start":390,"line_end":390,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77571,"byte_end":77574,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.len(), 3);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77579,"byte_end":77606,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77611,"byte_end":77618,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":685},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88304,"byte_end":88307,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"Vec","qualname":"::vec::Vec","value":"Vec {  }","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689}],"decl_id":null,"docs":" A fixed capacity [`Vec`](https://doc.rust-lang.org/std/vec/struct.Vec.html)","sig":null,"attributes":[{"value":"/ A fixed capacity [`Vec`](https://doc.rust-lang.org/std/vec/struct.Vec.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":87653,"byte_end":87732,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":87733,"byte_end":87736,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":87737,"byte_end":87751,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":87752,"byte_end":87755,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":87756,"byte_end":87763,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use heapless::Vec;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":87764,"byte_end":87786,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":87787,"byte_end":87815,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":87816,"byte_end":87819,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // A vector with a fixed capacity of 8 elements allocated on the stack","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":87820,"byte_end":87894,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ let mut vec = Vec::<_, U8>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":87895,"byte_end":87933,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/ vec.push(1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":87934,"byte_end":87950,"line_start":21,"line_end":21,"column_start":1,"column_end":17}},{"value":"/ vec.push(2);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":87951,"byte_end":87967,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":87968,"byte_end":87971,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec.len(), 2);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":87972,"byte_end":88001,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(vec[0], 1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88002,"byte_end":88028,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88029,"byte_end":88032,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec.pop(), Some(2));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88033,"byte_end":88068,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec.len(), 1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88069,"byte_end":88098,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88099,"byte_end":88102,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ vec[0] = 7;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88103,"byte_end":88118,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(vec[0], 7);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88119,"byte_end":88145,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88146,"byte_end":88149,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ vec.extend([1, 2, 3].iter().cloned());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88150,"byte_end":88192,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88193,"byte_end":88196,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ for x in &vec {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88197,"byte_end":88216,"line_start":35,"line_end":35,"column_start":1,"column_end":20}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88217,"byte_end":88243,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88244,"byte_end":88249,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(vec, [7, 1, 2, 3]);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88250,"byte_end":88284,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88285,"byte_end":88292,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88809,"byte_end":88812,"line_start":67,"line_end":67,"column_start":22,"column_end":25},"name":"new","qualname":"<Vec<T, N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty vector with a fixed capacity of `N`\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"const-fn\"))","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/const_fn.rs","byte_start":5591,"byte_end":5624,"line_start":23,"line_end":23,"column_start":9,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89063,"byte_end":89071,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Vec<T, N>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of elements the vector can hold\n","sig":null,"attributes":[{"value":"/ Returns the maximum number of elements the vector can hold","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88989,"byte_end":89051,"line_start":76,"line_end":76,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89178,"byte_end":89183,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"clear","qualname":"<Vec<T, N>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the vector, removing all values.\n","sig":null,"attributes":[{"value":"/ Clears the vector, removing all values.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89123,"byte_end":89166,"line_start":81,"line_end":81,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89754,"byte_end":89771,"line_start":102,"line_end":102,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<Vec<T, N>>::extend_from_slice","value":"fn (&mut self, other: &[T]) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Clones and appends all elements in a slice to the `Vec`.","sig":null,"attributes":[{"value":"/ Clones and appends all elements in a slice to the `Vec`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89234,"byte_end":89294,"line_start":86,"line_end":86,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89299,"byte_end":89302,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Iterates over the slice `other`, clones each element, and then appends","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89307,"byte_end":89381,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ it to this `Vec`. The `other` vector is traversed in-order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89386,"byte_end":89449,"line_start":89,"line_end":89,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89454,"byte_end":89457,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89462,"byte_end":89476,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89481,"byte_end":89484,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89489,"byte_end":89496,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ use heapless::Vec;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89501,"byte_end":89523,"line_start":94,"line_end":94,"column_start":5,"column_end":27}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89528,"byte_end":89556,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89561,"byte_end":89564,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let mut vec = Vec::<u8, U8>::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89569,"byte_end":89608,"line_start":97,"line_end":97,"column_start":5,"column_end":44}},{"value":"/ vec.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89613,"byte_end":89638,"line_start":98,"line_end":98,"column_start":5,"column_end":30}},{"value":"/ vec.extend_from_slice(&[2, 3, 4]).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89643,"byte_end":89690,"line_start":99,"line_end":99,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(*vec, [1, 2, 3, 4]);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89695,"byte_end":89730,"line_start":100,"line_end":100,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":89735,"byte_end":89742,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":90247,"byte_end":90250,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"pop","qualname":"<Vec<T, N>>::pop","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last element from a vector and return it, or `None` if it's empty\n","sig":null,"attributes":[{"value":"/ Removes the last element from a vector and return it, or `None` if it's empty","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":90154,"byte_end":90235,"line_start":117,"line_end":117,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":90783,"byte_end":90787,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"push","qualname":"<Vec<T, N>>::push","value":"fn (&mut self, item: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Appends an `item` to the back of the collection","sig":null,"attributes":[{"value":"/ Appends an `item` to the back of the collection","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":90658,"byte_end":90709,"line_start":136,"line_end":136,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":90714,"byte_end":90717,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Returns back the `item` if the vector is full","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":90722,"byte_end":90771,"line_start":138,"line_end":138,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":91471,"byte_end":91479,"line_start":158,"line_end":158,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Vec<T, N>>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens the vector, keeping the first `len` elements and dropping the rest.\n","sig":null,"attributes":[{"value":"/ Shortens the vector, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":91379,"byte_end":91459,"line_start":157,"line_end":157,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":92264,"byte_end":92270,"line_start":178,"line_end":178,"column_start":12,"column_end":18},"name":"resize","qualname":"<Vec<T, N>>::resize","value":"fn (&mut self, new_len: usize, value: T) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Resizes the Vec in-place so that len is equal to new_len.","sig":null,"attributes":[{"value":"/ Resizes the Vec in-place so that len is equal to new_len.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":91901,"byte_end":91962,"line_start":171,"line_end":171,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":91967,"byte_end":91970,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If new_len is greater than len, the Vec is extended by the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":91975,"byte_end":92037,"line_start":173,"line_end":173,"column_start":5,"column_end":67}},{"value":"/ difference, with each additional slot filled with value. If","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":92042,"byte_end":92105,"line_start":174,"line_end":174,"column_start":5,"column_end":68}},{"value":"/ new_len is less than len, the Vec is simply truncated.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":92110,"byte_end":92168,"line_start":175,"line_end":175,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":92173,"byte_end":92176,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ See also [`resize_default`](struct.Vec.html#method.resize_default).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":92181,"byte_end":92252,"line_start":177,"line_end":177,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93040,"byte_end":93054,"line_start":204,"line_end":204,"column_start":12,"column_end":26},"name":"resize_default","qualname":"<Vec<T, N>>::resize_default","value":"fn (&mut self, new_len: usize) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Resizes the `Vec` in-place so that `len` is equal to `new_len`.","sig":null,"attributes":[{"value":"/ Resizes the `Vec` in-place so that `len` is equal to `new_len`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":92660,"byte_end":92727,"line_start":197,"line_end":197,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":92732,"byte_end":92735,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than `len`, the `Vec` is extended by the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":92740,"byte_end":92808,"line_start":199,"line_end":199,"column_start":5,"column_end":73}},{"value":"/ difference, with each additional slot filled with `Default::default()`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":92813,"byte_end":92888,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ If `new_len` is less than `len`, the `Vec` is simply truncated.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":92893,"byte_end":92960,"line_start":201,"line_end":201,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":92965,"byte_end":92968,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ See also [`resize`](struct.Vec.html#method.resize).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":92973,"byte_end":93028,"line_start":203,"line_end":203,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93980,"byte_end":93991,"line_start":239,"line_end":239,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<Vec<T, N>>::swap_remove","value":"fn (&mut self, index: usize) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes an element from the vector and returns it.","sig":null,"attributes":[{"value":"/ Removes an element from the vector and returns it.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93198,"byte_end":93252,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93257,"byte_end":93260,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The removed element is replaced by the last element of the vector.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93265,"byte_end":93335,"line_start":213,"line_end":213,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93340,"byte_end":93343,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This does not preserve ordering, but is O(1).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93348,"byte_end":93397,"line_start":215,"line_end":215,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93402,"byte_end":93405,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93410,"byte_end":93422,"line_start":217,"line_end":217,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93427,"byte_end":93430,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93435,"byte_end":93474,"line_start":219,"line_end":219,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93479,"byte_end":93482,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93487,"byte_end":93501,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93506,"byte_end":93509,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93514,"byte_end":93521,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ use heapless::Vec;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93526,"byte_end":93548,"line_start":224,"line_end":224,"column_start":5,"column_end":27}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93553,"byte_end":93581,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93586,"byte_end":93589,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let mut v: Vec<_, U8> = Vec::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93594,"byte_end":93633,"line_start":227,"line_end":227,"column_start":5,"column_end":44}},{"value":"/ v.push(\"foo\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93638,"byte_end":93665,"line_start":228,"line_end":228,"column_start":5,"column_end":32}},{"value":"/ v.push(\"bar\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93670,"byte_end":93697,"line_start":229,"line_end":229,"column_start":5,"column_end":32}},{"value":"/ v.push(\"baz\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93702,"byte_end":93729,"line_start":230,"line_end":230,"column_start":5,"column_end":32}},{"value":"/ v.push(\"qux\").unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93734,"byte_end":93761,"line_start":231,"line_end":231,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93766,"byte_end":93769,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v.swap_remove(1), \"bar\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93774,"byte_end":93814,"line_start":233,"line_end":233,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(&*v, [\"foo\", \"qux\", \"baz\"]);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93819,"byte_end":93862,"line_start":234,"line_end":234,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93867,"byte_end":93870,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v.swap_remove(0), \"foo\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93875,"byte_end":93915,"line_start":236,"line_end":236,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(&*v, [\"baz\", \"qux\"]);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93920,"byte_end":93956,"line_start":237,"line_end":237,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":93961,"byte_end":93968,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":762},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":96868,"byte_end":96876,"line_start":382,"line_end":382,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::vec::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766}],"decl_id":null,"docs":" An iterator that moves out of an [`Vec`][`Vec`].","sig":null,"attributes":[{"value":"/ An iterator that moves out of an [`Vec`][`Vec`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":96647,"byte_end":96699,"line_start":376,"line_end":376,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":96700,"byte_end":96703,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ This struct is created by calling the `into_iter` method on [`Vec`][`Vec`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":96704,"byte_end":96783,"line_start":378,"line_end":378,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":96784,"byte_end":96787,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ [`Vec`]: (https://doc.rust-lang.org/std/vec/struct.Vec.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":96788,"byte_end":96852,"line_start":380,"line_end":380,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":96853,"byte_end":96856,"line_start":381,"line_end":381,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":822},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_heap","qualname":"::binary_heap","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":847},{"krate":0,"index":864},{"krate":0,"index":870},{"krate":0,"index":878},{"krate":0,"index":882},{"krate":0,"index":887},{"krate":0,"index":892},{"krate":0,"index":897}],"decl_id":null,"docs":" A priority queue implemented with a binary heap.","sig":null,"attributes":[{"value":"! A priority queue implemented with a binary heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":106982,"byte_end":107034,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107035,"byte_end":107038,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Insertion and popping the largest element have `O(log n)` time complexity. Checking the largest","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107039,"byte_end":107138,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"! / smallest element is `O(1)`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107139,"byte_end":107172,"line_start":4,"line_end":4,"column_start":1,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":833},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107610,"byte_end":107613,"line_start":21,"line_end":21,"column_start":10,"column_end":13},"name":"Min","qualname":"::binary_heap::Min","value":"Min::{}","parent":null,"children":[],"decl_id":null,"docs":" Min-heap\n","sig":null,"attributes":[{"value":"/ Min-heap","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107588,"byte_end":107600,"line_start":20,"line_end":20,"column_start":1,"column_end":13}}]},{"kind":"Enum","id":{"krate":0,"index":834},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107640,"byte_end":107643,"line_start":24,"line_end":24,"column_start":10,"column_end":13},"name":"Max","qualname":"::binary_heap::Max","value":"Max::{}","parent":null,"children":[],"decl_id":null,"docs":" Max-heap\n","sig":null,"attributes":[{"value":"/ Max-heap","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107618,"byte_end":107630,"line_start":23,"line_end":23,"column_start":1,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":835},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107760,"byte_end":107764,"line_start":29,"line_end":29,"column_start":18,"column_end":22},"name":"Kind","qualname":"::binary_heap::Kind","value":"Kind","parent":null,"children":[{"krate":0,"index":836}],"decl_id":null,"docs":" The binary heap kind: min-heap or max-heap","sig":null,"attributes":[{"value":"/ The binary heap kind: min-heap or max-heap","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107648,"byte_end":107694,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107695,"byte_end":107698,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Do *not* implement this trait yourself!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107699,"byte_end":107742,"line_start":28,"line_end":28,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107793,"byte_end":107801,"line_start":31,"line_end":31,"column_start":8,"column_end":16},"name":"ordering","qualname":"::binary_heap::Kind::ordering","value":"fn () -> Ordering","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":841},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109566,"byte_end":109576,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"BinaryHeap","qualname":"::binary_heap::BinaryHeap","value":"BinaryHeap {  }","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":846}],"decl_id":null,"docs":" A priority queue implemented with a binary heap.","sig":null,"attributes":[{"value":"/ A priority queue implemented with a binary heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108005,"byte_end":108057,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108058,"byte_end":108061,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This can be either a min-heap or a max-heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108062,"byte_end":108110,"line_start":48,"line_end":48,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108111,"byte_end":108114,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for an item to be modified in such a way that the item's ordering relative","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108115,"byte_end":108213,"line_start":50,"line_end":50,"column_start":1,"column_end":99}},{"value":"/ to any other item, as determined by the `Ord` trait, changes while it is in the heap. This is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108214,"byte_end":108311,"line_start":51,"line_end":51,"column_start":1,"column_end":98}},{"value":"/ normally only possible through `Cell`, `RefCell`, global state, I/O, or unsafe code.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108312,"byte_end":108400,"line_start":52,"line_end":52,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108401,"byte_end":108404,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108405,"byte_end":108412,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108413,"byte_end":108462,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108463,"byte_end":108491,"line_start":56,"line_end":56,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108492,"byte_end":108495,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108496,"byte_end":108557,"line_start":58,"line_end":58,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108558,"byte_end":108561,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We can use peek to look at the next item in the heap. In this case,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108562,"byte_end":108636,"line_start":60,"line_end":60,"column_start":1,"column_end":75}},{"value":"/ // there's no items in there yet so we get None.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108637,"byte_end":108689,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(heap.peek(), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108690,"byte_end":108724,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108725,"byte_end":108728,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // Let's add some scores...","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108729,"byte_end":108760,"line_start":64,"line_end":64,"column_start":1,"column_end":32}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108761,"byte_end":108787,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/ heap.push(5).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108788,"byte_end":108814,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/ heap.push(2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108815,"byte_end":108841,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108842,"byte_end":108845,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // Now peek shows the most important item in the heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108846,"byte_end":108904,"line_start":69,"line_end":69,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(heap.peek(), Some(&5));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108905,"byte_end":108943,"line_start":70,"line_end":70,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108944,"byte_end":108947,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ // We can check the length of a heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108948,"byte_end":108989,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(heap.len(), 3);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":108990,"byte_end":109020,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109021,"byte_end":109024,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ // We can iterate over the items in the heap, although they are returned in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109025,"byte_end":109104,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"/ // a random order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109105,"byte_end":109127,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ for x in &heap {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109128,"byte_end":109148,"line_start":77,"line_end":77,"column_start":1,"column_end":21}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109149,"byte_end":109175,"line_start":78,"line_end":78,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109176,"byte_end":109181,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109182,"byte_end":109185,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // If we instead pop these scores, they should come back in order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109186,"byte_end":109256,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(heap.pop(), Some(5));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109257,"byte_end":109293,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(heap.pop(), Some(2));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109294,"byte_end":109330,"line_start":83,"line_end":83,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(heap.pop(), Some(1));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109331,"byte_end":109367,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(heap.pop(), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109368,"byte_end":109401,"line_start":85,"line_end":85,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109402,"byte_end":109405,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // We can clear the heap of any remaining items.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109406,"byte_end":109458,"line_start":87,"line_end":87,"column_start":1,"column_end":53}},{"value":"/ heap.clear();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109459,"byte_end":109476,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109477,"byte_end":109480,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ // The heap should now be empty.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109481,"byte_end":109517,"line_start":90,"line_end":90,"column_start":1,"column_end":37}},{"value":"/ assert!(heap.is_empty())","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109518,"byte_end":109546,"line_start":91,"line_end":91,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109547,"byte_end":109554,"line_start":92,"line_end":92,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110163,"byte_end":110166,"line_start":121,"line_end":121,"column_start":22,"column_end":25},"name":"new","qualname":"<BinaryHeap<T, N, K>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty BinaryHeap as a $K-heap.","sig":null,"attributes":[{"value":"cfg(not (feature = \"const-fn\"))","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/const_fn.rs","byte_start":5591,"byte_end":5624,"line_start":23,"line_end":23,"column_start":9,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110386,"byte_end":110394,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BinaryHeap<T, N, K>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity of the binary heap.\n","sig":null,"attributes":[{"value":"/ Returns the capacity of the binary heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110330,"byte_end":110374,"line_start":130,"line_end":130,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110876,"byte_end":110881,"line_start":151,"line_end":151,"column_start":12,"column_end":17},"name":"clear","qualname":"<BinaryHeap<T, N, K>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Drops all items from the binary heap.","sig":null,"attributes":[{"value":"/ Drops all items from the binary heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110453,"byte_end":110494,"line_start":135,"line_end":135,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110499,"byte_end":110502,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110507,"byte_end":110514,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110519,"byte_end":110568,"line_start":138,"line_end":138,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110573,"byte_end":110601,"line_start":139,"line_end":139,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110606,"byte_end":110609,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110614,"byte_end":110675,"line_start":141,"line_end":141,"column_start":5,"column_end":66}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110680,"byte_end":110706,"line_start":142,"line_end":142,"column_start":5,"column_end":31}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110711,"byte_end":110737,"line_start":143,"line_end":143,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110742,"byte_end":110745,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ assert!(!heap.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110750,"byte_end":110780,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110785,"byte_end":110788,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ heap.clear();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110793,"byte_end":110810,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110815,"byte_end":110818,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ assert!(heap.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110823,"byte_end":110852,"line_start":149,"line_end":149,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110857,"byte_end":110864,"line_start":150,"line_end":150,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111284,"byte_end":111287,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"len","qualname":"<BinaryHeap<T, N, K>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the binary heap.","sig":null,"attributes":[{"value":"/ Returns the length of the binary heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110932,"byte_end":110974,"line_start":155,"line_end":155,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110979,"byte_end":110982,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110987,"byte_end":110994,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":110999,"byte_end":111048,"line_start":158,"line_end":158,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111053,"byte_end":111081,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111086,"byte_end":111089,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111094,"byte_end":111155,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111160,"byte_end":111186,"line_start":162,"line_end":162,"column_start":5,"column_end":31}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111191,"byte_end":111217,"line_start":163,"line_end":163,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111222,"byte_end":111225,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(heap.len(), 2);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111230,"byte_end":111260,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111265,"byte_end":111272,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111771,"byte_end":111779,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BinaryHeap<T, N, K>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the binary heap is empty.","sig":null,"attributes":[{"value":"/ Checks if the binary heap is empty.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111341,"byte_end":111380,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111385,"byte_end":111388,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111393,"byte_end":111400,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111405,"byte_end":111454,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111459,"byte_end":111487,"line_start":175,"line_end":175,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111492,"byte_end":111495,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111500,"byte_end":111561,"line_start":177,"line_end":177,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111566,"byte_end":111569,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ assert!(heap.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111574,"byte_end":111603,"line_start":179,"line_end":179,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111608,"byte_end":111611,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111616,"byte_end":111642,"line_start":181,"line_end":181,"column_start":5,"column_end":31}},{"value":"/ heap.push(5).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111647,"byte_end":111673,"line_start":182,"line_end":182,"column_start":5,"column_end":31}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111678,"byte_end":111704,"line_start":183,"line_end":183,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111709,"byte_end":111712,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ assert!(!heap.is_empty());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111717,"byte_end":111747,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111752,"byte_end":111759,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112385,"byte_end":112389,"line_start":209,"line_end":209,"column_start":12,"column_end":16},"name":"iter","qualname":"<BinaryHeap<T, N, K>>::iter","value":"fn (&self) -> slice::Iter<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all values in the underlying vector, in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all values in the underlying vector, in arbitrary order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111832,"byte_end":111921,"line_start":191,"line_end":191,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111926,"byte_end":111929,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111934,"byte_end":111941,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":111946,"byte_end":111995,"line_start":194,"line_end":194,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112000,"byte_end":112028,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112033,"byte_end":112036,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112041,"byte_end":112102,"line_start":197,"line_end":197,"column_start":5,"column_end":66}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112107,"byte_end":112133,"line_start":198,"line_end":198,"column_start":5,"column_end":31}},{"value":"/ heap.push(2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112138,"byte_end":112164,"line_start":199,"line_end":199,"column_start":5,"column_end":31}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112169,"byte_end":112195,"line_start":200,"line_end":200,"column_start":5,"column_end":31}},{"value":"/ heap.push(4).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112200,"byte_end":112226,"line_start":201,"line_end":201,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112231,"byte_end":112234,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 2, 3, 4 in arbitrary order","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112239,"byte_end":112281,"line_start":203,"line_end":203,"column_start":5,"column_end":47}},{"value":"/ for x in heap.iter() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112286,"byte_end":112312,"line_start":204,"line_end":204,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112317,"byte_end":112343,"line_start":205,"line_end":205,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112348,"byte_end":112351,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112356,"byte_end":112361,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112366,"byte_end":112373,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112680,"byte_end":112688,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<BinaryHeap<T, N, K>>::iter_mut","value":"fn (&mut self) -> slice::IterMut<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator visiting all values in the underlying vector, in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator visiting all values in the underlying vector, in arbitrary order.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112453,"byte_end":112549,"line_start":213,"line_end":213,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112554,"byte_end":112557,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ **WARNING** Mutating the items in the binary heap can leave the heap in an inconsistent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112562,"byte_end":112653,"line_start":215,"line_end":215,"column_start":5,"column_end":96}},{"value":"/ state.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112658,"byte_end":112668,"line_start":216,"line_end":216,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113274,"byte_end":113278,"line_start":236,"line_end":236,"column_start":12,"column_end":16},"name":"peek","qualname":"<BinaryHeap<T, N, K>>::peek","value":"fn (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the *top* (greatest if max-heap, smallest if min-heap) item in the binary heap, or\n None if it is empty.","sig":null,"attributes":[{"value":"/ Returns the *top* (greatest if max-heap, smallest if min-heap) item in the binary heap, or","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112763,"byte_end":112857,"line_start":221,"line_end":221,"column_start":5,"column_end":99}},{"value":"/ None if it is empty.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112862,"byte_end":112886,"line_start":222,"line_end":222,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112891,"byte_end":112894,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112899,"byte_end":112906,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112911,"byte_end":112960,"line_start":225,"line_end":225,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112965,"byte_end":112993,"line_start":226,"line_end":226,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":112998,"byte_end":113001,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113006,"byte_end":113067,"line_start":228,"line_end":228,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(heap.peek(), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113072,"byte_end":113106,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113111,"byte_end":113114,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113119,"byte_end":113145,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ heap.push(5).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113150,"byte_end":113176,"line_start":232,"line_end":232,"column_start":5,"column_end":31}},{"value":"/ heap.push(2).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113181,"byte_end":113207,"line_start":233,"line_end":233,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(heap.peek(), Some(&5));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113212,"byte_end":113250,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113255,"byte_end":113262,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113873,"byte_end":113876,"line_start":255,"line_end":255,"column_start":12,"column_end":15},"name":"pop","qualname":"<BinaryHeap<T, N, K>>::pop","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the *top* (greatest if max-heap, smallest if min-heap) item from the binary heap and\n returns it, or None if it is empty.","sig":null,"attributes":[{"value":"/ Removes the *top* (greatest if max-heap, smallest if min-heap) item from the binary heap and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113338,"byte_end":113434,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ returns it, or None if it is empty.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113439,"byte_end":113478,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113483,"byte_end":113486,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113491,"byte_end":113498,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113503,"byte_end":113552,"line_start":244,"line_end":244,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113557,"byte_end":113585,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113590,"byte_end":113593,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113598,"byte_end":113659,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113664,"byte_end":113690,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113695,"byte_end":113721,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113726,"byte_end":113729,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(heap.pop(), Some(3));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113734,"byte_end":113770,"line_start":251,"line_end":251,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(heap.pop(), Some(1));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113775,"byte_end":113811,"line_start":252,"line_end":252,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(heap.pop(), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113816,"byte_end":113849,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":113854,"byte_end":113861,"line_start":254,"line_end":254,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114218,"byte_end":114231,"line_start":265,"line_end":265,"column_start":19,"column_end":32},"name":"pop_unchecked","qualname":"<BinaryHeap<T, N, K>>::pop_unchecked","value":"fn (&mut self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes the *top* (greatest if max-heap, smallest if min-heap) item from the binary heap and\n returns it, without checking if the binary heap is empty.\n","sig":null,"attributes":[{"value":"/ Removes the *top* (greatest if max-heap, smallest if min-heap) item from the binary heap and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114037,"byte_end":114133,"line_start":263,"line_end":263,"column_start":5,"column_end":101}},{"value":"/ returns it, without checking if the binary heap is empty.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114138,"byte_end":114199,"line_start":264,"line_end":264,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114883,"byte_end":114887,"line_start":289,"line_end":289,"column_start":12,"column_end":16},"name":"push","qualname":"<BinaryHeap<T, N, K>>::push","value":"fn (&mut self, item: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Pushes an item onto the binary heap.","sig":null,"attributes":[{"value":"/ Pushes an item onto the binary heap.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114459,"byte_end":114499,"line_start":275,"line_end":275,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114504,"byte_end":114507,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114512,"byte_end":114519,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114524,"byte_end":114573,"line_start":278,"line_end":278,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114578,"byte_end":114606,"line_start":279,"line_end":279,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114611,"byte_end":114614,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114619,"byte_end":114680,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114685,"byte_end":114711,"line_start":282,"line_end":282,"column_start":5,"column_end":31}},{"value":"/ heap.push(5).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114716,"byte_end":114742,"line_start":283,"line_end":283,"column_start":5,"column_end":31}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114747,"byte_end":114773,"line_start":284,"line_end":284,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114778,"byte_end":114781,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(heap.len(), 3);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114786,"byte_end":114816,"line_start":286,"line_end":286,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(heap.peek(), Some(&5));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114821,"byte_end":114859,"line_start":287,"line_end":287,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":114864,"byte_end":114871,"line_start":288,"line_end":288,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":115167,"byte_end":115181,"line_start":299,"line_end":299,"column_start":19,"column_end":33},"name":"push_unchecked","qualname":"<BinaryHeap<T, N, K>>::push_unchecked","value":"fn (&mut self, item: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pushes an item onto the binary heap without first checking if it's full.\n","sig":null,"attributes":[{"value":"/ Pushes an item onto the binary heap without first checking if it's full.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":115072,"byte_end":115148,"line_start":298,"line_end":298,"column_start":5,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":905},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spsc","qualname":"::spsc","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":970},{"krate":0,"index":975},{"krate":0,"index":982},{"krate":0,"index":990},{"krate":0,"index":1000},{"krate":0,"index":1006},{"krate":0,"index":1012},{"krate":0,"index":1019},{"krate":0,"index":1026},{"krate":0,"index":1035},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1863},{"krate":0,"index":1871},{"krate":0,"index":1051},{"krate":0,"index":1061},{"krate":0,"index":1066},{"krate":0,"index":1075},{"krate":0,"index":1082},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1878},{"krate":0,"index":1886}],"decl_id":null,"docs":" Single producer single consumer queue\n","sig":null,"attributes":[{"value":"! Single producer single consumer queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":121864,"byte_end":121905,"line_start":1,"line_end":1,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/split.rs","byte_start":143447,"byte_end":143452,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"split","qualname":"<Queue<T, N, U, C>>::split","value":"fn <'rb> (&'rb mut self) -> (Producer<'rb, T, N, U, C>, Consumer<'rb, T, N, U, C>)","parent":null,"children":[],"decl_id":null,"docs":" Splits a statically allocated queue into producer and consumer end points\n","sig":null,"attributes":[{"value":"/ Splits a statically allocated queue into producer and consumer end points","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/split.rs","byte_start":143358,"byte_end":143435,"line_start":15,"line_end":15,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":938},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/split.rs","byte_start":143978,"byte_end":143986,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"Consumer","qualname":"::spsc::split::Consumer","value":"Consumer {  }","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945}],"decl_id":null,"docs":" A queue \"consumer\"; it can dequeue items from the queue\n","sig":null,"attributes":[{"value":"/ A queue \"consumer\"; it can dequeue items from the queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/split.rs","byte_start":143836,"byte_end":143895,"line_start":30,"line_end":30,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":952},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/split.rs","byte_start":144462,"byte_end":144470,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"Producer","qualname":"::spsc::split::Producer","value":"Producer {  }","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959}],"decl_id":null,"docs":" A queue \"producer\"; it can enqueue items into the queue\n","sig":null,"attributes":[{"value":"/ A queue \"producer\"; it can enqueue items into the queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/split.rs","byte_start":144320,"byte_end":144379,"line_start":51,"line_end":51,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":966},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":122243,"byte_end":122252,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"MultiCore","qualname":"::spsc::MultiCore","value":"","parent":null,"children":[],"decl_id":null,"docs":" Multi core synchronization - a memory barrier is used for synchronization\n","sig":null,"attributes":[{"value":"/ Multi core synchronization - a memory barrier is used for synchronization","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":122154,"byte_end":122231,"line_start":16,"line_end":16,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":968},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":122357,"byte_end":122367,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"SingleCore","qualname":"::spsc::SingleCore","value":"","parent":null,"children":[],"decl_id":null,"docs":" Single core synchronization - no memory barrier synchronization, just a compiler fence\n","sig":null,"attributes":[{"value":"/ Single core synchronization - no memory barrier synchronization, just a compiler fence","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":122255,"byte_end":122345,"line_start":19,"line_end":19,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":982},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":126106,"byte_end":126111,"line_start":147,"line_end":147,"column_start":12,"column_end":17},"name":"Queue","qualname":"::spsc::Queue","value":"Queue {  }","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989}],"decl_id":null,"docs":" A statically allocated single producer single consumer queue with a capacity of `N` elements","sig":null,"attributes":[{"value":"/ A statically allocated single producer single consumer queue with a capacity of `N` elements","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":123238,"byte_end":123334,"line_start":64,"line_end":64,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":123335,"byte_end":123338,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ *IMPORTANT*: To get better performance use a capacity that is a power of 2 (e.g. `U16`, `U32`,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":123339,"byte_end":123437,"line_start":66,"line_end":66,"column_start":1,"column_end":99}},{"value":"/ etc.).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":123438,"byte_end":123448,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":123449,"byte_end":123452,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ By default `spsc::Queue` will use `usize` integers to hold the indices to its head and tail. For","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":123453,"byte_end":123553,"line_start":69,"line_end":69,"column_start":1,"column_end":101}},{"value":"/ small queues `usize` indices may be overkill. However, `spsc::Queue`'s index type is generic and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":123554,"byte_end":123654,"line_start":70,"line_end":70,"column_start":1,"column_end":101}},{"value":"/ can be changed to `u8` or `u16` to reduce its footprint. The easiest to construct a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":123655,"byte_end":123742,"line_start":71,"line_end":71,"column_start":1,"column_end":88}},{"value":"/ `spsc::Queue` with a smaller index type is to use the [`u8`] and [`u16`] constructors.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":123743,"byte_end":123833,"line_start":72,"line_end":72,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":123834,"byte_end":123837,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`u8`]: struct.Queue.html#method.u8","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":123838,"byte_end":123877,"line_start":74,"line_end":74,"column_start":1,"column_end":40}},{"value":"/ [`u16`]: struct.Queue.html#method.u16","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":123878,"byte_end":123919,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":123920,"byte_end":123923,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ *IMPORTANT*: `spsc::Queue<_, _, u8>` has a maximum capacity of 255 elements; `spsc::Queue<_, _,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":123924,"byte_end":124023,"line_start":77,"line_end":77,"column_start":1,"column_end":100}},{"value":"/ u16>` has a maximum capacity of 65535 elements.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124024,"byte_end":124075,"line_start":78,"line_end":78,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124076,"byte_end":124079,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ `spsc::Queue` also comes in a single core variant. This variant can be created using the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124080,"byte_end":124172,"line_start":80,"line_end":80,"column_start":1,"column_end":93}},{"value":"/ following constructors: `u8_sc`, `u16_sc`, `usize_sc` and `new_sc`. This variant is `unsafe` to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124173,"byte_end":124272,"line_start":81,"line_end":81,"column_start":1,"column_end":100}},{"value":"/ create because the programmer must make sure that the queue's consumer and producer endpoints","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124273,"byte_end":124370,"line_start":82,"line_end":82,"column_start":1,"column_end":98}},{"value":"/ (if split) are kept on a single core for their entire lifetime.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124371,"byte_end":124438,"line_start":83,"line_end":83,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124439,"byte_end":124442,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124443,"byte_end":124457,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124458,"byte_end":124461,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124462,"byte_end":124469,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ use heapless::spsc::Queue;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124470,"byte_end":124500,"line_start":88,"line_end":88,"column_start":1,"column_end":31}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124501,"byte_end":124529,"line_start":89,"line_end":89,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124530,"byte_end":124533,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ let mut rb: Queue<u8, U4> = Queue::new();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124534,"byte_end":124579,"line_start":91,"line_end":91,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124580,"byte_end":124583,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ assert!(rb.enqueue(0).is_ok());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124584,"byte_end":124619,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/ assert!(rb.enqueue(1).is_ok());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124620,"byte_end":124655,"line_start":94,"line_end":94,"column_start":1,"column_end":36}},{"value":"/ assert!(rb.enqueue(2).is_ok());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124656,"byte_end":124691,"line_start":95,"line_end":95,"column_start":1,"column_end":36}},{"value":"/ assert!(rb.enqueue(3).is_ok());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124692,"byte_end":124727,"line_start":96,"line_end":96,"column_start":1,"column_end":36}},{"value":"/ assert!(rb.enqueue(4).is_err()); // full","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124728,"byte_end":124772,"line_start":97,"line_end":97,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124773,"byte_end":124776,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(rb.dequeue(), Some(0));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124777,"byte_end":124815,"line_start":99,"line_end":99,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124816,"byte_end":124823,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124824,"byte_end":124827,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ### Single producer single consumer mode","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124828,"byte_end":124872,"line_start":102,"line_end":102,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124873,"byte_end":124876,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124877,"byte_end":124884,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ use heapless::spsc::Queue;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124885,"byte_end":124915,"line_start":105,"line_end":105,"column_start":1,"column_end":31}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124916,"byte_end":124944,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124945,"byte_end":124948,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // static mut RB: Queue<Event, U4> = Queue::new(); // requires feature `const-fn`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":124949,"byte_end":125034,"line_start":108,"line_end":108,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125035,"byte_end":125038,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ static mut RB: Option<Queue<Event, U4>>  = None;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125039,"byte_end":125091,"line_start":110,"line_end":110,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125092,"byte_end":125095,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ enum Event { A, B }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125096,"byte_end":125119,"line_start":112,"line_end":112,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125120,"byte_end":125123,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125124,"byte_end":125139,"line_start":114,"line_end":114,"column_start":1,"column_end":16}},{"value":"/     unsafe { RB = Some(Queue::new()) };","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125140,"byte_end":125183,"line_start":115,"line_end":115,"column_start":1,"column_end":44}},{"value":"/     // NOTE(unsafe) beware of aliasing the `consumer` end point","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125184,"byte_end":125251,"line_start":116,"line_end":116,"column_start":1,"column_end":68}},{"value":"/     let mut consumer = unsafe { RB.as_mut().unwrap().split().1 };","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125252,"byte_end":125321,"line_start":117,"line_end":117,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125322,"byte_end":125325,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125326,"byte_end":125340,"line_start":119,"line_end":119,"column_start":1,"column_end":15}},{"value":"/         // `dequeue` is a lockless operation","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125341,"byte_end":125389,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/         match consumer.dequeue() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125390,"byte_end":125428,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/             Some(Event::A) => { /* .. */ },","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125429,"byte_end":125476,"line_start":122,"line_end":122,"column_start":1,"column_end":48}},{"value":"/             Some(Event::B) => { /* .. */ },","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125477,"byte_end":125524,"line_start":123,"line_end":123,"column_start":1,"column_end":48}},{"value":"/             None => { /* sleep */},","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125525,"byte_end":125564,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/         }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125565,"byte_end":125578,"line_start":125,"line_end":125,"column_start":1,"column_end":14}},{"value":"/ #       break","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125579,"byte_end":125596,"line_start":126,"line_end":126,"column_start":1,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125597,"byte_end":125606,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125607,"byte_end":125612,"line_start":128,"line_end":128,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125613,"byte_end":125616,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ // this is a different execution context that can preempt `main`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125617,"byte_end":125685,"line_start":130,"line_end":130,"column_start":1,"column_end":69}},{"value":"/ fn interrupt_handler() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125686,"byte_end":125714,"line_start":131,"line_end":131,"column_start":1,"column_end":29}},{"value":"/     // NOTE(unsafe) beware of aliasing the `producer` end point","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125715,"byte_end":125782,"line_start":132,"line_end":132,"column_start":1,"column_end":68}},{"value":"/     let mut producer = unsafe { RB.as_mut().unwrap().split().0 };","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125783,"byte_end":125852,"line_start":133,"line_end":133,"column_start":1,"column_end":70}},{"value":"/ #   let condition = true;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125853,"byte_end":125882,"line_start":134,"line_end":134,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125883,"byte_end":125886,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/     // ..","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125887,"byte_end":125900,"line_start":136,"line_end":136,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125901,"byte_end":125904,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/     if condition {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125905,"byte_end":125927,"line_start":138,"line_end":138,"column_start":1,"column_end":23}},{"value":"/         producer.enqueue(Event::A).ok().unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125928,"byte_end":125981,"line_start":139,"line_end":139,"column_start":1,"column_end":54}},{"value":"/     } else {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125982,"byte_end":125998,"line_start":140,"line_end":140,"column_start":1,"column_end":17}},{"value":"/         producer.enqueue(Event::B).ok().unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":125999,"byte_end":126052,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":126053,"byte_end":126062,"line_start":142,"line_end":142,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":126063,"byte_end":126066,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/     // ..","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":126067,"byte_end":126080,"line_start":144,"line_end":144,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":126081,"byte_end":126086,"line_start":145,"line_end":145,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":126087,"byte_end":126094,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":126585,"byte_end":126593,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Queue<T, N, U, C>>::capacity","value":"fn (&self) -> U","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of elements the queue can hold\n","sig":null,"attributes":[{"value":"/ Returns the maximum number of elements the queue can hold","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":126512,"byte_end":126573,"line_start":168,"line_end":168,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":126715,"byte_end":126723,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Queue<T, N, U, C>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue has a length of 0\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue has a length of 0","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":126654,"byte_end":126703,"line_start":173,"line_end":173,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":126846,"byte_end":126850,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"iter","qualname":"<Queue<T, N, U, C>>::iter","value":"fn (&self) -> Iter<T, N, U, C>","parent":null,"children":[],"decl_id":null,"docs":" Iterates from the front of the queue to the back\n","sig":null,"attributes":[{"value":"/ Iterates from the front of the queue to the back","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":126782,"byte_end":126834,"line_start":178,"line_end":178,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":127064,"byte_end":127072,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Queue<T, N, U, C>>::iter_mut","value":"fn (&mut self) -> IterMut<T, N, U, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each value.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each value.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":126995,"byte_end":127052,"line_start":187,"line_end":187,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":134000,"byte_end":134003,"line_start":430,"line_end":430,"column_start":22,"column_end":25},"name":"new","qualname":"<Queue<T, N, usize, MultiCore>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alias for [`spsc::Queue::usize`](struct.Queue.html#method.usize)\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"const-fn\"))","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/const_fn.rs","byte_start":5591,"byte_end":5624,"line_start":23,"line_end":23,"column_start":9,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":134262,"byte_end":134268,"line_start":442,"line_end":442,"column_start":29,"column_end":35},"name":"new_sc","qualname":"<Queue<T, N, usize, SingleCore>>::new_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alias for [`spsc::Queue::usize_sc`](struct.Queue.html#method.usize_sc)\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"const-fn\"))","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/const_fn.rs","byte_start":5352,"byte_end":5385,"line_start":13,"line_end":13,"column_start":9,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1876},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":134449,"byte_end":134454,"line_start":452,"line_end":452,"column_start":8,"column_end":13},"name":"usize","qualname":"<Queue<T, N, usize, MultiCore>>::usize","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue with a fixed capacity of `N`\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"const-fn\"))","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/const_fn.rs","byte_start":5591,"byte_end":5624,"line_start":23,"line_end":23,"column_start":9,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":134456,"byte_end":134464,"line_start":452,"line_end":452,"column_start":15,"column_end":23},"name":"usize_sc","qualname":"<Queue<T, N, usize, SingleCore>>::usize_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue with a fixed capacity of `N` (single core variant)\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"const-fn\"))","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/const_fn.rs","byte_start":5352,"byte_end":5385,"line_start":13,"line_end":13,"column_start":9,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1066},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":135126,"byte_end":135130,"line_start":484,"line_end":484,"column_start":12,"column_end":16},"name":"Iter","qualname":"::spsc::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074}],"decl_id":null,"docs":" An iterator over the items of a queue\n","sig":null,"attributes":[{"value":"/ An iterator over the items of a queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":135073,"byte_end":135114,"line_start":483,"line_end":483,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1082},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":135672,"byte_end":135679,"line_start":513,"line_end":513,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::spsc::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090}],"decl_id":null,"docs":" A mutable iterator over the items of a queue\n","sig":null,"attributes":[{"value":"/ A mutable iterator over the items of a queue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":135612,"byte_end":135660,"line_start":512,"line_end":512,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":1117},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/sealed.rs","byte_start":152567,"byte_end":152572,"line_start":7,"line_end":7,"column_start":18,"column_end":23},"name":"XCore","qualname":"::sealed::XCore","value":"XCore","parent":null,"children":[{"krate":0,"index":1118}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/sealed.rs","byte_start":152582,"byte_end":152595,"line_start":8,"line_end":8,"column_start":8,"column_end":21},"name":"is_multi_core","qualname":"::sealed::XCore::is_multi_core","value":"fn () -> bool","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1123},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/sealed.rs","byte_start":152807,"byte_end":152810,"line_start":23,"line_end":23,"column_start":18,"column_end":21},"name":"Uxx","qualname":"::sealed::Uxx","value":"Uxx: Into<usize> + Send","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1128}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/sealed.rs","byte_start":152859,"byte_end":152867,"line_start":25,"line_end":25,"column_start":8,"column_end":16},"name":"truncate","qualname":"::sealed::Uxx::truncate","value":"fn (x: usize) -> Self","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/sealed.rs","byte_start":152921,"byte_end":152933,"line_start":28,"line_end":28,"column_start":15,"column_end":27},"name":"load_acquire","qualname":"::sealed::Uxx::load_acquire","value":"fn <C> (x: *const Self) -> Self","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/sealed.rs","byte_start":153016,"byte_end":153028,"line_start":33,"line_end":33,"column_start":8,"column_end":20},"name":"load_relaxed","qualname":"::sealed::Uxx::load_relaxed","value":"fn (x: *const Self) -> Self","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/sealed.rs","byte_start":153088,"byte_end":153101,"line_start":36,"line_end":36,"column_start":15,"column_end":28},"name":"store_release","qualname":"::sealed::Uxx::store_release","value":"fn <C> (x: *const Self, val: Self) -> ()","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":9001,"byte_end":9010,"line_start":20,"line_end":20,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":9780,"byte_end":9783,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":10844,"byte_end":10851,"line_start":96,"line_end":96,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17048,"byte_end":17055,"line_start":272,"line_end":272,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":19125,"byte_end":19133,"line_start":337,"line_end":337,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":19657,"byte_end":19665,"line_start":355,"line_end":355,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":30254,"byte_end":30262,"line_start":717,"line_end":717,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":30584,"byte_end":30592,"line_start":731,"line_end":731,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":30886,"byte_end":30894,"line_start":743,"line_end":743,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":31216,"byte_end":31224,"line_start":758,"line_end":758,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":31525,"byte_end":31533,"line_start":770,"line_end":770,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":31867,"byte_end":31875,"line_start":784,"line_end":784,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":32343,"byte_end":32351,"line_start":801,"line_end":801,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":32523,"byte_end":32531,"line_start":812,"line_end":812,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":32893,"byte_end":32901,"line_start":828,"line_end":828,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":33274,"byte_end":33282,"line_start":843,"line_end":843,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":34368,"byte_end":34372,"line_start":895,"line_end":895,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":34595,"byte_end":34599,"line_start":907,"line_end":907,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":34875,"byte_end":34882,"line_start":927,"line_end":927,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38202,"byte_end":38210,"line_start":55,"line_end":55,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38515,"byte_end":38523,"line_start":69,"line_end":69,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":300},{"krate":0,"index":305},{"krate":0,"index":309},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":323},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49878,"byte_end":49886,"line_start":457,"line_end":457,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":50134,"byte_end":50142,"line_start":470,"line_end":470,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":50419,"byte_end":50427,"line_start":481,"line_end":481,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":50712,"byte_end":50720,"line_start":494,"line_end":494,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":51078,"byte_end":51086,"line_start":507,"line_end":507,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":51404,"byte_end":51412,"line_start":521,"line_end":521,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":51732,"byte_end":51740,"line_start":535,"line_end":535,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":52447,"byte_end":52451,"line_start":572,"line_end":572,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":52621,"byte_end":52625,"line_start":583,"line_end":583,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":53002,"byte_end":53012,"line_start":604,"line_end":604,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":53637,"byte_end":53649,"line_start":632,"line_end":632,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":54454,"byte_end":54463,"line_start":20,"line_end":20,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":453},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":471},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63486,"byte_end":63495,"line_start":368,"line_end":368,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63764,"byte_end":63773,"line_start":382,"line_end":382,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":64016,"byte_end":64025,"line_start":394,"line_end":394,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":64162,"byte_end":64171,"line_start":404,"line_end":404,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":64384,"byte_end":64393,"line_start":417,"line_end":417,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":64641,"byte_end":64650,"line_start":428,"line_end":428,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":65050,"byte_end":65058,"line_start":451,"line_end":451,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":65252,"byte_end":65261,"line_start":462,"line_end":462,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":65881,"byte_end":65885,"line_start":498,"line_end":498,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":66095,"byte_end":66099,"line_start":510,"line_end":510,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":66369,"byte_end":66376,"line_start":530,"line_end":530,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":66626,"byte_end":66635,"line_start":542,"line_end":542,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":66987,"byte_end":66996,"line_start":557,"line_end":557,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":68405,"byte_end":68411,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77704,"byte_end":77710,"line_start":399,"line_end":399,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77832,"byte_end":77838,"line_start":408,"line_end":408,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":78025,"byte_end":78031,"line_start":419,"line_end":419,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":78247,"byte_end":78253,"line_start":432,"line_end":432,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":78411,"byte_end":78417,"line_start":443,"line_end":443,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":78615,"byte_end":78621,"line_start":453,"line_end":453,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":78819,"byte_end":78825,"line_start":463,"line_end":463,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":78993,"byte_end":78999,"line_start":473,"line_end":473,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":79167,"byte_end":79173,"line_start":483,"line_end":483,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":79473,"byte_end":79479,"line_start":496,"line_end":496,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":79626,"byte_end":79632,"line_start":507,"line_end":507,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":79768,"byte_end":79774,"line_start":516,"line_end":516,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":79901,"byte_end":79907,"line_start":526,"line_end":526,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":80061,"byte_end":80067,"line_start":536,"line_end":536,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":81234,"byte_end":81240,"line_start":585,"line_end":585,"column_start":16,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88430,"byte_end":88433,"line_start":48,"line_end":48,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88637,"byte_end":88640,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":94564,"byte_end":94567,"line_start":260,"line_end":260,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":94687,"byte_end":94690,"line_start":269,"line_end":269,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":94891,"byte_end":94894,"line_start":280,"line_end":280,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":95044,"byte_end":95047,"line_start":289,"line_end":289,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":95294,"byte_end":95297,"line_start":303,"line_end":303,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":95527,"byte_end":95530,"line_start":316,"line_end":316,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":95724,"byte_end":95727,"line_start":326,"line_end":326,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":96365,"byte_end":96368,"line_start":360,"line_end":360,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":96978,"byte_end":96986,"line_start":390,"line_end":390,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":97396,"byte_end":97404,"line_start":407,"line_end":407,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":97604,"byte_end":97612,"line_start":420,"line_end":420,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":97952,"byte_end":97955,"line_start":434,"line_end":434,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":98186,"byte_end":98189,"line_start":446,"line_end":446,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":99055,"byte_end":99058,"line_start":489,"line_end":489,"column_start":19,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":99136,"byte_end":99139,"line_start":496,"line_end":496,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":99491,"byte_end":99494,"line_start":510,"line_end":510,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":99870,"byte_end":99873,"line_start":524,"line_end":524,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":100011,"byte_end":100014,"line_start":534,"line_end":534,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":100154,"byte_end":100157,"line_start":544,"line_end":544,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":100288,"byte_end":100291,"line_start":554,"line_end":554,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107841,"byte_end":107844,"line_start":34,"line_end":34,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107932,"byte_end":107935,"line_start":40,"line_end":40,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109716,"byte_end":109726,"line_start":103,"line_end":103,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1835},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":116923,"byte_end":116927,"line_start":354,"line_end":354,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":118368,"byte_end":118372,"line_start":404,"line_end":404,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":118627,"byte_end":118637,"line_start":415,"line_end":415,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":118783,"byte_end":118793,"line_start":426,"line_end":426,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":119028,"byte_end":119038,"line_start":440,"line_end":440,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/split.rs","byte_start":143263,"byte_end":143268,"line_start":9,"line_end":9,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/split.rs","byte_start":144206,"byte_end":144214,"line_start":42,"line_end":42,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/split.rs","byte_start":144687,"byte_end":144695,"line_start":63,"line_end":63,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":122635,"byte_end":122641,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":126417,"byte_end":126422,"line_start":162,"line_end":162,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":127448,"byte_end":127453,"line_start":205,"line_end":205,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":127719,"byte_end":127724,"line_start":220,"line_end":220,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":127982,"byte_end":127987,"line_start":232,"line_end":232,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":128307,"byte_end":128312,"line_start":247,"line_end":247,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":133825,"byte_end":133830,"line_start":424,"line_end":424,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1855}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":134073,"byte_end":134078,"line_start":436,"line_end":436,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":134533,"byte_end":134538,"line_start":454,"line_end":454,"column_start":66,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":134967,"byte_end":134972,"line_start":473,"line_end":473,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":135345,"byte_end":135349,"line_start":496,"line_end":496,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/__core.rs","byte_start":151264,"byte_end":151275,"line_start":21,"line_end":21,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/sealed.rs","byte_start":152632,"byte_end":152642,"line_start":11,"line_end":11,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/sealed.rs","byte_start":152723,"byte_end":152732,"line_start":17,"line_end":17,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4811,"byte_end":4822,"line_start":129,"line_end":129,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":822}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/lib.rs","byte_start":4866,"byte_end":4870,"line_start":132,"line_end":132,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":905}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":9001,"byte_end":9010,"line_start":20,"line_end":20,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":9780,"byte_end":9783,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":10844,"byte_end":10851,"line_start":96,"line_end":96,"column_start":15,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":63},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":17048,"byte_end":17055,"line_start":272,"line_end":272,"column_start":25,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":63},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":19125,"byte_end":19133,"line_start":337,"line_end":337,"column_start":18,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":19657,"byte_end":19665,"line_start":355,"line_end":355,"column_start":18,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":30254,"byte_end":30262,"line_start":717,"line_end":717,"column_start":47,"column_end":55},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":2099}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":30584,"byte_end":30592,"line_start":731,"line_end":731,"column_start":50,"column_end":58},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":2103}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":30886,"byte_end":30894,"line_start":743,"line_end":743,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":31216,"byte_end":31224,"line_start":758,"line_end":758,"column_start":33,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":5884}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":31525,"byte_end":31533,"line_start":770,"line_end":770,"column_start":30,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":31867,"byte_end":31875,"line_start":784,"line_end":784,"column_start":64,"column_end":72},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":32343,"byte_end":32351,"line_start":801,"line_end":801,"column_start":25,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":32523,"byte_end":32531,"line_start":812,"line_end":812,"column_start":37,"column_end":45},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":4640}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":32893,"byte_end":32901,"line_start":828,"line_end":828,"column_start":49,"column_end":57},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":4640}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":33274,"byte_end":33282,"line_start":843,"line_end":843,"column_start":43,"column_end":51},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":4627}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":34368,"byte_end":34372,"line_start":895,"line_end":895,"column_start":29,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":228},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":34595,"byte_end":34599,"line_start":907,"line_end":907,"column_start":26,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":228},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexmap.rs","byte_start":34875,"byte_end":34882,"line_start":927,"line_end":927,"column_start":29,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38202,"byte_end":38210,"line_start":55,"line_end":55,"column_start":15,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":38515,"byte_end":38523,"line_start":69,"line_end":69,"column_start":15,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":49878,"byte_end":49886,"line_start":457,"line_end":457,"column_start":25,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":50134,"byte_end":50142,"line_start":470,"line_end":470,"column_start":30,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":5884}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":50419,"byte_end":50427,"line_start":481,"line_end":481,"column_start":27,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":50712,"byte_end":50720,"line_start":494,"line_end":494,"column_start":60,"column_end":68},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":51078,"byte_end":51086,"line_start":507,"line_end":507,"column_start":29,"column_end":37},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":4640}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":51404,"byte_end":51412,"line_start":521,"line_end":521,"column_start":37,"column_end":45},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":4640}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":51732,"byte_end":51740,"line_start":535,"line_end":535,"column_start":35,"column_end":43},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":4627}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":52447,"byte_end":52451,"line_start":572,"line_end":572,"column_start":26,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":385},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":52621,"byte_end":52625,"line_start":583,"line_end":583,"column_start":23,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":385},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":53002,"byte_end":53012,"line_start":604,"line_end":604,"column_start":32,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":399},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/indexset.rs","byte_start":53637,"byte_end":53649,"line_start":632,"line_end":632,"column_start":32,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":54454,"byte_end":54463,"line_start":20,"line_end":20,"column_start":15,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63486,"byte_end":63495,"line_start":368,"line_end":368,"column_start":44,"column_end":53},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":2099}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":63764,"byte_end":63773,"line_start":382,"line_end":382,"column_start":47,"column_end":56},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":2103}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":64016,"byte_end":64025,"line_start":394,"line_end":394,"column_start":27,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":64162,"byte_end":64171,"line_start":404,"line_end":404,"column_start":25,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":64384,"byte_end":64393,"line_start":417,"line_end":417,"column_start":30,"column_end":39},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":5884}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":64641,"byte_end":64650,"line_start":428,"line_end":428,"column_start":40,"column_end":49},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":4627}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":65050,"byte_end":65058,"line_start":451,"line_end":451,"column_start":28,"column_end":36},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":513},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":65252,"byte_end":65261,"line_start":462,"line_end":462,"column_start":32,"column_end":41},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":4631}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":65881,"byte_end":65885,"line_start":498,"line_end":498,"column_start":29,"column_end":33},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":539},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":66095,"byte_end":66099,"line_start":510,"line_end":510,"column_start":26,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":539},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":66369,"byte_end":66376,"line_start":530,"line_end":530,"column_start":29,"column_end":36},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":556},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":66626,"byte_end":66635,"line_start":542,"line_end":542,"column_start":54,"column_end":63},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/linear_map.rs","byte_start":66987,"byte_end":66996,"line_start":557,"line_end":557,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":68405,"byte_end":68411,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77704,"byte_end":77710,"line_start":399,"line_end":399,"column_start":21,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":77832,"byte_end":77838,"line_start":408,"line_end":408,"column_start":31,"column_end":37},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":78025,"byte_end":78031,"line_start":419,"line_end":419,"column_start":26,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":7336}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":78247,"byte_end":78253,"line_start":432,"line_end":432,"column_start":19,"column_end":25},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":78411,"byte_end":78417,"line_start":443,"line_end":443,"column_start":24,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":5884}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":78615,"byte_end":78621,"line_start":453,"line_end":453,"column_start":26,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":5889}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":78819,"byte_end":78825,"line_start":463,"line_end":463,"column_start":24,"column_end":30},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":6075}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":78993,"byte_end":78999,"line_start":473,"line_end":473,"column_start":26,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":595},"to":{"krate":10,"index":72}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":79167,"byte_end":79173,"line_start":483,"line_end":483,"column_start":24,"column_end":30},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":5845}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":79473,"byte_end":79479,"line_start":496,"line_end":496,"column_start":24,"column_end":30},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":2023}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":79626,"byte_end":79632,"line_start":507,"line_end":507,"column_start":27,"column_end":33},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":2034}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":79768,"byte_end":79774,"line_start":516,"line_end":516,"column_start":24,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":1767}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":79901,"byte_end":79907,"line_start":526,"line_end":526,"column_start":25,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":1767}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":80061,"byte_end":80067,"line_start":536,"line_end":536,"column_start":40,"column_end":46},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/string.rs","byte_start":81234,"byte_end":81240,"line_start":585,"line_end":585,"column_start":16,"column_end":22},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88430,"byte_end":88433,"line_start":48,"line_end":48,"column_start":22,"column_end":25},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":88637,"byte_end":88640,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":94564,"byte_end":94567,"line_start":260,"line_end":260,"column_start":24,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":94687,"byte_end":94690,"line_start":269,"line_end":269,"column_start":27,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":5884}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":94891,"byte_end":94894,"line_start":280,"line_end":280,"column_start":21,"column_end":24},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":95044,"byte_end":95047,"line_start":289,"line_end":289,"column_start":26,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":4640}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":95294,"byte_end":95297,"line_start":303,"line_end":303,"column_start":34,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":4640}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":95527,"byte_end":95530,"line_start":316,"line_end":316,"column_start":27,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":6075}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":95724,"byte_end":95727,"line_start":326,"line_end":326,"column_start":29,"column_end":32},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":685},"to":{"krate":10,"index":72}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":96365,"byte_end":96368,"line_start":360,"line_end":360,"column_start":32,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":4627}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":96978,"byte_end":96986,"line_start":390,"line_end":390,"column_start":25,"column_end":33},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":762},"to":{"krate":1,"index":4723}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":97396,"byte_end":97404,"line_start":407,"line_end":407,"column_start":22,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":762},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":97604,"byte_end":97612,"line_start":420,"line_end":420,"column_start":21,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":762},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":97952,"byte_end":97955,"line_start":434,"line_end":434,"column_start":29,"column_end":32},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":4631}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":98186,"byte_end":98189,"line_start":446,"line_end":446,"column_start":46,"column_end":49},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":99055,"byte_end":99058,"line_start":489,"line_end":489,"column_start":19,"column_end":22},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":99136,"byte_end":99139,"line_start":496,"line_end":496,"column_start":27,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":2023}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":99491,"byte_end":99494,"line_start":510,"line_end":510,"column_start":30,"column_end":33},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":2034}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":99870,"byte_end":99873,"line_start":524,"line_end":524,"column_start":33,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":1767}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":100011,"byte_end":100014,"line_start":534,"line_end":534,"column_start":33,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":1770}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":100154,"byte_end":100157,"line_start":544,"line_end":544,"column_start":27,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":1767}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/vec.rs","byte_start":100288,"byte_end":100291,"line_start":554,"line_end":554,"column_start":27,"column_end":30},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":685},"to":{"krate":1,"index":1770}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107841,"byte_end":107844,"line_start":34,"line_end":34,"column_start":22,"column_end":25},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":833},"to":{"krate":0,"index":835}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":107932,"byte_end":107935,"line_start":40,"line_end":40,"column_start":22,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":834},"to":{"krate":0,"index":835}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":109716,"byte_end":109726,"line_start":103,"line_end":103,"column_start":15,"column_end":25},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":116923,"byte_end":116927,"line_start":354,"line_end":354,"column_start":13,"column_end":17},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":118368,"byte_end":118372,"line_start":404,"line_end":404,"column_start":22,"column_end":26},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":864},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":118627,"byte_end":118637,"line_start":415,"line_end":415,"column_start":27,"column_end":37},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":841},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":118783,"byte_end":118793,"line_start":426,"line_end":426,"column_start":25,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":841},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/binary_heap.rs","byte_start":119028,"byte_end":119038,"line_start":440,"line_end":440,"column_start":30,"column_end":40},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":841},"to":{"krate":1,"index":5884}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/split.rs","byte_start":143263,"byte_end":143268,"line_start":9,"line_end":9,"column_start":18,"column_end":23},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/split.rs","byte_start":144206,"byte_end":144214,"line_start":42,"line_end":42,"column_start":38,"column_end":46},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":938},"to":{"krate":1,"index":1852}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/split.rs","byte_start":144687,"byte_end":144695,"line_start":63,"line_end":63,"column_start":35,"column_end":43},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":952},"to":{"krate":1,"index":1852}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":122635,"byte_end":122641,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":126417,"byte_end":126422,"line_start":162,"line_end":162,"column_start":18,"column_end":23},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":127448,"byte_end":127453,"line_start":205,"line_end":205,"column_start":27,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":982},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":127719,"byte_end":127724,"line_start":220,"line_end":220,"column_start":33,"column_end":38},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":982},"to":{"krate":1,"index":5884}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":127982,"byte_end":127987,"line_start":232,"line_end":232,"column_start":33,"column_end":38},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":982},"to":{"krate":1,"index":6075}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":128307,"byte_end":128312,"line_start":247,"line_end":247,"column_start":35,"column_end":40},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":982},"to":{"krate":10,"index":72}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":133825,"byte_end":133830,"line_start":424,"line_end":424,"column_start":12,"column_end":17},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":134073,"byte_end":134078,"line_start":436,"line_end":436,"column_start":12,"column_end":17},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":134533,"byte_end":134538,"line_start":454,"line_end":454,"column_start":66,"column_end":71},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":982},"to":{"krate":1,"index":1588}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":134967,"byte_end":134972,"line_start":473,"line_end":473,"column_start":25,"column_end":30},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":982},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/spsc/mod.rs","byte_start":135345,"byte_end":135349,"line_start":496,"line_end":496,"column_start":32,"column_end":36},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1066},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/__core.rs","byte_start":151264,"byte_end":151275,"line_start":21,"line_end":21,"column_start":13,"column_end":24},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/sealed.rs","byte_start":152632,"byte_end":152642,"line_start":11,"line_end":11,"column_start":23,"column_end":33},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":968},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/sealed.rs","byte_start":152723,"byte_end":152732,"line_start":17,"line_end":17,"column_start":23,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":966},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/sealed.rs","byte_start":152812,"byte_end":152816,"line_start":23,"line_end":23,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":1773},"to":{"krate":0,"index":1123}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.4.4/src/sealed.rs","byte_start":152826,"byte_end":152830,"line_start":23,"line_end":23,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":1852},"to":{"krate":0,"index":1123}}]}
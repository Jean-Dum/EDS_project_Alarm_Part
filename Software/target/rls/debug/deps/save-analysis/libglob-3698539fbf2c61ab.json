{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0","program":"/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","glob","/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","opt-level=1","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=3698539fbf2c61ab","-C","extra-filename=-3698539fbf2c61ab","--out-dir","/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/debug/deps","-L","dependency=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/debug/deps/libglob-3698539fbf2c61ab.rmeta"},"prelude":{"crate_id":{"name":"glob","disambiguator":[9944538535742977394,8422481130247668557]},"crate_root":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src","external_crates":[{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14071373652398347879,7103549041170480253]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5273437404553270099,5411348343046199890]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[976218546544352998,2134245565175613459]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13100362557277821204,18082047403827332368]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3605767859335716447,18368004652892255649]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7644919710974821109,7113146966867899407]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16182386318199163571,1953714320961812]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12664401352052491985,6928826529401171483]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17274879524252775070,15165904048009513825]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3349673540409454496,14630436784565510244]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14546748579478228105,1074460191194833292]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5671097699487010686,7534711367382902334]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7229860330014108182,6606161976056509340]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7609715969379266585,5596137465280250730]}}],"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":467,"byte_end":50050,"line_start":11,"line_end":1411,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":467,"byte_end":50050,"line_start":11,"line_end":1411,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":28},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":104},{"krate":0,"index":138},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":117},{"krate":0,"index":115},{"krate":0,"index":112},{"krate":0,"index":110},{"krate":0,"index":108},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":140},{"krate":0,"index":176},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":163},{"krate":0,"index":161},{"krate":0,"index":158},{"krate":0,"index":156},{"krate":0,"index":178},{"krate":0,"index":212},{"krate":0,"index":210},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":193},{"krate":0,"index":191},{"krate":0,"index":188},{"krate":0,"index":186},{"krate":0,"index":213},{"krate":0,"index":225},{"krate":0,"index":223},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":81},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":226},{"krate":0,"index":260},{"krate":0,"index":258},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":237},{"krate":0,"index":235},{"krate":0,"index":232},{"krate":0,"index":230},{"krate":0,"index":92}],"decl_id":null,"docs":" Support for matching file paths against Unix shell style patterns.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":2223,"byte_end":2245,"line_start":63,"line_end":63,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":28},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":3102,"byte_end":3107,"line_start":88,"line_end":88,"column_start":12,"column_end":17},"name":"Paths","qualname":"::Paths","value":"Paths {  }","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" An iterator that yields `Path`s from the filesystem that match a particular\n pattern.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":5207,"byte_end":5211,"line_start":153,"line_end":153,"column_start":8,"column_end":12},"name":"glob","qualname":"::glob","value":"fn (pattern: &str) -> Result<Paths, PatternError>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that produces all the `Path`s that match the given\n pattern using default match options, which may be absolute or relative to\n the current working directory.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":5928,"byte_end":5937,"line_start":170,"line_end":170,"column_start":8,"column_end":17},"name":"glob_with","qualname":"::glob_with","value":"fn (pattern: &str, options: MatchOptions) -> Result<Paths, PatternError>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that produces all the `Path`s that match the given\n pattern using the specified match options, which may be absolute or relative\n to the current working directory.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":94},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":8887,"byte_end":8896,"line_start":267,"line_end":267,"column_start":12,"column_end":21},"name":"GlobError","qualname":"::GlobError","value":"GlobError {  }","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"decl_id":null,"docs":" A glob iteration error.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":9019,"byte_end":9023,"line_start":274,"line_end":274,"column_start":12,"column_end":16},"name":"path","qualname":"<GlobError>::path","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" The Path that the error corresponds to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":9110,"byte_end":9115,"line_start":279,"line_end":279,"column_start":12,"column_end":17},"name":"error","qualname":"<GlobError>::error","value":"fn (&self) -> &io::Error","parent":null,"children":[],"decl_id":null,"docs":" The error in question.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":9243,"byte_end":9253,"line_start":284,"line_end":284,"column_start":12,"column_end":22},"name":"into_error","qualname":"<GlobError>::into_error","value":"fn (self) -> io::Error","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the _raw_ underlying `io::Error`\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":51},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":10021,"byte_end":10031,"line_start":318,"line_end":318,"column_start":10,"column_end":20},"name":"GlobResult","qualname":"::GlobResult","value":"Result<PathBuf, GlobError>","parent":null,"children":[],"decl_id":null,"docs":" An alias for a glob iteration result.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":99},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":14285,"byte_end":14297,"line_start":434,"line_end":434,"column_start":12,"column_end":24},"name":"PatternError","qualname":"::PatternError","value":"PatternError { pos, msg }","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101}],"decl_id":null,"docs":" A pattern parsing error.\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":14235,"byte_end":14273,"line_start":433,"line_end":433,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":100},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":14377,"byte_end":14380,"line_start":436,"line_end":436,"column_start":9,"column_end":12},"name":"pos","qualname":"::PatternError::pos","value":"usize","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" The approximate character index of where the error occurred.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":101},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":14438,"byte_end":14441,"line_start":439,"line_end":439,"column_start":9,"column_end":12},"name":"msg","qualname":"::PatternError::msg","value":"&'static str","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" A message describing the error.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":104},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":16126,"byte_end":16133,"line_start":484,"line_end":484,"column_start":12,"column_end":19},"name":"Pattern","qualname":"::Pattern","value":"Pattern {  }","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"decl_id":null,"docs":" A compiled Unix shell style pattern.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":17454,"byte_end":17457,"line_start":537,"line_end":537,"column_start":12,"column_end":15},"name":"new","qualname":"<Pattern>::new","value":"fn (pattern: &str) -> Result<Self, PatternError>","parent":null,"children":[],"decl_id":null,"docs":" This function compiles Unix shell style patterns.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":22160,"byte_end":22166,"line_start":652,"line_end":652,"column_start":12,"column_end":18},"name":"escape","qualname":"<Pattern>::escape","value":"fn (s: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Escape metacharacters within the given string by surrounding them in\n brackets. The resulting string will, when compiled into a `Pattern`,\n match the input string and nothing else.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":23129,"byte_end":23136,"line_start":683,"line_end":683,"column_start":12,"column_end":19},"name":"matches","qualname":"<Pattern>::matches","value":"fn (&self, str: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the given `str` matches this `Pattern` using the default\n match options (i.e. `MatchOptions::new()`).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":23391,"byte_end":23403,"line_start":689,"line_end":689,"column_start":12,"column_end":24},"name":"matches_path","qualname":"<Pattern>::matches_path","value":"fn (&self, path: &Path) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the given `Path`, when converted to a `str`, matches this\n `Pattern` using the default match options (i.e. `MatchOptions::new()`).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":23671,"byte_end":23683,"line_start":696,"line_end":696,"column_start":12,"column_end":24},"name":"matches_with","qualname":"<Pattern>::matches_with","value":"fn (&self, str: &str, options: MatchOptions) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the given `str` matches this `Pattern` using the specified\n match options.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":23948,"byte_end":23965,"line_start":702,"line_end":702,"column_start":12,"column_end":29},"name":"matches_path_with","qualname":"<Pattern>::matches_path_with","value":"fn (&self, path: &Path, options: MatchOptions) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the given `Path`, when converted to a `str`, matches this\n `Pattern` using the specified match options.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":24225,"byte_end":24231,"line_start":709,"line_end":709,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Pattern>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Access the original glob pattern.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":33781,"byte_end":33793,"line_start":965,"line_end":965,"column_start":12,"column_end":24},"name":"MatchOptions","qualname":"::MatchOptions","value":"MatchOptions { case_sensitive, require_literal_separator, require_literal_leading_dot }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"decl_id":null,"docs":" Configuration options to modify the behaviour of `Pattern::matches_with(..)`.\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":33661,"byte_end":33699,"line_start":963,"line_end":963,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":227},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":34052,"byte_end":34066,"line_start":970,"line_end":970,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::MatchOptions::case_sensitive","value":"bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Whether or not patterns should be matched in a case-sensitive manner.\n This currently only considers upper/lower case relationships between\n ASCII characters, but in future this might be extended to work with\n Unicode.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":228},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":34250,"byte_end":34275,"line_start":975,"line_end":975,"column_start":9,"column_end":34},"name":"require_literal_separator","qualname":"::MatchOptions::require_literal_separator","value":"bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Whether or not path-component separator characters (e.g. `/` on\n Posix) must be matched by a literal `/`, rather than by `*` or `?` or\n `[...]`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":229},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":34644,"byte_end":34671,"line_start":982,"line_end":982,"column_start":9,"column_end":36},"name":"require_literal_leading_dot","qualname":"::MatchOptions::require_literal_leading_dot","value":"bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Whether or not paths that contain components that start with a `.`\n will require that `.` appears literally in the pattern; `*`, `?`, `**`,\n or `[...]` will not match. This is useful because such files are\n conventionally considered hidden on Unix systems and it might be\n desirable to skip them when listing files.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":35147,"byte_end":35150,"line_start":999,"line_end":999,"column_start":12,"column_end":15},"name":"new","qualname":"<MatchOptions>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `MatchOptions` with default field values. This is used\n when calling functions that do not take an explicit `MatchOptions`\n parameter.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":8948,"byte_end":8957,"line_start":272,"line_end":272,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":9318,"byte_end":9327,"line_start":289,"line_end":289,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":9503,"byte_end":9512,"line_start":299,"line_end":299,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":10081,"byte_end":10086,"line_start":320,"line_end":320,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":14475,"byte_end":14487,"line_start":442,"line_end":442,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":14574,"byte_end":14586,"line_start":448,"line_end":448,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":16274,"byte_end":16281,"line_start":491,"line_end":491,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":16398,"byte_end":16405,"line_start":497,"line_end":497,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":17306,"byte_end":17313,"line_start":533,"line_end":533,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":34687,"byte_end":34699,"line_start":985,"line_end":985,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":8948,"byte_end":8957,"line_start":272,"line_end":272,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":9318,"byte_end":9327,"line_start":289,"line_end":289,"column_start":16,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":9503,"byte_end":9512,"line_start":299,"line_end":299,"column_start":23,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":10081,"byte_end":10086,"line_start":320,"line_end":320,"column_start":19,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":14475,"byte_end":14487,"line_start":442,"line_end":442,"column_start":16,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":99},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":14574,"byte_end":14586,"line_start":448,"line_end":448,"column_start":23,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":99},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":16274,"byte_end":16281,"line_start":491,"line_end":491,"column_start":23,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":16398,"byte_end":16405,"line_start":497,"line_end":497,"column_start":18,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":6808}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":17306,"byte_end":17313,"line_start":533,"line_end":533,"column_start":6,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/glob-0.3.0/src/lib.rs","byte_start":34687,"byte_end":34699,"line_start":985,"line_end":985,"column_start":6,"column_end":18},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}}]}
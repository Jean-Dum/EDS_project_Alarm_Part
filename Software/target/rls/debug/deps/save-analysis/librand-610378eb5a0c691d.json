{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6","program":"/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rand","/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","opt-level=1","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=610378eb5a0c691d","-C","extra-filename=-610378eb5a0c691d","--out-dir","/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/debug/deps","-L","dependency=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/debug/deps","--extern","rand_core=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/debug/deps/librand_core-30482abf46424e44.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/debug/deps/librand-610378eb5a0c691d.rmeta"},"prelude":{"crate_id":{"name":"rand","disambiguator":[8665181866045759789,14520430866948041636]},"crate_root":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src","external_crates":[{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[4475606148663180750,5419346832002689975]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[18209801913766412741,14708739502762596590]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[17534900064032465835,11074003829314630197]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":4,"id":{"name":"rand_core","disambiguator":[14109857673037557990,5600080557642109166]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":5,"id":{"name":"rand_core","disambiguator":[7967222098246969340,12451703721359022775]}}],"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":475,"byte_end":41487,"line_start":11,"line_end":1238,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":5,"index":113},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11362,"byte_end":11369,"line_start":266,"line_end":266,"column_start":21,"column_end":28},"alias_span":null,"name":"RngCore","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":118},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11371,"byte_end":11380,"line_start":266,"line_end":266,"column_start":30,"column_end":39},"alias_span":null,"name":"CryptoRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":119},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11382,"byte_end":11393,"line_start":266,"line_end":266,"column_start":41,"column_end":52},"alias_span":null,"name":"SeedableRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":137},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11416,"byte_end":11425,"line_start":267,"line_end":267,"column_start":21,"column_end":30},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":159},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11427,"byte_end":11432,"line_start":267,"line_end":267,"column_start":32,"column_end":37},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":975},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48421,"byte_end":48433,"line_start":171,"line_end":171,"column_start":37,"column_end":49},"alias_span":null,"name":"Alphanumeric","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":741},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48473,"byte_end":48480,"line_start":172,"line_end":172,"column_start":39,"column_end":46},"alias_span":null,"name":"Uniform","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":920},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48519,"byte_end":48531,"line_start":173,"line_end":173,"column_start":38,"column_end":50},"alias_span":null,"name":"OpenClosed01","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":927},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48533,"byte_end":48539,"line_start":173,"line_end":173,"column_start":52,"column_end":58},"alias_span":null,"name":"Open01","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":741},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48622,"byte_end":48629,"line_start":175,"line_end":175,"column_start":24,"column_end":31},"alias_span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48633,"byte_end":48638,"line_start":175,"line_end":175,"column_start":35,"column_end":40},"name":"Range","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":913},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49162,"byte_end":49171,"line_start":188,"line_end":188,"column_start":41,"column_end":50},"alias_span":null,"name":"Bernoulli","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":741},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50763,"byte_end":50770,"line_start":242,"line_end":242,"column_start":37,"column_end":44},"alias_span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50774,"byte_end":50779,"line_start":242,"line_end":242,"column_start":48,"column_end":53},"name":"Range","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":38},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50817,"byte_end":50830,"line_start":243,"line_end":243,"column_start":37,"column_end":50},"alias_span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50834,"byte_end":50845,"line_start":243,"line_end":243,"column_start":54,"column_end":65},"name":"SampleRange","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":173},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":123851,"byte_end":123863,"line_start":24,"line_end":24,"column_start":42,"column_end":54},"alias_span":null,"name":"Distribution","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1454},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":123898,"byte_end":123906,"line_start":25,"line_end":25,"column_start":34,"column_end":42},"alias_span":null,"name":"SmallRng","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1461},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":123908,"byte_end":123914,"line_start":25,"line_end":25,"column_start":44,"column_end":50},"alias_span":null,"name":"StdRng","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":692},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":124009,"byte_end":124012,"line_start":27,"line_end":27,"column_start":28,"column_end":31},"alias_span":null,"name":"Rng","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":5,"index":113},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":124014,"byte_end":124021,"line_start":27,"line_end":27,"column_start":33,"column_end":40},"alias_span":null,"name":"RngCore","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":5,"index":118},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":124023,"byte_end":124032,"line_start":27,"line_end":27,"column_start":42,"column_end":51},"alias_span":null,"name":"CryptoRng","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":5,"index":119},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":124034,"byte_end":124045,"line_start":27,"line_end":27,"column_start":53,"column_end":64},"alias_span":null,"name":"SeedableRng","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1333},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":140198,"byte_end":140207,"line_start":326,"line_end":326,"column_start":23,"column_end":32},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":217}},{"kind":"Use","ref_id":{"krate":0,"index":1345},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":140230,"byte_end":140238,"line_start":327,"line_end":327,"column_start":22,"column_end":30},"alias_span":null,"name":"Hc128Rng","value":"","parent":{"krate":0,"index":217}},{"kind":"Use","ref_id":{"krate":0,"index":1358},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":140261,"byte_end":140269,"line_start":328,"line_end":328,"column_start":22,"column_end":30},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":217}},{"kind":"Use","ref_id":{"krate":0,"index":1373},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":140294,"byte_end":140304,"line_start":329,"line_end":329,"column_start":24,"column_end":34},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":217}},{"kind":"Use","ref_id":{"krate":0,"index":1388},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":140330,"byte_end":140341,"line_start":330,"line_end":330,"column_start":25,"column_end":36},"alias_span":null,"name":"XorShiftRng","value":"","parent":{"krate":0,"index":217}},{"kind":"Use","ref_id":{"krate":0,"index":1404},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/mod.rs","byte_start":237532,"byte_end":237544,"line_start":17,"line_end":17,"column_start":26,"column_end":38},"alias_span":null,"name":"ReseedingRng","value":"","parent":{"krate":0,"index":494}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":235410,"byte_end":235419,"line_start":177,"line_end":177,"column_start":24,"column_end":33},"alias_span":null,"name":"JitterRng","value":"","parent":{"krate":0,"index":493}},{"kind":"Use","ref_id":{"krate":0,"index":1424},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":235421,"byte_end":235431,"line_start":177,"line_end":177,"column_start":35,"column_end":45},"alias_span":null,"name":"TimerError","value":"","parent":{"krate":0,"index":493}},{"kind":"Use","ref_id":{"krate":0,"index":1454},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":235513,"byte_end":235521,"line_start":180,"line_end":180,"column_start":22,"column_end":30},"alias_span":null,"name":"SmallRng","value":"","parent":{"krate":0,"index":493}},{"kind":"Use","ref_id":{"krate":0,"index":1461},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":235542,"byte_end":235548,"line_start":181,"line_end":181,"column_start":20,"column_end":26},"alias_span":null,"name":"StdRng","value":"","parent":{"krate":0,"index":493}},{"kind":"Use","ref_id":{"krate":0,"index":1404},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11905,"byte_end":11917,"line_start":283,"line_end":283,"column_start":39,"column_end":51},"alias_span":null,"name":"ReseedingRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1333},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12713,"byte_end":12722,"line_start":308,"line_end":308,"column_start":31,"column_end":40},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1358},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12724,"byte_end":12732,"line_start":308,"line_end":308,"column_start":42,"column_end":50},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1373},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12734,"byte_end":12744,"line_start":308,"line_end":308,"column_start":52,"column_end":62},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1388},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12746,"byte_end":12757,"line_start":308,"line_end":308,"column_start":64,"column_end":75},"alias_span":null,"name":"XorShiftRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1461},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12789,"byte_end":12795,"line_start":309,"line_end":309,"column_start":30,"column_end":36},"alias_span":null,"name":"StdRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12871,"byte_end":12880,"line_start":315,"line_end":315,"column_start":20,"column_end":29},"alias_span":null,"name":"JitterRng","value":"","parent":{"krate":0,"index":669}},{"kind":"Use","ref_id":{"krate":0,"index":1424},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12882,"byte_end":12892,"line_start":315,"line_end":315,"column_start":31,"column_end":41},"alias_span":null,"name":"TimerError","value":"","parent":{"krate":0,"index":669}},{"kind":"Use","ref_id":{"krate":0,"index":1333},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13708,"byte_end":13717,"line_start":342,"line_end":342,"column_start":19,"column_end":28},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":673}},{"kind":"Use","ref_id":{"krate":0,"index":1358},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13814,"byte_end":13822,"line_start":347,"line_end":347,"column_start":20,"column_end":28},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":1373},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13824,"byte_end":13834,"line_start":347,"line_end":347,"column_start":30,"column_end":40},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":675}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":475,"byte_end":41487,"line_start":11,"line_end":1238,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":207},{"krate":0,"index":217},{"krate":0,"index":493},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":679},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":1468},{"krate":0,"index":1471},{"krate":0,"index":1474},{"krate":0,"index":1477},{"krate":0,"index":1480},{"krate":0,"index":1483},{"krate":0,"index":1486},{"krate":0,"index":1489},{"krate":0,"index":1492},{"krate":0,"index":730},{"krate":0,"index":1655},{"krate":0,"index":1650},{"krate":0,"index":1645},{"krate":0,"index":1640},{"krate":0,"index":1635},{"krate":0,"index":1630},{"krate":0,"index":1625},{"krate":0,"index":1620},{"krate":0,"index":1615},{"krate":0,"index":1610},{"krate":0,"index":1605},{"krate":0,"index":1600},{"krate":0,"index":1595},{"krate":0,"index":1590},{"krate":0,"index":1585},{"krate":0,"index":1580},{"krate":0,"index":1575},{"krate":0,"index":1570},{"krate":0,"index":1565},{"krate":0,"index":1560},{"krate":0,"index":1555},{"krate":0,"index":1550},{"krate":0,"index":1545},{"krate":0,"index":1540},{"krate":0,"index":1535},{"krate":0,"index":1530},{"krate":0,"index":1525},{"krate":0,"index":1520},{"krate":0,"index":1515},{"krate":0,"index":1510},{"krate":0,"index":1505},{"krate":0,"index":1500},{"krate":0,"index":1495},{"krate":0,"index":1690},{"krate":0,"index":1685},{"krate":0,"index":1680},{"krate":0,"index":1675},{"krate":0,"index":1670},{"krate":0,"index":1665},{"krate":0,"index":1660},{"krate":0,"index":1695},{"krate":0,"index":1700},{"krate":0,"index":731},{"krate":0,"index":1704},{"krate":0,"index":1707},{"krate":0,"index":736}],"decl_id":null,"docs":" Utilities for random number generation","sig":null,"attributes":[{"value":"! Utilities for random number generation","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":475,"byte_end":517,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":518,"byte_end":521,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Rand provides utilities to generate random numbers, to convert them to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":522,"byte_end":596,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"! useful types and distributions, and some randomness-related algorithms.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":597,"byte_end":672,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":673,"byte_end":676,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! # Basic usage","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":677,"byte_end":694,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":695,"byte_end":698,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! To get you started quickly, the easiest and highest-level way to get","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":699,"byte_end":771,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"! a random value is to use [`random()`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":772,"byte_end":814,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":815,"byte_end":818,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":819,"byte_end":826,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"! let x: u8 = rand::random();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":827,"byte_end":858,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":859,"byte_end":881,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":882,"byte_end":885,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! let y = rand::random::<f64>();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":886,"byte_end":920,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"! println!(\"{}\", y);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":921,"byte_end":943,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":944,"byte_end":947,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! if rand::random() { // generates a boolean","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":948,"byte_end":994,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"!     println!(\"Heads!\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":995,"byte_end":1022,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"! }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1023,"byte_end":1028,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1029,"byte_end":1036,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1037,"byte_end":1040,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! This supports generating most common types but is not very flexible, thus","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1041,"byte_end":1118,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"! you probably want to learn a bit more about the Rand library.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1119,"byte_end":1184,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1185,"byte_end":1188,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1189,"byte_end":1192,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! # The two-step process to get a random value","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1193,"byte_end":1241,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1242,"byte_end":1245,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! Generating random values is typically a two-step process:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1246,"byte_end":1307,"line_start":39,"line_end":39,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1308,"byte_end":1311,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! - get some *random data* (an integer or bit/byte sequence) from a random","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1312,"byte_end":1388,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"!   number generator (RNG);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1389,"byte_end":1418,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"! - use some function to transform that *data* into the type of value you want","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1419,"byte_end":1499,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"!   (this function is an implementation of some *distribution* describing the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1500,"byte_end":1579,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"!   kind of value produced).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1580,"byte_end":1610,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1611,"byte_end":1614,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! Rand represents the first step with the [`RngCore`] trait and the second","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1615,"byte_end":1691,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"! step via a combination of the [`Rng`] extension trait and the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1692,"byte_end":1757,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"! [`distributions` module].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1758,"byte_end":1787,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"! In practice you probably won't use [`RngCore`] directly unless you are","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1788,"byte_end":1862,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"! implementing a random number generator (RNG).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1863,"byte_end":1912,"line_start":51,"line_end":51,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1913,"byte_end":1916,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! There are many kinds of RNGs, with different trade-offs. You can read more","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1917,"byte_end":1995,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"! about them in the [`rngs` module] and even more in the [`prng` module],","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":1996,"byte_end":2071,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"! however, often you can just use [`thread_rng()`]. This function","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":2072,"byte_end":2139,"line_start":55,"line_end":55,"column_start":1,"column_end":68}},{"value":"! automatically initializes an RNG in thread-local memory, then returns a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":2140,"byte_end":2215,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"! reference to it. It is fast, good quality, and secure (unpredictable).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":2216,"byte_end":2290,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":2291,"byte_end":2294,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! To turn the output of the RNG into something usable, you usually want to use","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":2295,"byte_end":2375,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"! the methods from the [`Rng`] trait. Some of the most useful methods are:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":2376,"byte_end":2452,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":2453,"byte_end":2456,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! - [`gen`] generates a random value appropriate for the type (just like","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":2457,"byte_end":2531,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"!   [`random()`]). For integers this is normally the full representable range","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":2532,"byte_end":2611,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"!   (e.g. from `0u32` to `std::u32::MAX`), for floats this is between 0 and 1,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":2612,"byte_end":2692,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"!   and some other types are supported, including arrays and tuples. See the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":2693,"byte_end":2771,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"!   [`Standard`] distribution which provides the implementations.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":2772,"byte_end":2839,"line_start":66,"line_end":66,"column_start":1,"column_end":68}},{"value":"! - [`gen_range`] samples from a specific range of values; this is like","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":2840,"byte_end":2913,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"!   [`gen`] but with specific upper and lower bounds.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":2914,"byte_end":2969,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"! - [`sample`] samples directly from some distribution.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":2970,"byte_end":3027,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3028,"byte_end":3031,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! [`random()`] is defined using just the above: `thread_rng().gen()`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3032,"byte_end":3103,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3104,"byte_end":3107,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ## Distributions","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3108,"byte_end":3128,"line_start":73,"line_end":73,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3129,"byte_end":3132,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! What are distributions, you ask? Specifying only the type and range of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3133,"byte_end":3207,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"! values (known as the *sample space*) is not enough; samples must also have","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3208,"byte_end":3286,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"! a *probability distribution*, describing the relative probability of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3287,"byte_end":3359,"line_start":77,"line_end":77,"column_start":1,"column_end":73}},{"value":"! sampling each value in that space.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3360,"byte_end":3398,"line_start":78,"line_end":78,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3399,"byte_end":3402,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! In many cases a *uniform* distribution is used, meaning roughly that each","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3403,"byte_end":3480,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"! value is equally likely (or for \"continuous\" types like floats, that each","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3481,"byte_end":3558,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"! equal-sized sub-range has the same probability of containing a sample).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3559,"byte_end":3634,"line_start":82,"line_end":82,"column_start":1,"column_end":76}},{"value":"! [`gen`] and [`gen_range`] both use statistically uniform distributions.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3635,"byte_end":3710,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3711,"byte_end":3714,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! The [`distributions` module] provides implementations","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3715,"byte_end":3772,"line_start":85,"line_end":85,"column_start":1,"column_end":58}},{"value":"! of some other distributions, including Normal, Log-Normal and Exponential.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3773,"byte_end":3851,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"! ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3852,"byte_end":3856,"line_start":87,"line_end":87,"column_start":1,"column_end":5}},{"value":"! It is worth noting that the functionality already mentioned is implemented","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3857,"byte_end":3935,"line_start":88,"line_end":88,"column_start":1,"column_end":79}},{"value":"! with distributions: [`gen`] samples values using the [`Standard`]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":3936,"byte_end":4005,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"! distribution, while [`gen_range`] uses [`Uniform`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4006,"byte_end":4061,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4062,"byte_end":4065,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ## Importing (prelude)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4066,"byte_end":4092,"line_start":92,"line_end":92,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4093,"byte_end":4096,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! The most convenient way to import items from Rand is to use the [prelude].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4097,"byte_end":4175,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"! This includes the most important parts of Rand, but only those unlikely to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4176,"byte_end":4254,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"! cause name conflicts.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4255,"byte_end":4280,"line_start":96,"line_end":96,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4281,"byte_end":4284,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! Note that Rand 0.5 has significantly changed the module organization and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4285,"byte_end":4361,"line_start":98,"line_end":98,"column_start":1,"column_end":77}},{"value":"! contents relative to previous versions. Where possible old names have been","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4362,"byte_end":4440,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"! kept (but are hidden in the documentation), however these will be removed","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4441,"byte_end":4518,"line_start":100,"line_end":100,"column_start":1,"column_end":78}},{"value":"! in the future. We therefore recommend migrating to use the prelude or the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4519,"byte_end":4596,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"! new module organization in your imports.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4597,"byte_end":4641,"line_start":102,"line_end":102,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4642,"byte_end":4645,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4646,"byte_end":4649,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! ## Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4650,"byte_end":4665,"line_start":105,"line_end":105,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4666,"byte_end":4669,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4670,"byte_end":4677,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"! use rand::prelude::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4678,"byte_end":4703,"line_start":108,"line_end":108,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4704,"byte_end":4707,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! // thread_rng is often the most convenient source of randomness:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4708,"byte_end":4776,"line_start":110,"line_end":110,"column_start":1,"column_end":69}},{"value":"! let mut rng = thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4777,"byte_end":4808,"line_start":111,"line_end":111,"column_start":1,"column_end":32}},{"value":"! ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4809,"byte_end":4813,"line_start":112,"line_end":112,"column_start":1,"column_end":5}},{"value":"! if rng.gen() { // random bool","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4814,"byte_end":4847,"line_start":113,"line_end":113,"column_start":1,"column_end":34}},{"value":"!     let x: f64 = rng.gen(); // random number in range [0, 1)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4848,"byte_end":4912,"line_start":114,"line_end":114,"column_start":1,"column_end":65}},{"value":"!     println!(\"x is: {}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4913,"byte_end":4945,"line_start":115,"line_end":115,"column_start":1,"column_end":33}},{"value":"!     let ch = rng.gen::<char>(); // using type annotation","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":4946,"byte_end":5006,"line_start":116,"line_end":116,"column_start":1,"column_end":61}},{"value":"!     println!(\"char is: {}\", ch);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5007,"byte_end":5043,"line_start":117,"line_end":117,"column_start":1,"column_end":37}},{"value":"!     println!(\"Number from 0 to 9: {}\", rng.gen_range(0, 10));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5044,"byte_end":5109,"line_start":118,"line_end":118,"column_start":1,"column_end":66}},{"value":"! }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5110,"byte_end":5115,"line_start":119,"line_end":119,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5116,"byte_end":5123,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5124,"byte_end":5127,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5128,"byte_end":5131,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! # More functionality","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5132,"byte_end":5156,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5157,"byte_end":5160,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! The [`Rng`] trait includes a few more methods not mentioned above:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5161,"byte_end":5231,"line_start":125,"line_end":125,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5232,"byte_end":5235,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! - [`Rng::sample_iter`] allows iterating over values from a chosen","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5236,"byte_end":5305,"line_start":127,"line_end":127,"column_start":1,"column_end":70}},{"value":"!   distribution.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5306,"byte_end":5325,"line_start":128,"line_end":128,"column_start":1,"column_end":20}},{"value":"! - [`Rng::gen_bool`] generates boolean \"events\" with a given probability.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5326,"byte_end":5402,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"! - [`Rng::fill`] and [`Rng::try_fill`] are fast alternatives to fill a slice","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5403,"byte_end":5482,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"!   of integers.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5483,"byte_end":5501,"line_start":131,"line_end":131,"column_start":1,"column_end":19}},{"value":"! - [`Rng::shuffle`] randomly shuffles elements in a slice.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5502,"byte_end":5563,"line_start":132,"line_end":132,"column_start":1,"column_end":62}},{"value":"! - [`Rng::choose`] picks one element at random from a slice.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5564,"byte_end":5627,"line_start":133,"line_end":133,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5628,"byte_end":5631,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! For more slice/sequence related functionality, look in the [`seq` module].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5632,"byte_end":5710,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5711,"byte_end":5714,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! There is also [`distributions::WeightedChoice`], which can be used to pick","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5715,"byte_end":5793,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"! elements at random with some probability. But it does not work well at the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5794,"byte_end":5872,"line_start":138,"line_end":138,"column_start":1,"column_end":79}},{"value":"! moment and is going through a redesign.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5873,"byte_end":5916,"line_start":139,"line_end":139,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5917,"byte_end":5920,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5921,"byte_end":5924,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"! # Error handling","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5925,"byte_end":5945,"line_start":142,"line_end":142,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5946,"byte_end":5949,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"! Error handling in Rand is a compromise between simplicity and necessity.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":5950,"byte_end":6026,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"! Most RNGs and sampling functions will never produce errors, and making these","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6027,"byte_end":6107,"line_start":145,"line_end":145,"column_start":1,"column_end":81}},{"value":"! able to handle errors would add significant overhead (to code complexity","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6108,"byte_end":6184,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"! and ergonomics of usage at least, and potentially also performance,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6185,"byte_end":6256,"line_start":147,"line_end":147,"column_start":1,"column_end":72}},{"value":"! depending on the approach).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6257,"byte_end":6288,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"! However, external RNGs can fail, and being able to handle this is important.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6289,"byte_end":6369,"line_start":149,"line_end":149,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6370,"byte_end":6373,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! It has therefore been decided that *most* methods should not return a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6374,"byte_end":6447,"line_start":151,"line_end":151,"column_start":1,"column_end":74}},{"value":"! `Result` type, with as exceptions [`Rng::try_fill`],","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6448,"byte_end":6504,"line_start":152,"line_end":152,"column_start":1,"column_end":57}},{"value":"! [`RngCore::try_fill_bytes`], and [`SeedableRng::from_rng`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6505,"byte_end":6568,"line_start":153,"line_end":153,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6569,"byte_end":6572,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! Note that it is the RNG that panics when it fails but is not used through a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6573,"byte_end":6652,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"! method that can report errors. Currently Rand contains only three RNGs that","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6653,"byte_end":6732,"line_start":156,"line_end":156,"column_start":1,"column_end":80}},{"value":"! can return an error (and thus may panic), and documents this property:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6733,"byte_end":6807,"line_start":157,"line_end":157,"column_start":1,"column_end":75}},{"value":"! [`OsRng`], [`EntropyRng`] and [`ReadRng`]. Other RNGs, like [`ThreadRng`]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6808,"byte_end":6885,"line_start":158,"line_end":158,"column_start":1,"column_end":78}},{"value":"! and [`StdRng`], can be used with all methods without concern.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6886,"byte_end":6951,"line_start":159,"line_end":159,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6952,"byte_end":6955,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! One further problem is that if Rand is unable to get any external randomness","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":6956,"byte_end":7036,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"! when initializing an RNG with [`EntropyRng`], it will panic in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7037,"byte_end":7103,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"! [`FromEntropy::from_entropy`], and notably in [`thread_rng()`]. Except by","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7104,"byte_end":7181,"line_start":163,"line_end":163,"column_start":1,"column_end":78}},{"value":"! compromising security, this problem is as unsolvable as running out of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7182,"byte_end":7256,"line_start":164,"line_end":164,"column_start":1,"column_end":75}},{"value":"! memory.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7257,"byte_end":7268,"line_start":165,"line_end":165,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7269,"byte_end":7272,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7273,"byte_end":7276,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"! # Distinction between Rand and `rand_core`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7277,"byte_end":7323,"line_start":168,"line_end":168,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7324,"byte_end":7327,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! The [`rand_core`] crate provides the necessary traits and functionality for","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7328,"byte_end":7407,"line_start":170,"line_end":170,"column_start":1,"column_end":80}},{"value":"! implementing RNGs; this includes the [`RngCore`] and [`SeedableRng`] traits","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7408,"byte_end":7487,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"! and the [`Error`] type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7488,"byte_end":7515,"line_start":172,"line_end":172,"column_start":1,"column_end":28}},{"value":"! Crates implementing RNGs should depend on [`rand_core`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7516,"byte_end":7576,"line_start":173,"line_end":173,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7577,"byte_end":7580,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! Applications and libraries consuming random values are encouraged to use the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7581,"byte_end":7661,"line_start":175,"line_end":175,"column_start":1,"column_end":81}},{"value":"! Rand crate, which re-exports the common parts of [`rand_core`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7662,"byte_end":7729,"line_start":176,"line_end":176,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7730,"byte_end":7733,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7734,"byte_end":7737,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"! # More examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7738,"byte_end":7757,"line_start":179,"line_end":179,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7758,"byte_end":7761,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! For some inspiration, see the examples:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7762,"byte_end":7805,"line_start":181,"line_end":181,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7806,"byte_end":7809,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"! - [Monte Carlo estimation of π](","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7810,"byte_end":7847,"line_start":183,"line_end":183,"column_start":1,"column_end":37}},{"value":"!   https://github.com/rust-lang-nursery/rand/blob/master/examples/monte-carlo.rs)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7848,"byte_end":7932,"line_start":184,"line_end":184,"column_start":1,"column_end":85}},{"value":"! - [Monty Hall Problem](","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7933,"byte_end":7960,"line_start":185,"line_end":185,"column_start":1,"column_end":28}},{"value":"!    https://github.com/rust-lang-nursery/rand/blob/master/examples/monty-hall.rs)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":7961,"byte_end":8045,"line_start":186,"line_end":186,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8046,"byte_end":8049,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8050,"byte_end":8053,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"! [`distributions` module]: distributions/index.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8054,"byte_end":8108,"line_start":189,"line_end":189,"column_start":1,"column_end":55}},{"value":"! [`distributions::WeightedChoice`]: distributions/struct.WeightedChoice.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8109,"byte_end":8188,"line_start":190,"line_end":190,"column_start":1,"column_end":80}},{"value":"! [`FromEntropy::from_entropy`]: trait.FromEntropy.html#tymethod.from_entropy","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8189,"byte_end":8268,"line_start":191,"line_end":191,"column_start":1,"column_end":80}},{"value":"! [`EntropyRng`]: rngs/struct.EntropyRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8269,"byte_end":8316,"line_start":192,"line_end":192,"column_start":1,"column_end":48}},{"value":"! [`Error`]: struct.Error.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8317,"byte_end":8349,"line_start":193,"line_end":193,"column_start":1,"column_end":33}},{"value":"! [`gen_range`]: trait.Rng.html#method.gen_range","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8350,"byte_end":8400,"line_start":194,"line_end":194,"column_start":1,"column_end":51}},{"value":"! [`gen`]: trait.Rng.html#method.gen","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8401,"byte_end":8439,"line_start":195,"line_end":195,"column_start":1,"column_end":39}},{"value":"! [`OsRng`]: rngs/struct.OsRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8440,"byte_end":8477,"line_start":196,"line_end":196,"column_start":1,"column_end":38}},{"value":"! [prelude]: prelude/index.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8478,"byte_end":8511,"line_start":197,"line_end":197,"column_start":1,"column_end":34}},{"value":"! [`rand_core`]: https://crates.io/crates/rand_core","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8512,"byte_end":8565,"line_start":198,"line_end":198,"column_start":1,"column_end":54}},{"value":"! [`random()`]: fn.random.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8566,"byte_end":8598,"line_start":199,"line_end":199,"column_start":1,"column_end":33}},{"value":"! [`ReadRng`]: rngs/adapter/struct.ReadRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8599,"byte_end":8648,"line_start":200,"line_end":200,"column_start":1,"column_end":50}},{"value":"! [`Rng::choose`]: trait.Rng.html#method.choose","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8649,"byte_end":8698,"line_start":201,"line_end":201,"column_start":1,"column_end":50}},{"value":"! [`Rng::fill`]: trait.Rng.html#method.fill","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8699,"byte_end":8744,"line_start":202,"line_end":202,"column_start":1,"column_end":46}},{"value":"! [`Rng::gen_bool`]: trait.Rng.html#method.gen_bool","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8745,"byte_end":8798,"line_start":203,"line_end":203,"column_start":1,"column_end":54}},{"value":"! [`Rng::gen`]: trait.Rng.html#method.gen","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8799,"byte_end":8842,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"! [`Rng::sample_iter`]: trait.Rng.html#method.sample_iter","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8843,"byte_end":8902,"line_start":205,"line_end":205,"column_start":1,"column_end":60}},{"value":"! [`Rng::shuffle`]: trait.Rng.html#method.shuffle","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8903,"byte_end":8954,"line_start":206,"line_end":206,"column_start":1,"column_end":52}},{"value":"! [`RngCore`]: trait.RngCore.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8955,"byte_end":8990,"line_start":207,"line_end":207,"column_start":1,"column_end":36}},{"value":"! [`RngCore::try_fill_bytes`]: trait.RngCore.html#method.try_fill_bytes","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":8991,"byte_end":9064,"line_start":208,"line_end":208,"column_start":1,"column_end":74}},{"value":"! [`rngs` module]: rngs/index.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9065,"byte_end":9101,"line_start":209,"line_end":209,"column_start":1,"column_end":37}},{"value":"! [`prng` module]: prng/index.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9102,"byte_end":9138,"line_start":210,"line_end":210,"column_start":1,"column_end":37}},{"value":"! [`Rng`]: trait.Rng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9139,"byte_end":9166,"line_start":211,"line_end":211,"column_start":1,"column_end":28}},{"value":"! [`Rng::try_fill`]: trait.Rng.html#method.try_fill","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9167,"byte_end":9220,"line_start":212,"line_end":212,"column_start":1,"column_end":54}},{"value":"! [`sample`]: trait.Rng.html#method.sample","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9221,"byte_end":9265,"line_start":213,"line_end":213,"column_start":1,"column_end":45}},{"value":"! [`SeedableRng`]: trait.SeedableRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9266,"byte_end":9309,"line_start":214,"line_end":214,"column_start":1,"column_end":44}},{"value":"! [`SeedableRng::from_rng`]: trait.SeedableRng.html#method.from_rng","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9310,"byte_end":9379,"line_start":215,"line_end":215,"column_start":1,"column_end":70}},{"value":"! [`seq` module]: seq/index.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9380,"byte_end":9414,"line_start":216,"line_end":216,"column_start":1,"column_end":35}},{"value":"! [`SmallRng`]: rngs/struct.SmallRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9415,"byte_end":9458,"line_start":217,"line_end":217,"column_start":1,"column_end":44}},{"value":"! [`StdRng`]: rngs/struct.StdRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9459,"byte_end":9498,"line_start":218,"line_end":218,"column_start":1,"column_end":40}},{"value":"! [`thread_rng()`]: fn.thread_rng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9499,"byte_end":9539,"line_start":219,"line_end":219,"column_start":1,"column_end":41}},{"value":"! [`ThreadRng`]: rngs/struct.ThreadRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9540,"byte_end":9585,"line_start":220,"line_end":220,"column_start":1,"column_end":46}},{"value":"! [`Standard`]: distributions/struct.Standard.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9586,"byte_end":9638,"line_start":221,"line_end":221,"column_start":1,"column_end":53}},{"value":"! [`Uniform`]: distributions/struct.Uniform.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9639,"byte_end":9689,"line_start":222,"line_end":222,"column_start":1,"column_end":51}},{"value":"deny(missing_docs)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9898,"byte_end":9920,"line_start":229,"line_end":229,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9921,"byte_end":9960,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"no_std","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":10055,"byte_end":10061,"line_start":233,"line_end":233,"column_start":33,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"distributions","qualname":"::distributions","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":60},{"krate":0,"index":69},{"krate":0,"index":79},{"krate":0,"index":101},{"krate":0,"index":134},{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":173},{"krate":0,"index":180},{"krate":0,"index":1291},{"krate":0,"index":1299},{"krate":0,"index":186},{"krate":0,"index":1305},{"krate":0,"index":1310},{"krate":0,"index":1309},{"krate":0,"index":1307},{"krate":0,"index":194},{"krate":0,"index":1312},{"krate":0,"index":1322},{"krate":0,"index":1319},{"krate":0,"index":1316},{"krate":0,"index":1324},{"krate":0,"index":1329},{"krate":0,"index":198},{"krate":0,"index":202}],"decl_id":null,"docs":" Generating random samples from probability distributions.","sig":null,"attributes":[{"value":"! Generating random samples from probability distributions.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":41964,"byte_end":42025,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42026,"byte_end":42029,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! This module is the home of the [`Distribution`] trait and several of its","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42030,"byte_end":42106,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"! implementations. It is the workhorse behind some of the convenient","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42107,"byte_end":42177,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"! functionality of the [`Rng`] trait, including [`gen`], [`gen_range`] and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42178,"byte_end":42254,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"! of course [`sample`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42255,"byte_end":42280,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42281,"byte_end":42284,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Abstractly, a [probability distribution] describes the probability of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42285,"byte_end":42358,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"! occurance of each value in its sample space.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42359,"byte_end":42407,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42408,"byte_end":42411,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! More concretely, an implementation of `Distribution<T>` for type `X` is an","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42412,"byte_end":42490,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"! algorithm for choosing values from the sample space (a subset of `T`)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42491,"byte_end":42564,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"! according to the distribution `X` represents, using an external source of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42565,"byte_end":42642,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"! randomness (an RNG supplied to the `sample` function).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42643,"byte_end":42701,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42702,"byte_end":42705,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! A type `X` may implement `Distribution<T>` for multiple types `T`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42706,"byte_end":42776,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"! Any type implementing [`Distribution`] is stateless (i.e. immutable),","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42777,"byte_end":42850,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"! but it may have internal parameters set at construction time (for example,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42851,"byte_end":42929,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"! [`Uniform`] allows specification of its sample space as a range within `T`).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":42930,"byte_end":43010,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43011,"byte_end":43014,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43015,"byte_end":43018,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! # The `Standard` distribution","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43019,"byte_end":43052,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43053,"byte_end":43056,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! The [`Standard`] distribution is important to mention. This is the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43057,"byte_end":43127,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"! distribution used by [`Rng::gen()`] and represents the \"default\" way to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43128,"byte_end":43203,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"! produce a random value for many different types, including most primitive","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43204,"byte_end":43281,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"! types, tuples, arrays, and a few derived types. See the documentation of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43282,"byte_end":43358,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"! [`Standard`] for more details.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43359,"byte_end":43393,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43394,"byte_end":43397,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! Implementing `Distribution<T>` for [`Standard`] for user types `T` makes it","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43398,"byte_end":43477,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"! possible to generate type `T` with [`Rng::gen()`], and by extension also","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43478,"byte_end":43554,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"! with the [`random()`] function.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43555,"byte_end":43590,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43591,"byte_end":43594,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43595,"byte_end":43598,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! # Distribution to sample from a `Uniform` range","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43599,"byte_end":43650,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43651,"byte_end":43654,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! The [`Uniform`] distribution is more flexible than [`Standard`], but also","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43655,"byte_end":43732,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"! more specialised: it supports fewer target types, but allows the sample","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43733,"byte_end":43808,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"! space to be specified as an arbitrary range within its target type `T`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43809,"byte_end":43884,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"! Both [`Standard`] and [`Uniform`] are in some sense uniform distributions.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43885,"byte_end":43963,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43964,"byte_end":43967,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! Values may be sampled from this distribution using [`Rng::gen_range`] or","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":43968,"byte_end":44044,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"! by creating a distribution object with [`Uniform::new`],","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44045,"byte_end":44105,"line_start":53,"line_end":53,"column_start":1,"column_end":61}},{"value":"! [`Uniform::new_inclusive`] or `From<Range>`. When the range limits are not","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44106,"byte_end":44184,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"! known at compile time it is typically faster to reuse an existing","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44185,"byte_end":44254,"line_start":55,"line_end":55,"column_start":1,"column_end":70}},{"value":"! distribution object than to call [`Rng::gen_range`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44255,"byte_end":44311,"line_start":56,"line_end":56,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44312,"byte_end":44315,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! User types `T` may also implement `Distribution<T>` for [`Uniform`],","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44316,"byte_end":44388,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"! although this is less straightforward than for [`Standard`] (see the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44389,"byte_end":44461,"line_start":59,"line_end":59,"column_start":1,"column_end":73}},{"value":"! documentation in the [`uniform` module]. Doing so enables generation of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44462,"byte_end":44537,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"! values of type `T` with  [`Rng::gen_range`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44538,"byte_end":44586,"line_start":61,"line_end":61,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44587,"byte_end":44590,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44591,"byte_end":44594,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! # Other distributions","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44595,"byte_end":44620,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44621,"byte_end":44624,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! There are surprisingly many ways to uniformly generate random floats. A","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44625,"byte_end":44700,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"! range between 0 and 1 is standard, but the exact bounds (open vs closed)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44701,"byte_end":44777,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"! and accuracy differ. In addition to the [`Standard`] distribution Rand offers","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44778,"byte_end":44859,"line_start":68,"line_end":68,"column_start":1,"column_end":82}},{"value":"! [`Open01`] and [`OpenClosed01`]. See [Floating point implementation] for","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44860,"byte_end":44936,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"! more details.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44937,"byte_end":44954,"line_start":70,"line_end":70,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44955,"byte_end":44958,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! [`Alphanumeric`] is a simple distribution to sample random letters and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":44959,"byte_end":45033,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"! numbers of the `char` type; in contrast [`Standard`] may sample any valid","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45034,"byte_end":45111,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"! `char`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45112,"byte_end":45123,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45124,"byte_end":45127,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45128,"byte_end":45131,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! # Non-uniform probability distributions","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45132,"byte_end":45175,"line_start":77,"line_end":77,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45176,"byte_end":45179,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! Rand currently provides the following probability distributions:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45180,"byte_end":45248,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45249,"byte_end":45252,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! - Related to real-valued quantities that grow linearly","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45253,"byte_end":45311,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"!   (e.g. errors, offsets):","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45312,"byte_end":45341,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"!   - [`Normal`] distribution, and [`StandardNormal`] as a primitive","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45342,"byte_end":45412,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"!   - [`Cauchy`] distribution","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45413,"byte_end":45444,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"! - Related to Bernoulli trials (yes/no events, with a given probability):","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45445,"byte_end":45521,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"!   - [`Binomial`] distribution","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45522,"byte_end":45555,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"!   - [`Bernoulli`] distribution, similar to [`Rng::gen_bool`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45556,"byte_end":45621,"line_start":87,"line_end":87,"column_start":1,"column_end":66}},{"value":"! - Related to positive real-valued quantities that grow exponentially","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45622,"byte_end":45694,"line_start":88,"line_end":88,"column_start":1,"column_end":73}},{"value":"!   (e.g. prices, incomes, populations):","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45695,"byte_end":45737,"line_start":89,"line_end":89,"column_start":1,"column_end":43}},{"value":"!   - [`LogNormal`] distribution","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45738,"byte_end":45772,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"! - Related to the occurrence of independent events at a given rate:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45773,"byte_end":45843,"line_start":91,"line_end":91,"column_start":1,"column_end":71}},{"value":"!   - [`Poisson`] distribution","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45844,"byte_end":45876,"line_start":92,"line_end":92,"column_start":1,"column_end":33}},{"value":"!   - [`Exp`]onential distribution, and [`Exp1`] as a primitive","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45877,"byte_end":45942,"line_start":93,"line_end":93,"column_start":1,"column_end":66}},{"value":"! - Gamma and derived distributions:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45943,"byte_end":45981,"line_start":94,"line_end":94,"column_start":1,"column_end":39}},{"value":"!   - [`Gamma`] distribution","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":45982,"byte_end":46012,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"!   - [`ChiSquared`] distribution","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46013,"byte_end":46048,"line_start":96,"line_end":96,"column_start":1,"column_end":36}},{"value":"!   - [`StudentT`] distribution","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46049,"byte_end":46082,"line_start":97,"line_end":97,"column_start":1,"column_end":34}},{"value":"!   - [`FisherF`] distribution","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46083,"byte_end":46115,"line_start":98,"line_end":98,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46116,"byte_end":46119,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46120,"byte_end":46123,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46124,"byte_end":46138,"line_start":101,"line_end":101,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46139,"byte_end":46142,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! Sampling from a distribution:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46143,"byte_end":46176,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46177,"byte_end":46180,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46181,"byte_end":46188,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"! use rand::{thread_rng, Rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46189,"byte_end":46221,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"! use rand::distributions::Exp;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46222,"byte_end":46255,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46256,"byte_end":46259,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"! let exp = Exp::new(2.0);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46260,"byte_end":46288,"line_start":109,"line_end":109,"column_start":1,"column_end":29}},{"value":"! let v = thread_rng().sample(exp);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46289,"byte_end":46326,"line_start":110,"line_end":110,"column_start":1,"column_end":38}},{"value":"! println!(\"{} is from an Exp(2) distribution\", v);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46327,"byte_end":46380,"line_start":111,"line_end":111,"column_start":1,"column_end":54}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46381,"byte_end":46388,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46389,"byte_end":46392,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! Implementing the [`Standard`] distribution for a user type:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46393,"byte_end":46456,"line_start":114,"line_end":114,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46457,"byte_end":46460,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46461,"byte_end":46468,"line_start":116,"line_end":116,"column_start":1,"column_end":8}},{"value":"! # #![allow(dead_code)]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46469,"byte_end":46495,"line_start":117,"line_end":117,"column_start":1,"column_end":27}},{"value":"! use rand::Rng;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46496,"byte_end":46514,"line_start":118,"line_end":118,"column_start":1,"column_end":19}},{"value":"! use rand::distributions::{Distribution, Standard};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46515,"byte_end":46569,"line_start":119,"line_end":119,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46570,"byte_end":46573,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! struct MyF32 {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46574,"byte_end":46592,"line_start":121,"line_end":121,"column_start":1,"column_end":19}},{"value":"!     x: f32,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46593,"byte_end":46608,"line_start":122,"line_end":122,"column_start":1,"column_end":16}},{"value":"! }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46609,"byte_end":46614,"line_start":123,"line_end":123,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46615,"byte_end":46618,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! impl Distribution<MyF32> for Standard {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46619,"byte_end":46662,"line_start":125,"line_end":125,"column_start":1,"column_end":44}},{"value":"!     fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> MyF32 {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46663,"byte_end":46728,"line_start":126,"line_end":126,"column_start":1,"column_end":66}},{"value":"!         MyF32 { x: rng.gen() }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46729,"byte_end":46763,"line_start":127,"line_end":127,"column_start":1,"column_end":35}},{"value":"!     }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46764,"byte_end":46773,"line_start":128,"line_end":128,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46774,"byte_end":46779,"line_start":129,"line_end":129,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46780,"byte_end":46787,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46788,"byte_end":46791,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46792,"byte_end":46795,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! [probability distribution]: https://en.wikipedia.org/wiki/Probability_distribution","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46796,"byte_end":46882,"line_start":133,"line_end":133,"column_start":1,"column_end":87}},{"value":"! [`Distribution`]: trait.Distribution.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46883,"byte_end":46928,"line_start":134,"line_end":134,"column_start":1,"column_end":46}},{"value":"! [`gen_range`]: ../trait.Rng.html#method.gen_range","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46929,"byte_end":46982,"line_start":135,"line_end":135,"column_start":1,"column_end":54}},{"value":"! [`gen`]: ../trait.Rng.html#method.gen","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":46983,"byte_end":47024,"line_start":136,"line_end":136,"column_start":1,"column_end":42}},{"value":"! [`sample`]: ../trait.Rng.html#method.sample","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47025,"byte_end":47072,"line_start":137,"line_end":137,"column_start":1,"column_end":48}},{"value":"! [`new_inclusive`]: struct.Uniform.html#method.new_inclusive","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47073,"byte_end":47136,"line_start":138,"line_end":138,"column_start":1,"column_end":64}},{"value":"! [`random()`]: ../fn.random.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47137,"byte_end":47172,"line_start":139,"line_end":139,"column_start":1,"column_end":36}},{"value":"! [`Rng::gen_bool`]: ../trait.Rng.html#method.gen_bool","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47173,"byte_end":47229,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"! [`Rng::gen_range`]: ../trait.Rng.html#method.gen_range","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47230,"byte_end":47288,"line_start":141,"line_end":141,"column_start":1,"column_end":59}},{"value":"! [`Rng::gen()`]: ../trait.Rng.html#method.gen","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47289,"byte_end":47337,"line_start":142,"line_end":142,"column_start":1,"column_end":49}},{"value":"! [`Rng`]: ../trait.Rng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47338,"byte_end":47368,"line_start":143,"line_end":143,"column_start":1,"column_end":31}},{"value":"! [`uniform` module]: uniform/index.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47369,"byte_end":47411,"line_start":144,"line_end":144,"column_start":1,"column_end":43}},{"value":"! [Floating point implementation]: struct.Standard.html#floating-point-implementation","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47412,"byte_end":47499,"line_start":145,"line_end":145,"column_start":1,"column_end":88}},{"value":"! [`Alphanumeric`]: struct.Alphanumeric.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47517,"byte_end":47563,"line_start":147,"line_end":147,"column_start":1,"column_end":47}},{"value":"! [`Bernoulli`]: struct.Bernoulli.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47564,"byte_end":47604,"line_start":148,"line_end":148,"column_start":1,"column_end":41}},{"value":"! [`Binomial`]: struct.Binomial.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47605,"byte_end":47643,"line_start":149,"line_end":149,"column_start":1,"column_end":39}},{"value":"! [`Cauchy`]: struct.Cauchy.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47644,"byte_end":47678,"line_start":150,"line_end":150,"column_start":1,"column_end":35}},{"value":"! [`ChiSquared`]: struct.ChiSquared.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47679,"byte_end":47721,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"! [`Exp`]: struct.Exp.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47722,"byte_end":47750,"line_start":152,"line_end":152,"column_start":1,"column_end":29}},{"value":"! [`Exp1`]: struct.Exp1.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47751,"byte_end":47781,"line_start":153,"line_end":153,"column_start":1,"column_end":31}},{"value":"! [`FisherF`]: struct.FisherF.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47782,"byte_end":47818,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"! [`Gamma`]: struct.Gamma.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47819,"byte_end":47851,"line_start":155,"line_end":155,"column_start":1,"column_end":33}},{"value":"! [`LogNormal`]: struct.LogNormal.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47852,"byte_end":47892,"line_start":156,"line_end":156,"column_start":1,"column_end":41}},{"value":"! [`Normal`]: struct.Normal.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47893,"byte_end":47927,"line_start":157,"line_end":157,"column_start":1,"column_end":35}},{"value":"! [`Open01`]: struct.Open01.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47928,"byte_end":47962,"line_start":158,"line_end":158,"column_start":1,"column_end":35}},{"value":"! [`OpenClosed01`]: struct.OpenClosed01.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":47963,"byte_end":48009,"line_start":159,"line_end":159,"column_start":1,"column_end":47}},{"value":"! [`Pareto`]: struct.Pareto.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48010,"byte_end":48044,"line_start":160,"line_end":160,"column_start":1,"column_end":35}},{"value":"! [`Poisson`]: struct.Poisson.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48045,"byte_end":48081,"line_start":161,"line_end":161,"column_start":1,"column_end":37}},{"value":"! [`Standard`]: struct.Standard.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48082,"byte_end":48120,"line_start":162,"line_end":162,"column_start":1,"column_end":39}},{"value":"! [`StandardNormal`]: struct.StandardNormal.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48121,"byte_end":48171,"line_start":163,"line_end":163,"column_start":1,"column_end":51}},{"value":"! [`StudentT`]: struct.StudentT.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48172,"byte_end":48210,"line_start":164,"line_end":164,"column_start":1,"column_end":39}},{"value":"! [`Uniform`]: struct.Uniform.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48211,"byte_end":48247,"line_start":165,"line_end":165,"column_start":1,"column_end":37}},{"value":"! [`Uniform::new`]: struct.Uniform.html#method.new","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48248,"byte_end":48300,"line_start":166,"line_end":166,"column_start":1,"column_end":53}},{"value":"! [`Uniform::new_inclusive`]: struct.Uniform.html#method.new_inclusive","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48301,"byte_end":48373,"line_start":167,"line_end":167,"column_start":1,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":26},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"uniform","qualname":"::distributions::uniform","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":741},{"krate":0,"index":749},{"krate":0,"index":747},{"krate":0,"index":744},{"krate":0,"index":30},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":48},{"krate":0,"index":752},{"krate":0,"index":762},{"krate":0,"index":760},{"krate":0,"index":757},{"krate":0,"index":51},{"krate":0,"index":765},{"krate":0,"index":767},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":805},{"krate":0,"index":807},{"krate":0,"index":815},{"krate":0,"index":817},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":845},{"krate":0,"index":847},{"krate":0,"index":855},{"krate":0,"index":857},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":57},{"krate":0,"index":874},{"krate":0,"index":58},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":890},{"krate":0,"index":888},{"krate":0,"index":885},{"krate":0,"index":59},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":903},{"krate":0,"index":905}],"decl_id":null,"docs":" A distribution uniformly sampling numbers within a given range.","sig":null,"attributes":[{"value":"! A distribution uniformly sampling numbers within a given range.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71102,"byte_end":71169,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71170,"byte_end":71173,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! [`Uniform`] is the standard distribution to sample uniformly from a range;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71174,"byte_end":71252,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"! e.g. `Uniform::new_inclusive(1, 6)` can sample integers from 1 to 6, like a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71253,"byte_end":71332,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"! standard die. [`Rng::gen_range`] supports any type supported by","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71333,"byte_end":71400,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"! [`Uniform`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71401,"byte_end":71417,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71418,"byte_end":71421,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! This distribution is provided with support for several primitive types","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71422,"byte_end":71496,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"! (all integer and floating-point types) as well as `std::time::Duration`,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71497,"byte_end":71573,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"! and supports extension to user-defined types via a type-specific *back-end*","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71574,"byte_end":71653,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! implementation.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71654,"byte_end":71673,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71674,"byte_end":71677,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! The types [`UniformInt`], [`UniformFloat`] and [`UniformDuration`] are the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71678,"byte_end":71756,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"! back-ends supporting sampling from primitive integer and floating-point","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71757,"byte_end":71832,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"! ranges as well as from `std::time::Duration`; these types do not normally","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71833,"byte_end":71910,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"! need to be used directly (unless implementing a derived back-end).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71911,"byte_end":71981,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71982,"byte_end":71985,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! # Example usage","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":71986,"byte_end":72005,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72006,"byte_end":72009,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72010,"byte_end":72017,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"! use rand::{Rng, thread_rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72018,"byte_end":72050,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"! use rand::distributions::Uniform;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72051,"byte_end":72088,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"! ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72089,"byte_end":72093,"line_start":33,"line_end":33,"column_start":1,"column_end":5}},{"value":"! let mut rng = thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72094,"byte_end":72125,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"! let side = Uniform::new(-10.0, 10.0);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72126,"byte_end":72167,"line_start":35,"line_end":35,"column_start":1,"column_end":42}},{"value":"! ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72168,"byte_end":72172,"line_start":36,"line_end":36,"column_start":1,"column_end":5}},{"value":"! // sample between 1 and 10 points","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72173,"byte_end":72210,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"! for _ in 0..rng.gen_range(1, 11) {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72211,"byte_end":72249,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"!     // sample a point from the square with sides -10 - 10 in two dimensions","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72250,"byte_end":72329,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"!     let (x, y) = (rng.sample(side), rng.sample(side));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72330,"byte_end":72388,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"!     println!(\"Point: {}, {}\", x, y);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72389,"byte_end":72429,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72430,"byte_end":72435,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72436,"byte_end":72443,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72444,"byte_end":72447,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! # Extending `Uniform` to support a custom type","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72448,"byte_end":72498,"line_start":45,"line_end":45,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72499,"byte_end":72502,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! To extend [`Uniform`] to support your own types, write a back-end which","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72503,"byte_end":72578,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"! implements the [`UniformSampler`] trait, then implement the [`SampleUniform`]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72579,"byte_end":72660,"line_start":48,"line_end":48,"column_start":1,"column_end":82}},{"value":"! helper trait to \"register\" your back-end. See the `MyF32` example below.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72661,"byte_end":72737,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72738,"byte_end":72741,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! At a minimum, the back-end needs to store any parameters needed for sampling","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72742,"byte_end":72822,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"! (e.g. the target range) and implement `new`, `new_inclusive` and `sample`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72823,"byte_end":72901,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"! Those methods should include an assert to check the range is valid (i.e.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72902,"byte_end":72978,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"! `low < high`). The example below merely wraps another back-end.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":72979,"byte_end":73046,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73047,"byte_end":73050,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73051,"byte_end":73058,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"! use rand::prelude::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73059,"byte_end":73084,"line_start":57,"line_end":57,"column_start":1,"column_end":26}},{"value":"! use rand::distributions::uniform::{Uniform, SampleUniform,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73085,"byte_end":73147,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"!         UniformSampler, UniformFloat};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73148,"byte_end":73190,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73191,"byte_end":73194,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! struct MyF32(f32);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73195,"byte_end":73217,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73218,"byte_end":73221,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! #[derive(Clone, Copy, Debug)]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73222,"byte_end":73255,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"! struct UniformMyF32 {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73256,"byte_end":73281,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"!     inner: UniformFloat<f32>,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73282,"byte_end":73315,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"! }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73316,"byte_end":73321,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73322,"byte_end":73325,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! impl UniformSampler for UniformMyF32 {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73326,"byte_end":73368,"line_start":68,"line_end":68,"column_start":1,"column_end":43}},{"value":"!     type X = MyF32;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73369,"byte_end":73392,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"!     fn new(low: Self::X, high: Self::X) -> Self {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73393,"byte_end":73446,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"!         UniformMyF32 {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73447,"byte_end":73473,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"!             inner: UniformFloat::<f32>::new(low.0, high.0),","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73474,"byte_end":73537,"line_start":72,"line_end":72,"column_start":1,"column_end":64}},{"value":"!         }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73538,"byte_end":73551,"line_start":73,"line_end":73,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73552,"byte_end":73561,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"!     fn new_inclusive(low: Self::X, high: Self::X) -> Self {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73562,"byte_end":73625,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"!         UniformSampler::new(low, high)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73626,"byte_end":73668,"line_start":76,"line_end":76,"column_start":1,"column_end":43}},{"value":"!     }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73669,"byte_end":73678,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"!     fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Self::X {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73679,"byte_end":73746,"line_start":78,"line_end":78,"column_start":1,"column_end":68}},{"value":"!         MyF32(self.inner.sample(rng))","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73747,"byte_end":73788,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"!     }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73789,"byte_end":73798,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73799,"byte_end":73804,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73805,"byte_end":73808,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! impl SampleUniform for MyF32 {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73809,"byte_end":73843,"line_start":83,"line_end":83,"column_start":1,"column_end":35}},{"value":"!     type Sampler = UniformMyF32;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73844,"byte_end":73880,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73881,"byte_end":73886,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73887,"byte_end":73890,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! let (low, high) = (MyF32(17.0f32), MyF32(22.0f32));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73891,"byte_end":73946,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"! let uniform = Uniform::new(low, high);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73947,"byte_end":73989,"line_start":88,"line_end":88,"column_start":1,"column_end":43}},{"value":"! let x = uniform.sample(&mut thread_rng());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":73990,"byte_end":74036,"line_start":89,"line_end":89,"column_start":1,"column_end":47}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74037,"byte_end":74044,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74045,"byte_end":74048,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! [`Uniform`]: struct.Uniform.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74049,"byte_end":74085,"line_start":92,"line_end":92,"column_start":1,"column_end":37}},{"value":"! [`Rng::gen_range`]: ../../trait.Rng.html#method.gen_range","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74086,"byte_end":74147,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"! [`SampleUniform`]: trait.SampleUniform.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74148,"byte_end":74195,"line_start":94,"line_end":94,"column_start":1,"column_end":48}},{"value":"! [`UniformSampler`]: trait.UniformSampler.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74196,"byte_end":74245,"line_start":95,"line_end":95,"column_start":1,"column_end":50}},{"value":"! [`UniformInt`]: struct.UniformInt.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74246,"byte_end":74288,"line_start":96,"line_end":96,"column_start":1,"column_end":43}},{"value":"! [`UniformFloat`]: struct.UniformFloat.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74289,"byte_end":74335,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"! [`UniformDuration`]: struct.UniformDuration.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74336,"byte_end":74388,"line_start":98,"line_end":98,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":741},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76408,"byte_end":76415,"line_start":151,"line_end":151,"column_start":12,"column_end":19},"name":"Uniform","qualname":"::distributions::uniform::Uniform","value":"Uniform {  }","parent":null,"children":[{"krate":0,"index":743}],"decl_id":null,"docs":" Sample values uniformly between two bounds.","sig":null,"attributes":[{"value":"/ Sample values uniformly between two bounds.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74520,"byte_end":74567,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74568,"byte_end":74571,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ [`Uniform::new`] and [`Uniform::new_inclusive`] construct a uniform","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74572,"byte_end":74643,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ distribution sampling from the given range; these functions may do extra","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74644,"byte_end":74720,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ work up front to make sampling of multiple values faster.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74721,"byte_end":74782,"line_start":111,"line_end":111,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74783,"byte_end":74786,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ When sampling from a constant range, many calculations can happen at","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74787,"byte_end":74859,"line_start":113,"line_end":113,"column_start":1,"column_end":73}},{"value":"/ compile-time and all methods should be fast; for floating-point ranges and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74860,"byte_end":74938,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ the full range of integer types this should have comparable performance to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":74939,"byte_end":75017,"line_start":115,"line_end":115,"column_start":1,"column_end":79}},{"value":"/ the `Standard` distribution.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75018,"byte_end":75050,"line_start":116,"line_end":116,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75051,"byte_end":75054,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ Steps are taken to avoid bias which might be present in naive","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75055,"byte_end":75120,"line_start":118,"line_end":118,"column_start":1,"column_end":66}},{"value":"/ implementations; for example `rng.gen::<u8>() % 170` samples from the range","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75121,"byte_end":75200,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ `[0, 169]` but is twice as likely to select numbers less than 85 than other","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75201,"byte_end":75280,"line_start":120,"line_end":120,"column_start":1,"column_end":80}},{"value":"/ values. Further, the implementations here give more weight to the high-bits","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75281,"byte_end":75360,"line_start":121,"line_end":121,"column_start":1,"column_end":80}},{"value":"/ generated by the RNG than the low bits, since with some RNGs the low-bits","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75361,"byte_end":75438,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/ are of lower quality than the high bits.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75439,"byte_end":75483,"line_start":123,"line_end":123,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75484,"byte_end":75487,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Implementations should attempt to sample in `[low, high)` for","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75488,"byte_end":75553,"line_start":125,"line_end":125,"column_start":1,"column_end":66}},{"value":"/ `Uniform::new(low, high)`, i.e., excluding `high`, but this may be very","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75554,"byte_end":75629,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ difficult. All the primitive integer types satisfy this property, and the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75630,"byte_end":75707,"line_start":127,"line_end":127,"column_start":1,"column_end":78}},{"value":"/ float types normally satisfy it, but rounding may mean `high` can occur.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75708,"byte_end":75784,"line_start":128,"line_end":128,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75785,"byte_end":75788,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75789,"byte_end":75802,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75803,"byte_end":75806,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75807,"byte_end":75814,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{Distribution, Uniform};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75815,"byte_end":75868,"line_start":133,"line_end":133,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75869,"byte_end":75872,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75873,"byte_end":75888,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/     let between = Uniform::from(10..10000);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75889,"byte_end":75936,"line_start":136,"line_end":136,"column_start":1,"column_end":48}},{"value":"/     let mut rng = rand::thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75937,"byte_end":75978,"line_start":137,"line_end":137,"column_start":1,"column_end":42}},{"value":"/     let mut sum = 0;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":75979,"byte_end":76003,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/     for _ in 0..1000 {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76004,"byte_end":76030,"line_start":139,"line_end":139,"column_start":1,"column_end":27}},{"value":"/         sum += between.sample(&mut rng);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76031,"byte_end":76075,"line_start":140,"line_end":140,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76076,"byte_end":76085,"line_start":141,"line_end":141,"column_start":1,"column_end":10}},{"value":"/     println!(\"{}\", sum);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76086,"byte_end":76114,"line_start":142,"line_end":142,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76115,"byte_end":76120,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76121,"byte_end":76128,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76129,"byte_end":76132,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [`Uniform::new`]: struct.Uniform.html#method.new","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76133,"byte_end":76185,"line_start":146,"line_end":146,"column_start":1,"column_end":53}},{"value":"/ [`Uniform::new_inclusive`]: struct.Uniform.html#method.new_inclusive","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76186,"byte_end":76258,"line_start":147,"line_end":147,"column_start":1,"column_end":73}},{"value":"/ [`new`]: struct.Uniform.html#method.new","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76259,"byte_end":76302,"line_start":148,"line_end":148,"column_start":1,"column_end":44}},{"value":"/ [`new_inclusive`]: struct.Uniform.html#method.new_inclusive","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76303,"byte_end":76366,"line_start":149,"line_end":149,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76665,"byte_end":76668,"line_start":158,"line_end":158,"column_start":12,"column_end":15},"name":"new","qualname":"<Uniform<X>>::new","value":"fn (low: X, high: X) -> Uniform<X>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Uniform` instance which samples uniformly from the half\n open range `[low, high)` (excluding `high`). Panics if `low >= high`.\n","sig":null,"attributes":[{"value":"/ Create a new `Uniform` instance which samples uniformly from the half","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76502,"byte_end":76575,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ open range `[low, high)` (excluding `high`). Panics if `low >= high`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76580,"byte_end":76653,"line_start":157,"line_end":157,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76919,"byte_end":76932,"line_start":164,"line_end":164,"column_start":12,"column_end":25},"name":"new_inclusive","qualname":"<Uniform<X>>::new_inclusive","value":"fn (low: X, high: X) -> Uniform<X>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Uniform` instance which samples uniformly from the closed\n range `[low, high]` (inclusive). Panics if `low > high`.\n","sig":null,"attributes":[{"value":"/ Create a new `Uniform` instance which samples uniformly from the closed","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76767,"byte_end":76842,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ range `[low, high]` (inclusive). Panics if `low > high`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76847,"byte_end":76907,"line_start":163,"line_end":163,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77562,"byte_end":77575,"line_start":184,"line_end":184,"column_start":11,"column_end":24},"name":"SampleUniform","qualname":"::distributions::uniform::SampleUniform","value":"SampleUniform: Sized","parent":null,"children":[{"krate":0,"index":39}],"decl_id":null,"docs":" Helper trait for creating objects using the correct implementation of\n [`UniformSampler`] for the sampling type.","sig":null,"attributes":[{"value":"/ Helper trait for creating objects using the correct implementation of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77193,"byte_end":77266,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/ [`UniformSampler`] for the sampling type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77267,"byte_end":77312,"line_start":176,"line_end":176,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77313,"byte_end":77316,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ See the [module documentation] on how to implement [`Uniform`] range","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77317,"byte_end":77389,"line_start":178,"line_end":178,"column_start":1,"column_end":73}},{"value":"/ sampling for a custom type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77390,"byte_end":77421,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77422,"byte_end":77425,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ [`UniformSampler`]: trait.UniformSampler.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77426,"byte_end":77475,"line_start":181,"line_end":181,"column_start":1,"column_end":50}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77476,"byte_end":77514,"line_start":182,"line_end":182,"column_start":1,"column_end":39}},{"value":"/ [`Uniform`]: struct.Uniform.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77515,"byte_end":77551,"line_start":183,"line_end":183,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":39},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77659,"byte_end":77666,"line_start":186,"line_end":186,"column_start":10,"column_end":17},"name":"Sampler","qualname":"::distributions::uniform::SampleUniform::Sampler","value":"type Sampler: UniformSampler<X = Self>;","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" The `UniformSampler` implementation supporting type `X`.\n","sig":null,"attributes":[{"value":"/ The `UniformSampler` implementation supporting type `X`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77589,"byte_end":77649,"line_start":185,"line_end":185,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78176,"byte_end":78190,"line_start":200,"line_end":200,"column_start":11,"column_end":25},"name":"UniformSampler","qualname":"::distributions::uniform::UniformSampler","value":"UniformSampler: Sized","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":46}],"decl_id":null,"docs":" Helper trait handling actual uniform sampling.","sig":null,"attributes":[{"value":"/ Helper trait handling actual uniform sampling.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77697,"byte_end":77747,"line_start":189,"line_end":189,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77748,"byte_end":77751,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ See the [module documentation] on how to implement [`Uniform`] range","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77752,"byte_end":77824,"line_start":191,"line_end":191,"column_start":1,"column_end":73}},{"value":"/ sampling for a custom type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77825,"byte_end":77856,"line_start":192,"line_end":192,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77857,"byte_end":77860,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ Implementation of [`sample_single`] is optional, and is only useful when","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77861,"byte_end":77937,"line_start":194,"line_end":194,"column_start":1,"column_end":77}},{"value":"/ the implementation can be faster than `Self::new(low, high).sample(rng)`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77938,"byte_end":78015,"line_start":195,"line_end":195,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78016,"byte_end":78019,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78020,"byte_end":78058,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ [`Uniform`]: struct.Uniform.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78059,"byte_end":78095,"line_start":198,"line_end":198,"column_start":1,"column_end":37}},{"value":"/ [`sample_single`]: trait.UniformSampler.html#method.sample_single","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78096,"byte_end":78165,"line_start":199,"line_end":199,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":41},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78258,"byte_end":78259,"line_start":202,"line_end":202,"column_start":10,"column_end":11},"name":"X","qualname":"::distributions::uniform::UniformSampler::X","value":"type X;","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The type sampled by this implementation.\n","sig":null,"attributes":[{"value":"/ The type sampled by this implementation.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78204,"byte_end":78248,"line_start":201,"line_end":201,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78522,"byte_end":78525,"line_start":209,"line_end":209,"column_start":8,"column_end":11},"name":"new","qualname":"::distributions::uniform::UniformSampler::new","value":"fn (low: Self::X, high: Self::X) -> Self","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Construct self, with inclusive lower bound and exclusive upper bound\n `[low, high)`.","sig":null,"attributes":[{"value":"/ Construct self, with inclusive lower bound and exclusive upper bound","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78266,"byte_end":78338,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/ `[low, high)`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78343,"byte_end":78361,"line_start":205,"line_end":205,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78366,"byte_end":78369,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Usually users should not call this directly but instead use","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78374,"byte_end":78437,"line_start":207,"line_end":207,"column_start":5,"column_end":68}},{"value":"/ `Uniform::new`, which asserts that `low < high` before calling this.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78442,"byte_end":78514,"line_start":208,"line_end":208,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78805,"byte_end":78818,"line_start":216,"line_end":216,"column_start":8,"column_end":21},"name":"new_inclusive","qualname":"::distributions::uniform::UniformSampler::new_inclusive","value":"fn (low: Self::X, high: Self::X) -> Self","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Construct self, with inclusive bounds `[low, high]`.","sig":null,"attributes":[{"value":"/ Construct self, with inclusive bounds `[low, high]`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78569,"byte_end":78625,"line_start":211,"line_end":211,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78630,"byte_end":78633,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Usually users should not call this directly but instead use","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78638,"byte_end":78701,"line_start":213,"line_end":213,"column_start":5,"column_end":68}},{"value":"/ `Uniform::new_inclusive`, which asserts that `low <= high` before","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78706,"byte_end":78775,"line_start":214,"line_end":214,"column_start":5,"column_end":74}},{"value":"/ calling this.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78780,"byte_end":78797,"line_start":215,"line_end":215,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78889,"byte_end":78895,"line_start":219,"line_end":219,"column_start":8,"column_end":14},"name":"sample","qualname":"::distributions::uniform::UniformSampler::sample","value":"fn <R> (&self, rng: &mut R) -> Self::X","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Sample a value.\n","sig":null,"attributes":[{"value":"/ Sample a value.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78862,"byte_end":78881,"line_start":218,"line_end":218,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79507,"byte_end":79520,"line_start":232,"line_end":232,"column_start":8,"column_end":21},"name":"sample_single","qualname":"::distributions::uniform::UniformSampler::sample_single","value":"fn <R> (low: Self::X, high: Self::X, rng: &mut R) -> Self::X","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Sample a single value uniformly from a range with inclusive lower bound\n and exclusive upper bound `[low, high)`.","sig":null,"attributes":[{"value":"/ Sample a single value uniformly from a range with inclusive lower bound","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78950,"byte_end":79025,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ and exclusive upper bound `[low, high)`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79030,"byte_end":79074,"line_start":222,"line_end":222,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79079,"byte_end":79082,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Usually users should not call this directly but instead use","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79087,"byte_end":79150,"line_start":224,"line_end":224,"column_start":5,"column_end":68}},{"value":"/ `Uniform::sample_single`, which asserts that `low < high` before calling","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79155,"byte_end":79231,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ this.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79236,"byte_end":79245,"line_start":226,"line_end":226,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79250,"byte_end":79253,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Via this method, implementations can provide a method optimized for","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79258,"byte_end":79329,"line_start":228,"line_end":228,"column_start":5,"column_end":76}},{"value":"/ sampling only a single value from the specified range. The default","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79334,"byte_end":79404,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ implementation simply calls `UniformSampler::new` then `sample` on the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79409,"byte_end":79483,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ result.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79488,"byte_end":79499,"line_start":231,"line_end":231,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":752},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":82182,"byte_end":82192,"line_start":291,"line_end":291,"column_start":12,"column_end":22},"name":"UniformInt","qualname":"::distributions::uniform::UniformInt","value":"UniformInt {  }","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756}],"decl_id":null,"docs":" The back-end implementing [`UniformSampler`] for integer types.","sig":null,"attributes":[{"value":"/ The back-end implementing [`UniformSampler`] for integer types.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79989,"byte_end":80056,"line_start":251,"line_end":251,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80057,"byte_end":80060,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ Unless you are implementing [`UniformSampler`] for your own type, this type","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80061,"byte_end":80140,"line_start":253,"line_end":253,"column_start":1,"column_end":80}},{"value":"/ should not be used directly, use [`Uniform`] instead.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80141,"byte_end":80198,"line_start":254,"line_end":254,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80199,"byte_end":80202,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80203,"byte_end":80229,"line_start":256,"line_end":256,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80230,"byte_end":80233,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ For a closed range, the number of possible numbers we should generate is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80234,"byte_end":80310,"line_start":258,"line_end":258,"column_start":1,"column_end":77}},{"value":"/ `range = (high - low + 1)`. It is not possible to end up with a uniform","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80311,"byte_end":80386,"line_start":259,"line_end":259,"column_start":1,"column_end":76}},{"value":"/ distribution if we map *all* the random integers that can be generated to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80387,"byte_end":80464,"line_start":260,"line_end":260,"column_start":1,"column_end":78}},{"value":"/ this range. We have to map integers from a `zone` that is a multiple of the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80465,"byte_end":80544,"line_start":261,"line_end":261,"column_start":1,"column_end":80}},{"value":"/ range. The rest of the integers, that cause a bias, are rejected.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80545,"byte_end":80614,"line_start":262,"line_end":262,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80615,"byte_end":80618,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ The problem with `range` is that to cover the full range of the type, it has","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80619,"byte_end":80699,"line_start":264,"line_end":264,"column_start":1,"column_end":81}},{"value":"/ to store `unsigned_max + 1`, which can't be represented. But if the range","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80700,"byte_end":80777,"line_start":265,"line_end":265,"column_start":1,"column_end":78}},{"value":"/ covers the full range of the type, no modulus is needed. A range of size 0","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80778,"byte_end":80856,"line_start":266,"line_end":266,"column_start":1,"column_end":79}},{"value":"/ can't exist, so we use that to represent this special case. Wrapping","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80857,"byte_end":80929,"line_start":267,"line_end":267,"column_start":1,"column_end":73}},{"value":"/ arithmetic even makes representing `unsigned_max + 1` as 0 simple.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":80930,"byte_end":81000,"line_start":268,"line_end":268,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81001,"byte_end":81004,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ We don't calculate `zone` directly, but first calculate the number of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81005,"byte_end":81078,"line_start":270,"line_end":270,"column_start":1,"column_end":74}},{"value":"/ integers to reject. To handle `unsigned_max + 1` not fitting in the type,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81079,"byte_end":81156,"line_start":271,"line_end":271,"column_start":1,"column_end":78}},{"value":"/ we use:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81157,"byte_end":81168,"line_start":272,"line_end":272,"column_start":1,"column_end":12}},{"value":"/ `ints_to_reject = (unsigned_max + 1) % range;`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81169,"byte_end":81219,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ `ints_to_reject = (unsigned_max - range + 1) % range;`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81220,"byte_end":81278,"line_start":274,"line_end":274,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81279,"byte_end":81282,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The smallest integer PRNGs generate is `u32`. That is why for small integer","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81283,"byte_end":81362,"line_start":276,"line_end":276,"column_start":1,"column_end":80}},{"value":"/ sizes (`i8`/`u8` and `i16`/`u16`) there is an optimization: don't pick the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81363,"byte_end":81441,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ largest zone that can fit in the small type, but pick the largest zone that","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81442,"byte_end":81521,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ can fit in an `u32`. `ints_to_reject` is always less than half the size of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81522,"byte_end":81600,"line_start":279,"line_end":279,"column_start":1,"column_end":79}},{"value":"/ the small integer. This means the first bit of `zone` is always 1, and so","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81601,"byte_end":81678,"line_start":280,"line_end":280,"column_start":1,"column_end":78}},{"value":"/ are all the other preceding bits of a larger integer. The easiest way to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81679,"byte_end":81755,"line_start":281,"line_end":281,"column_start":1,"column_end":77}},{"value":"/ grow the `zone` for the larger type is to simply sign extend it.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81756,"byte_end":81824,"line_start":282,"line_end":282,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81825,"byte_end":81828,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ An alternative to using a modulus is widening multiply: After a widening","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81829,"byte_end":81905,"line_start":284,"line_end":284,"column_start":1,"column_end":77}},{"value":"/ multiply by `range`, the result is in the high word. Then comparing the low","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81906,"byte_end":81985,"line_start":285,"line_end":285,"column_start":1,"column_end":80}},{"value":"/ word against `zone` makes sure our distribution is uniform.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":81986,"byte_end":82049,"line_start":286,"line_end":286,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":82050,"byte_end":82053,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ [`UniformSampler`]: trait.UniformSampler.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":82054,"byte_end":82103,"line_start":288,"line_end":288,"column_start":1,"column_end":50}},{"value":"/ [`Uniform`]: struct.Uniform.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":82104,"byte_end":82140,"line_start":289,"line_end":289,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":54},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":87210,"byte_end":87216,"line_start":414,"line_end":414,"column_start":10,"column_end":16},"name":"Output","qualname":"::distributions::uniform::WideningMultiply::Output","value":"type Output;","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":881},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90862,"byte_end":90874,"line_start":521,"line_end":521,"column_start":12,"column_end":24},"name":"UniformFloat","qualname":"::distributions::uniform::UniformFloat","value":"UniformFloat {  }","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884}],"decl_id":null,"docs":" The back-end implementing [`UniformSampler`] for floating-point types.","sig":null,"attributes":[{"value":"/ The back-end implementing [`UniformSampler`] for floating-point types.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":89636,"byte_end":89710,"line_start":495,"line_end":495,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":89711,"byte_end":89714,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ Unless you are implementing [`UniformSampler`] for your own type, this type","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":89715,"byte_end":89794,"line_start":497,"line_end":497,"column_start":1,"column_end":80}},{"value":"/ should not be used directly, use [`Uniform`] instead.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":89795,"byte_end":89852,"line_start":498,"line_end":498,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":89853,"byte_end":89856,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":89857,"byte_end":89883,"line_start":500,"line_end":500,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":89884,"byte_end":89887,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ Instead of generating a float in the `[0, 1)` range using [`Standard`], the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":89888,"byte_end":89967,"line_start":502,"line_end":502,"column_start":1,"column_end":80}},{"value":"/ `UniformFloat` implementation converts the output of an PRNG itself. This","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":89968,"byte_end":90045,"line_start":503,"line_end":503,"column_start":1,"column_end":78}},{"value":"/ way one or two steps can be optimized out.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90046,"byte_end":90092,"line_start":504,"line_end":504,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90093,"byte_end":90096,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/ The floats are first converted to a value in the `[1, 2)` interval using a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90097,"byte_end":90175,"line_start":506,"line_end":506,"column_start":1,"column_end":79}},{"value":"/ transmute-based method, and then mapped to the expected range with a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90176,"byte_end":90248,"line_start":507,"line_end":507,"column_start":1,"column_end":73}},{"value":"/ multiply and addition. Values produced this way have what equals 22 bits of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90249,"byte_end":90328,"line_start":508,"line_end":508,"column_start":1,"column_end":80}},{"value":"/ random digits for an `f32`, and 52 for an `f64`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90329,"byte_end":90381,"line_start":509,"line_end":509,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90382,"byte_end":90385,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ Currently there is no difference between [`new`] and [`new_inclusive`],","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90386,"byte_end":90461,"line_start":511,"line_end":511,"column_start":1,"column_end":76}},{"value":"/ because the boundaries of a floats range are a bit of a fuzzy concept due to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90462,"byte_end":90542,"line_start":512,"line_end":512,"column_start":1,"column_end":81}},{"value":"/ rounding errors.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90543,"byte_end":90563,"line_start":513,"line_end":513,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90564,"byte_end":90567,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ [`UniformSampler`]: trait.UniformSampler.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90568,"byte_end":90617,"line_start":515,"line_end":515,"column_start":1,"column_end":50}},{"value":"/ [`new`]: trait.UniformSampler.html#tymethod.new","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90618,"byte_end":90669,"line_start":516,"line_end":516,"column_start":1,"column_end":52}},{"value":"/ [`new_inclusive`]: trait.UniformSampler.html#tymethod.new_inclusive","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90670,"byte_end":90741,"line_start":517,"line_end":517,"column_start":1,"column_end":72}},{"value":"/ [`Uniform`]: struct.Uniform.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90742,"byte_end":90778,"line_start":518,"line_end":518,"column_start":1,"column_end":37}},{"value":"/ [`Standard`]: ../struct.Standard.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90779,"byte_end":90820,"line_start":519,"line_end":519,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":60},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bernoulli","qualname":"::distributions::bernoulli","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":913},{"krate":0,"index":918},{"krate":0,"index":917},{"krate":0,"index":915},{"krate":0,"index":63},{"krate":0,"index":66}],"decl_id":null,"docs":" The Bernoulli distribution.\n","sig":null,"attributes":[{"value":"! The Bernoulli distribution.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":101986,"byte_end":102017,"line_start":10,"line_end":10,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":913},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102631,"byte_end":102640,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"Bernoulli","qualname":"::distributions::bernoulli::Bernoulli","value":"Bernoulli {  }","parent":null,"children":[{"krate":0,"index":914}],"decl_id":null,"docs":" The Bernoulli distribution.","sig":null,"attributes":[{"value":"/ The Bernoulli distribution.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102062,"byte_end":102093,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102094,"byte_end":102097,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is a special case of the Binomial distribution where `n = 1`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102098,"byte_end":102168,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102169,"byte_end":102172,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102173,"byte_end":102186,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102187,"byte_end":102190,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102191,"byte_end":102202,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{Bernoulli, Distribution};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102203,"byte_end":102258,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102259,"byte_end":102262,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let d = Bernoulli::new(0.3);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102263,"byte_end":102295,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/ let v = d.sample(&mut rand::thread_rng());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102296,"byte_end":102342,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/ println!(\"{} is from a Bernoulli distribution\", v);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102343,"byte_end":102398,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102399,"byte_end":102406,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102407,"byte_end":102410,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Precision","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102411,"byte_end":102426,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102427,"byte_end":102430,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This `Bernoulli` distribution uses 64 bits from the RNG (a `u64`),","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102431,"byte_end":102501,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ so only probabilities that are multiples of 2<sup>-64</sup> can be","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102502,"byte_end":102572,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ represented.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102573,"byte_end":102589,"line_start":33,"line_end":33,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":103331,"byte_end":103334,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Bernoulli>::new","value":"fn (p: f64) -> Bernoulli","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Bernoulli` with the given probability of success `p`.","sig":null,"attributes":[{"value":"/ Construct a new `Bernoulli` with the given probability of success `p`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102748,"byte_end":102822,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102827,"byte_end":102830,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102835,"byte_end":102847,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102852,"byte_end":102855,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If `p < 0` or `p > 1`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102860,"byte_end":102886,"line_start":45,"line_end":45,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102891,"byte_end":102894,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Precision","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102899,"byte_end":102914,"line_start":47,"line_end":47,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102919,"byte_end":102922,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ For `p = 1.0`, the resulting distribution will always generate true.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102927,"byte_end":102999,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ For `p = 0.0`, the resulting distribution will always generate false.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":103004,"byte_end":103077,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":103082,"byte_end":103085,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This method is accurate for any input `p` in the range `[0, 1]` which is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":103090,"byte_end":103166,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ a multiple of 2<sup>-64</sup>. (Note that not all multiples of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":103171,"byte_end":103237,"line_start":53,"line_end":53,"column_start":5,"column_end":71}},{"value":"/ 2<sup>-64</sup> in `[0, 1]` can be represented as a `f64`.)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":103242,"byte_end":103305,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":103310,"byte_end":103319,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":920},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106774,"byte_end":106786,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"OpenClosed01","qualname":"::distributions::float::OpenClosed01","value":"","parent":null,"children":[],"decl_id":null,"docs":" A distribution to sample floating point numbers uniformly in the half-open\n interval `(0, 1]`, i.e. including 1 but not 0.","sig":null,"attributes":[{"value":"/ A distribution to sample floating point numbers uniformly in the half-open","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":105852,"byte_end":105930,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ interval `(0, 1]`, i.e. including 1 but not 0.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":105931,"byte_end":105981,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":105982,"byte_end":105985,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ All values that can be generated are of the form `n * ε/2`. For `f32`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":105986,"byte_end":106060,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ the 23 most significant random bits of a `u32` are used and for `f64` the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106061,"byte_end":106138,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ 53 most significant bits of a `u64` are used. The conversion uses the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106139,"byte_end":106212,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ multiplicative method.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106213,"byte_end":106239,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106240,"byte_end":106243,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ See also: [`Standard`] which samples from `[0, 1)`, [`Open01`]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106244,"byte_end":106310,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"/ which samples from `(0, 1)` and [`Uniform`] which samples from arbitrary","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106311,"byte_end":106387,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ ranges.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106388,"byte_end":106399,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106400,"byte_end":106403,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106404,"byte_end":106417,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106418,"byte_end":106425,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106426,"byte_end":106458,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/ use rand::distributions::OpenClosed01;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106459,"byte_end":106501,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106502,"byte_end":106505,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let val: f32 = thread_rng().sample(OpenClosed01);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106506,"byte_end":106559,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/ println!(\"f32 from (0, 1): {}\", val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106560,"byte_end":106601,"line_start":35,"line_end":35,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106602,"byte_end":106609,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106610,"byte_end":106613,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Standard`]: struct.Standard.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106614,"byte_end":106652,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/ [`Open01`]: struct.Open01.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106653,"byte_end":106687,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ [`Uniform`]: uniform/struct.Uniform.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106688,"byte_end":106732,"line_start":40,"line_end":40,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":927},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107686,"byte_end":107692,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"Open01","qualname":"::distributions::float::Open01","value":"","parent":null,"children":[],"decl_id":null,"docs":" A distribution to sample floating point numbers uniformly in the open\n interval `(0, 1)`, i.e. not including either endpoint.","sig":null,"attributes":[{"value":"/ A distribution to sample floating point numbers uniformly in the open","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106789,"byte_end":106862,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ interval `(0, 1)`, i.e. not including either endpoint.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106863,"byte_end":106921,"line_start":45,"line_end":45,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106922,"byte_end":106925,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ All values that can be generated are of the form `n * ε + ε/2`. For `f32`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":106926,"byte_end":107005,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ the 22 most significant random bits of an `u32` are used, for `f64` 52 from","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107006,"byte_end":107085,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ an `u64`. The conversion uses a transmute-based method.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107086,"byte_end":107145,"line_start":49,"line_end":49,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107146,"byte_end":107149,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ See also: [`Standard`] which samples from `[0, 1)`, [`OpenClosed01`]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107150,"byte_end":107222,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ which samples from `(0, 1]` and [`Uniform`] which samples from arbitrary","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107223,"byte_end":107299,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/ ranges.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107300,"byte_end":107311,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107312,"byte_end":107315,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107316,"byte_end":107329,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107330,"byte_end":107337,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107338,"byte_end":107370,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/ use rand::distributions::Open01;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107371,"byte_end":107407,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107408,"byte_end":107411,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let val: f32 = thread_rng().sample(Open01);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107412,"byte_end":107459,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/ println!(\"f32 from (0, 1): {}\", val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107460,"byte_end":107501,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107502,"byte_end":107509,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107510,"byte_end":107513,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`Standard`]: struct.Standard.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107514,"byte_end":107552,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/ [`OpenClosed01`]: struct.OpenClosed01.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107553,"byte_end":107599,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/ [`Uniform`]: uniform/struct.Uniform.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107600,"byte_end":107644,"line_start":66,"line_end":66,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":107734,"byte_end":107735,"line_start":72,"line_end":72,"column_start":10,"column_end":11},"name":"F","qualname":"::distributions::float::IntoFloat::F","value":"type F;","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":975},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117346,"byte_end":117358,"line_start":39,"line_end":39,"column_start":12,"column_end":24},"name":"Alphanumeric","qualname":"::distributions::other::Alphanumeric","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sample a `char`, uniformly distributed over ASCII letters and numbers:\n a-z, A-Z and 0-9.\n \n # Example","sig":null,"attributes":[{"value":"/ Sample a `char`, uniformly distributed over ASCII letters and numbers:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":116875,"byte_end":116949,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ a-z, A-Z and 0-9.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":116950,"byte_end":116971,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":116972,"byte_end":116976,"line_start":23,"line_end":23,"column_start":1,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":116977,"byte_end":116990,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":116991,"byte_end":116994,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":116995,"byte_end":117002,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use std::iter;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117003,"byte_end":117021,"line_start":27,"line_end":27,"column_start":1,"column_end":19}},{"value":"/ use rand::{Rng, thread_rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117022,"byte_end":117054,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ use rand::distributions::Alphanumeric;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117055,"byte_end":117097,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117098,"byte_end":117102,"line_start":30,"line_end":30,"column_start":1,"column_end":5}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117103,"byte_end":117134,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ let chars: String = iter::repeat(())","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117135,"byte_end":117175,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/         .map(|()| rng.sample(Alphanumeric))","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117176,"byte_end":117223,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .take(7)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117224,"byte_end":117244,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117245,"byte_end":117268,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ println!(\"Random chars: {}\", chars);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117269,"byte_end":117309,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117310,"byte_end":117317,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":134},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49995,"byte_end":50001,"line_start":221,"line_end":221,"column_start":11,"column_end":17},"name":"Sample","qualname":"::distributions::Sample","value":"Sample<Support>","parent":null,"children":[{"krate":0,"index":136}],"decl_id":null,"docs":" Types that can be used to create a random instance of `Support`.\n","sig":null,"attributes":[{"value":"/ Types that can be used to create a random instance of `Support`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49854,"byte_end":49922,"line_start":219,"line_end":219,"column_start":1,"column_end":69}},{"value":"deprecated(since = \"0.5.0\", note = \"use Distribution instead\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49923,"byte_end":49984,"line_start":220,"line_end":220,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50115,"byte_end":50121,"line_start":224,"line_end":224,"column_start":8,"column_end":14},"name":"sample","qualname":"::distributions::Sample::sample","value":"fn <R> (&mut self, rng: &mut R) -> Support","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Generate a random value of `Support`, using `rng` as the\n source of randomness.\n","sig":null,"attributes":[{"value":"/ Generate a random value of `Support`, using `rng` as the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50017,"byte_end":50077,"line_start":222,"line_end":222,"column_start":5,"column_end":65}},{"value":"/ source of randomness.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50082,"byte_end":50107,"line_start":223,"line_end":223,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":138},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50465,"byte_end":50482,"line_start":234,"line_end":234,"column_start":11,"column_end":28},"name":"IndependentSample","qualname":"::distributions::IndependentSample","value":"IndependentSample<Support>: Sample<Support>","parent":null,"children":[{"krate":0,"index":140}],"decl_id":null,"docs":" `Sample`s that do not require keeping track of state.","sig":null,"attributes":[{"value":"/ `Sample`s that do not require keeping track of state.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50169,"byte_end":50226,"line_start":227,"line_end":227,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50227,"byte_end":50230,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ Since no state is recorded, each sample is (statistically)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50231,"byte_end":50293,"line_start":229,"line_end":229,"column_start":1,"column_end":63}},{"value":"/ independent of all others, assuming the `Rng` used has this","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50294,"byte_end":50357,"line_start":230,"line_end":230,"column_start":1,"column_end":64}},{"value":"/ property.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50358,"byte_end":50371,"line_start":231,"line_end":231,"column_start":1,"column_end":14}},{"value":"allow(deprecated)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50372,"byte_end":50392,"line_start":232,"line_end":232,"column_start":1,"column_end":21}},{"value":"deprecated(since = \"0.5.0\", note = \"use Distribution instead\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50393,"byte_end":50454,"line_start":233,"line_end":233,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50551,"byte_end":50561,"line_start":236,"line_end":236,"column_start":8,"column_end":18},"name":"ind_sample","qualname":"::distributions::IndependentSample::ind_sample","value":"fn <R> (&self, &mut R) -> Support","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" Generate a random value.\n","sig":null,"attributes":[{"value":"/ Generate a random value.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50515,"byte_end":50543,"line_start":235,"line_end":235,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":142},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50719,"byte_end":50724,"line_start":241,"line_end":241,"column_start":9,"column_end":14},"name":"range","qualname":"::distributions::range","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144}],"decl_id":null,"docs":" DEPRECATED: Use `distributions::uniform` instead.\n","sig":null,"attributes":[{"value":"/ DEPRECATED: Use `distributions::uniform` instead.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50600,"byte_end":50653,"line_start":239,"line_end":239,"column_start":1,"column_end":54}},{"value":"deprecated(since = \"0.5.0\", note = \"use uniform instead\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50654,"byte_end":50710,"line_start":240,"line_end":240,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":173},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53382,"byte_end":53394,"line_start":315,"line_end":315,"column_start":11,"column_end":23},"name":"Distribution","qualname":"::distributions::Distribution","value":"Distribution<T>","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":177}],"decl_id":null,"docs":" Types (distributions) that can be used to create a random instance of `T`.","sig":null,"attributes":[{"value":"/ Types (distributions) that can be used to create a random instance of `T`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":52685,"byte_end":52763,"line_start":302,"line_end":302,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":52764,"byte_end":52767,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ It is possible to sample from a distribution through both the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":52768,"byte_end":52833,"line_start":304,"line_end":304,"column_start":1,"column_end":66}},{"value":"/ `Distribution` and [`Rng`] traits, via `distr.sample(&mut rng)` and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":52834,"byte_end":52905,"line_start":305,"line_end":305,"column_start":1,"column_end":72}},{"value":"/ `rng.sample(distr)`. They also both offer the [`sample_iter`] method, which","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":52906,"byte_end":52985,"line_start":306,"line_end":306,"column_start":1,"column_end":80}},{"value":"/ produces an iterator that samples from the distribution.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":52986,"byte_end":53046,"line_start":307,"line_end":307,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53047,"byte_end":53050,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ All implementations are expected to be immutable; this has the significant","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53051,"byte_end":53129,"line_start":309,"line_end":309,"column_start":1,"column_end":79}},{"value":"/ advantage of not needing to consider thread safety, and for most","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53130,"byte_end":53198,"line_start":310,"line_end":310,"column_start":1,"column_end":69}},{"value":"/ distributions efficient state-less sampling algorithms are available.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53199,"byte_end":53272,"line_start":311,"line_end":311,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53273,"byte_end":53276,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ [`Rng`]: ../trait.Rng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53277,"byte_end":53307,"line_start":313,"line_end":313,"column_start":1,"column_end":31}},{"value":"/ [`sample_iter`]: trait.Distribution.html#method.sample_iter","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53308,"byte_end":53371,"line_start":314,"line_end":314,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53488,"byte_end":53494,"line_start":317,"line_end":317,"column_start":8,"column_end":14},"name":"sample","qualname":"::distributions::Distribution::sample","value":"fn <R> (&self, rng: &mut R) -> T","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Generate a random value of `T`, using `rng` as the source of randomness.\n","sig":null,"attributes":[{"value":"/ Generate a random value of `T`, using `rng` as the source of randomness.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53404,"byte_end":53480,"line_start":316,"line_end":316,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54343,"byte_end":54354,"line_start":343,"line_end":343,"column_start":8,"column_end":19},"name":"sample_iter","qualname":"::distributions::Distribution::sample_iter","value":"fn <'a, R> (&'a self, rng: &'a mut R) -> DistIter<'a, Self, R, T>","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Create an iterator that generates random values of `T`, using `rng` as\n the source of randomness.","sig":null,"attributes":[{"value":"/ Create an iterator that generates random values of `T`, using `rng` as","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53543,"byte_end":53617,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ the source of randomness.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53622,"byte_end":53651,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53656,"byte_end":53659,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53664,"byte_end":53677,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53682,"byte_end":53685,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53690,"byte_end":53697,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ use rand::thread_rng;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53702,"byte_end":53727,"line_start":325,"line_end":325,"column_start":5,"column_end":30}},{"value":"/ use rand::distributions::{Distribution, Alphanumeric, Uniform, Standard};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53732,"byte_end":53809,"line_start":326,"line_end":326,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53814,"byte_end":53817,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53822,"byte_end":53853,"line_start":328,"line_end":328,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53858,"byte_end":53861,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ // Vec of 16 x f32:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53866,"byte_end":53889,"line_start":330,"line_end":330,"column_start":5,"column_end":28}},{"value":"/ let v: Vec<f32> = Standard.sample_iter(&mut rng).take(16).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53894,"byte_end":53966,"line_start":331,"line_end":331,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53971,"byte_end":53974,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // String:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53979,"byte_end":53993,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/ let s: String = Alphanumeric.sample_iter(&mut rng).take(7).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53998,"byte_end":54071,"line_start":334,"line_end":334,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54076,"byte_end":54079,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ // Dice-rolling:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54084,"byte_end":54104,"line_start":336,"line_end":336,"column_start":5,"column_end":25}},{"value":"/ let die_range = Uniform::new_inclusive(1, 6);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54109,"byte_end":54158,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/ let mut roll_die = die_range.sample_iter(&mut rng);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54163,"byte_end":54218,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ while roll_die.next().unwrap() != 6 {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54223,"byte_end":54264,"line_start":339,"line_end":339,"column_start":5,"column_end":46}},{"value":"/     println!(\"Not a 6; rolling again!\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54269,"byte_end":54313,"line_start":340,"line_end":340,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54318,"byte_end":54323,"line_start":341,"line_end":341,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54328,"byte_end":54335,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55127,"byte_end":55135,"line_start":370,"line_end":370,"column_start":12,"column_end":20},"name":"DistIter","qualname":"::distributions::DistIter","value":"DistIter {  }","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298}],"decl_id":null,"docs":" An iterator that generates random values of `T` with distribution `D`,\n using `R` as the source of randomness.","sig":null,"attributes":[{"value":"/ An iterator that generates random values of `T` with distribution `D`,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54747,"byte_end":54821,"line_start":361,"line_end":361,"column_start":1,"column_end":75}},{"value":"/ using `R` as the source of randomness.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54822,"byte_end":54864,"line_start":362,"line_end":362,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54865,"byte_end":54868,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`sample_iter`] method on [`Distribution`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54869,"byte_end":54948,"line_start":364,"line_end":364,"column_start":1,"column_end":80}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54949,"byte_end":54984,"line_start":365,"line_end":365,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54985,"byte_end":54988,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`Distribution`]: trait.Distribution.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54989,"byte_end":55034,"line_start":367,"line_end":367,"column_start":1,"column_end":46}},{"value":"/ [`sample_iter`]: trait.Distribution.html#method.sample_iter","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55035,"byte_end":55098,"line_start":368,"line_end":368,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58338,"byte_end":58346,"line_start":450,"line_end":450,"column_start":12,"column_end":20},"name":"Standard","qualname":"::distributions::Standard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A generic random value distribution, implemented for many primitive types.\n Usually generates values with a numerically uniform distribution, and with a\n range appropriate to the type.\n \n ## Built-in Implementations","sig":null,"attributes":[{"value":"/ A generic random value distribution, implemented for many primitive types.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55568,"byte_end":55646,"line_start":392,"line_end":392,"column_start":1,"column_end":79}},{"value":"/ Usually generates values with a numerically uniform distribution, and with a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55647,"byte_end":55727,"line_start":393,"line_end":393,"column_start":1,"column_end":81}},{"value":"/ range appropriate to the type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55728,"byte_end":55762,"line_start":394,"line_end":394,"column_start":1,"column_end":35}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55763,"byte_end":55767,"line_start":395,"line_end":395,"column_start":1,"column_end":5}},{"value":"/ ## Built-in Implementations","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55768,"byte_end":55799,"line_start":396,"line_end":396,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55800,"byte_end":55803,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ Assuming the provided `Rng` is well-behaved, these implementations","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55804,"byte_end":55874,"line_start":398,"line_end":398,"column_start":1,"column_end":71}},{"value":"/ generate values with the following ranges and distributions:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55875,"byte_end":55939,"line_start":399,"line_end":399,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55940,"byte_end":55943,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ * Integers (`i32`, `u32`, `isize`, `usize`, etc.): Uniformly distributed","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55944,"byte_end":56020,"line_start":401,"line_end":401,"column_start":1,"column_end":77}},{"value":"/   over all values of the type.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56021,"byte_end":56055,"line_start":402,"line_end":402,"column_start":1,"column_end":35}},{"value":"/ * `char`: Uniformly distributed over all Unicode scalar values, i.e. all","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56056,"byte_end":56132,"line_start":403,"line_end":403,"column_start":1,"column_end":77}},{"value":"/   code points in the range `0...0x10_FFFF`, except for the range","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56133,"byte_end":56201,"line_start":404,"line_end":404,"column_start":1,"column_end":69}},{"value":"/   `0xD800...0xDFFF` (the surrogate code points). This includes","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56202,"byte_end":56268,"line_start":405,"line_end":405,"column_start":1,"column_end":67}},{"value":"/   unassigned/reserved code points.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56269,"byte_end":56307,"line_start":406,"line_end":406,"column_start":1,"column_end":39}},{"value":"/ * `bool`: Generates `false` or `true`, each with probability 0.5.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56308,"byte_end":56377,"line_start":407,"line_end":407,"column_start":1,"column_end":70}},{"value":"/ * Floating point types (`f32` and `f64`): Uniformly distributed in the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56378,"byte_end":56452,"line_start":408,"line_end":408,"column_start":1,"column_end":75}},{"value":"/   half-open range `[0, 1)`. See notes below.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56453,"byte_end":56501,"line_start":409,"line_end":409,"column_start":1,"column_end":49}},{"value":"/ * Wrapping integers (`Wrapping<T>`), besides the type identical to their","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56502,"byte_end":56578,"line_start":410,"line_end":410,"column_start":1,"column_end":77}},{"value":"/   normal integer variants.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56579,"byte_end":56609,"line_start":411,"line_end":411,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56610,"byte_end":56613,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ The following aggregate types also implement the distribution `Standard` as","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56614,"byte_end":56693,"line_start":413,"line_end":413,"column_start":1,"column_end":80}},{"value":"/ long as their component types implement it:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56694,"byte_end":56741,"line_start":414,"line_end":414,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56742,"byte_end":56745,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/ * Tuples and arrays: Each element of the tuple or array is generated","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56746,"byte_end":56818,"line_start":416,"line_end":416,"column_start":1,"column_end":73}},{"value":"/   independently, using the `Standard` distribution recursively.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56819,"byte_end":56886,"line_start":417,"line_end":417,"column_start":1,"column_end":68}},{"value":"/ * `Option<T>` where `Standard` is implemented for `T`: Returns `None` with","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56887,"byte_end":56965,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   probability 0.5; otherwise generates a random `x: T` and returns `Some(x)`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":56966,"byte_end":57047,"line_start":419,"line_end":419,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57048,"byte_end":57051,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57052,"byte_end":57065,"line_start":421,"line_end":421,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57066,"byte_end":57073,"line_start":422,"line_end":422,"column_start":1,"column_end":8}},{"value":"/ use rand::prelude::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57074,"byte_end":57099,"line_start":423,"line_end":423,"column_start":1,"column_end":26}},{"value":"/ use rand::distributions::Standard;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57100,"byte_end":57138,"line_start":424,"line_end":424,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57139,"byte_end":57142,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ let val: f32 = SmallRng::from_entropy().sample(Standard);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57143,"byte_end":57204,"line_start":426,"line_end":426,"column_start":1,"column_end":62}},{"value":"/ println!(\"f32 from [0, 1): {}\", val);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57205,"byte_end":57246,"line_start":427,"line_end":427,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57247,"byte_end":57254,"line_start":428,"line_end":428,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57255,"byte_end":57258,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ # Floating point implementation","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57259,"byte_end":57294,"line_start":430,"line_end":430,"column_start":1,"column_end":36}},{"value":"/ The floating point implementations for `Standard` generate a random value in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57295,"byte_end":57375,"line_start":431,"line_end":431,"column_start":1,"column_end":81}},{"value":"/ the half-open interval `[0, 1)`, i.e. including 0 but not 1.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57376,"byte_end":57440,"line_start":432,"line_end":432,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57441,"byte_end":57444,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ All values that can be generated are of the form `n * ε/2`. For `f32`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57445,"byte_end":57519,"line_start":434,"line_end":434,"column_start":1,"column_end":74}},{"value":"/ the 23 most significant random bits of a `u32` are used and for `f64` the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57520,"byte_end":57597,"line_start":435,"line_end":435,"column_start":1,"column_end":78}},{"value":"/ 53 most significant bits of a `u64` are used. The conversion uses the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57598,"byte_end":57671,"line_start":436,"line_end":436,"column_start":1,"column_end":74}},{"value":"/ multiplicative method: `(rng.gen::<$uty>() >> N) as $ty * (ε/2)`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57672,"byte_end":57742,"line_start":437,"line_end":437,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57743,"byte_end":57746,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ See also: [`Open01`] which samples from `(0, 1)`, [`OpenClosed01`] which","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57747,"byte_end":57823,"line_start":439,"line_end":439,"column_start":1,"column_end":77}},{"value":"/ samples from `(0, 1]` and `Rng::gen_range(0, 1)` which also samples from","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57824,"byte_end":57900,"line_start":440,"line_end":440,"column_start":1,"column_end":77}},{"value":"/ `[0, 1)`. Note that `Open01` and `gen_range` (which uses [`Uniform`]) use","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57901,"byte_end":57978,"line_start":441,"line_end":441,"column_start":1,"column_end":78}},{"value":"/ transmute-based methods which yield 1 bit less precision but may perform","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":57979,"byte_end":58055,"line_start":442,"line_end":442,"column_start":1,"column_end":77}},{"value":"/ faster on some architectures (on modern Intel CPUs all methods have","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58056,"byte_end":58127,"line_start":443,"line_end":443,"column_start":1,"column_end":72}},{"value":"/ approximately equal performance).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58128,"byte_end":58165,"line_start":444,"line_end":444,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58166,"byte_end":58169,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ [`Open01`]: struct.Open01.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58170,"byte_end":58204,"line_start":446,"line_end":446,"column_start":1,"column_end":35}},{"value":"/ [`OpenClosed01`]: struct.OpenClosed01.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58205,"byte_end":58251,"line_start":447,"line_end":447,"column_start":1,"column_end":47}},{"value":"/ [`Uniform`]: uniform/struct.Uniform.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58252,"byte_end":58296,"line_start":448,"line_end":448,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1312},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58616,"byte_end":58624,"line_start":462,"line_end":462,"column_start":12,"column_end":20},"name":"Weighted","qualname":"::distributions::Weighted","value":"Weighted { weight, item }","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1315}],"decl_id":null,"docs":" A value with a particular weight for use with `WeightedChoice`.\n","sig":null,"attributes":[{"value":"/ A value with a particular weight for use with `WeightedChoice`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58507,"byte_end":58574,"line_start":460,"line_end":460,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1314},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58680,"byte_end":58686,"line_start":464,"line_end":464,"column_start":9,"column_end":15},"name":"weight","qualname":"::distributions::Weighted::weight","value":"u32","parent":{"krate":0,"index":1312},"children":[],"decl_id":null,"docs":" The numerical weight of this item\n","sig":null,"attributes":[{"value":"/ The numerical weight of this item","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58634,"byte_end":58671,"line_start":463,"line_end":463,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1315},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58749,"byte_end":58753,"line_start":466,"line_end":466,"column_start":9,"column_end":13},"name":"item","qualname":"::distributions::Weighted::item","value":"T","parent":{"krate":0,"index":1312},"children":[],"decl_id":null,"docs":" The actual item which is being weighted\n","sig":null,"attributes":[{"value":"/ The actual item which is being weighted","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58697,"byte_end":58740,"line_start":465,"line_end":465,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1324},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59711,"byte_end":59725,"line_start":494,"line_end":494,"column_start":12,"column_end":26},"name":"WeightedChoice","qualname":"::distributions::WeightedChoice","value":"WeightedChoice {  }","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328}],"decl_id":null,"docs":" A distribution that selects from a finite collection of weighted items.","sig":null,"attributes":[{"value":"/ A distribution that selects from a finite collection of weighted items.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58761,"byte_end":58836,"line_start":469,"line_end":469,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58837,"byte_end":58840,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ Each item has an associated weight that influences how likely it","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58841,"byte_end":58909,"line_start":471,"line_end":471,"column_start":1,"column_end":69}},{"value":"/ is to be chosen: higher weight is more likely.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58910,"byte_end":58960,"line_start":472,"line_end":472,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58961,"byte_end":58964,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ The `Clone` restriction is a limitation of the `Distribution` trait.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58965,"byte_end":59037,"line_start":474,"line_end":474,"column_start":1,"column_end":73}},{"value":"/ Note that `&T` is (cheaply) `Clone` for all `T`, as is `u32`, so one can","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59038,"byte_end":59114,"line_start":475,"line_end":475,"column_start":1,"column_end":77}},{"value":"/ store references or indices into another vector.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59115,"byte_end":59167,"line_start":476,"line_end":476,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59168,"byte_end":59171,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59172,"byte_end":59185,"line_start":478,"line_end":478,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59186,"byte_end":59189,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59190,"byte_end":59197,"line_start":480,"line_end":480,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{Weighted, WeightedChoice, Distribution};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59198,"byte_end":59268,"line_start":481,"line_end":481,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59269,"byte_end":59272,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ let mut items = vec!(Weighted { weight: 2, item: 'a' },","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59273,"byte_end":59332,"line_start":483,"line_end":483,"column_start":1,"column_end":60}},{"value":"/                      Weighted { weight: 4, item: 'b' },","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59333,"byte_end":59392,"line_start":484,"line_end":484,"column_start":1,"column_end":60}},{"value":"/                      Weighted { weight: 1, item: 'c' });","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59393,"byte_end":59453,"line_start":485,"line_end":485,"column_start":1,"column_end":61}},{"value":"/ let wc = WeightedChoice::new(&mut items);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59454,"byte_end":59499,"line_start":486,"line_end":486,"column_start":1,"column_end":46}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59500,"byte_end":59537,"line_start":487,"line_end":487,"column_start":1,"column_end":38}},{"value":"/ for _ in 0..16 {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59538,"byte_end":59558,"line_start":488,"line_end":488,"column_start":1,"column_end":21}},{"value":"/      // on average prints 'a' 4 times, 'b' 8 and 'c' twice.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59559,"byte_end":59622,"line_start":489,"line_end":489,"column_start":1,"column_end":64}},{"value":"/      println!(\"{}\", wc.sample(&mut rng));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59623,"byte_end":59668,"line_start":490,"line_end":490,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59669,"byte_end":59674,"line_start":491,"line_end":491,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59675,"byte_end":59682,"line_start":492,"line_end":492,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":60057,"byte_end":60060,"line_start":507,"line_end":507,"column_start":12,"column_end":15},"name":"new","qualname":"<WeightedChoice>::new","value":"fn (items: &'a mut [Weighted<T>]) -> WeightedChoice<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `WeightedChoice`.","sig":null,"attributes":[{"value":"/ Create a new `WeightedChoice`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59854,"byte_end":59888,"line_start":500,"line_end":500,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59893,"byte_end":59896,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Panics if:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59901,"byte_end":59915,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59920,"byte_end":59923,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ - `items` is empty","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59928,"byte_end":59950,"line_start":504,"line_end":504,"column_start":5,"column_end":27}},{"value":"/ - the total weight is 0","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59955,"byte_end":59982,"line_start":505,"line_end":505,"column_start":5,"column_end":32}},{"value":"/ - the total weight is larger than a `u32` can contain.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59987,"byte_end":60045,"line_start":506,"line_end":506,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":207},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":212}],"decl_id":null,"docs":" Convenience re-export of common members","sig":null,"attributes":[{"value":"! Convenience re-export of common members","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":123405,"byte_end":123448,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":123449,"byte_end":123452,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Like the standard library's prelude, this module simplifies importing of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":123453,"byte_end":123529,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"! common items. Unlike the standard prelude, the contents of this module must","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":123530,"byte_end":123609,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"! be imported manually:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":123610,"byte_end":123635,"line_start":15,"line_end":15,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":123636,"byte_end":123639,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":123640,"byte_end":123647,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"! use rand::prelude::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":123648,"byte_end":123673,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"! # let _ = StdRng::from_entropy();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":123674,"byte_end":123711,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"! # let mut r = SmallRng::from_rng(thread_rng()).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":123712,"byte_end":123772,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"! # let _: f32 = r.gen();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":123773,"byte_end":123800,"line_start":21,"line_end":21,"column_start":1,"column_end":28}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":123801,"byte_end":123808,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":217},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prng","qualname":"::prng","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":266},{"krate":0,"index":311},{"krate":0,"index":373},{"krate":0,"index":436},{"krate":0,"index":466},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492}],"decl_id":null,"docs":" Pseudo-random number generators.","sig":null,"attributes":[{"value":"! Pseudo-random number generators.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":124602,"byte_end":124638,"line_start":11,"line_end":11,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":124639,"byte_end":124642,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Pseudo-random number generators are algorithms to produce apparently random","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":124643,"byte_end":124722,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"! numbers deterministically, and usually fairly quickly. See the documentation","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":124723,"byte_end":124803,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"! of the [`rngs` module] for some introduction to PRNGs.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":124804,"byte_end":124862,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":124863,"byte_end":124866,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! As mentioned there, PRNGs fall in two broad categories:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":124867,"byte_end":124926,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":124927,"byte_end":124930,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! - [basic PRNGs], primarily designed for simulations","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":124931,"byte_end":124986,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"! - [CSPRNGs], primarily designed for cryptography","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":124987,"byte_end":125039,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125040,"byte_end":125043,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! In simple terms, the basic PRNGs are often predictable; CSPRNGs should not","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125044,"byte_end":125122,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"! be predictable *when used correctly*.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125123,"byte_end":125164,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"! ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125165,"byte_end":125169,"line_start":24,"line_end":24,"column_start":1,"column_end":5}},{"value":"! Contents of this documentation:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125170,"byte_end":125205,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125206,"byte_end":125209,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! 1. [The generators](#the-generators)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125210,"byte_end":125250,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"! 1. [Performance and size](#performance)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125251,"byte_end":125294,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"! 1. [Quality and cycle length](#quality)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125295,"byte_end":125338,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"! 1. [Security](#security)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125339,"byte_end":125367,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"! 1. [Extra features](#extra-features)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125368,"byte_end":125408,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"! 1. [Further reading](#further-reading)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125409,"byte_end":125451,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125452,"byte_end":125455,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125456,"byte_end":125459,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! # The generators","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125460,"byte_end":125480,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125481,"byte_end":125484,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! ## Basic pseudo-random number generators (PRNGs)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125485,"byte_end":125537,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125538,"byte_end":125541,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! The goal of regular, non-cryptographic PRNGs is usually to find a good","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125542,"byte_end":125616,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"! balance between simplicity, quality, memory usage and performance. These","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125617,"byte_end":125693,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"! algorithms are very important to Monte Carlo simulations, and also suitable","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125694,"byte_end":125773,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"! for several other problems such as randomized algorithms and games (except","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125774,"byte_end":125852,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"! where there is a risk of players predicting the next output value from","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125853,"byte_end":125927,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"! previous values, in which case a CSPRNG should be used).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125928,"byte_end":125988,"line_start":44,"line_end":44,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125989,"byte_end":125992,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! Currently Rand provides only one PRNG, and not a very good one at that:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":125993,"byte_end":126068,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":126069,"byte_end":126072,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! | name | full name | performance | memory | quality | period | features |","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":126073,"byte_end":126150,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"! |------|-----------|-------------|--------|---------|--------|----------|","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":126151,"byte_end":126228,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"! | [`XorShiftRng`] | Xorshift 32/128 | ★★★☆☆ | 16 bytes | ★☆☆☆☆ | `u32` * 2<sup>128</sup> - 1 | — |","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":126229,"byte_end":126353,"line_start":50,"line_end":50,"column_start":1,"column_end":103}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":126354,"byte_end":126357,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! ## Cryptographically secure pseudo-random number generators (CSPRNGs)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":127212,"byte_end":127285,"line_start":72,"line_end":72,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":127286,"byte_end":127289,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! CSPRNGs have much higher requirements than basic PRNGs. The primary","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":127290,"byte_end":127361,"line_start":74,"line_end":74,"column_start":1,"column_end":72}},{"value":"! consideration is security. Performance and simplicity are also important,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":127362,"byte_end":127439,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"! but in general CSPRNGs are more complex and slower than regular PRNGs.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":127440,"byte_end":127514,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"! Quality is no longer a concern, as it is a requirement for a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":127515,"byte_end":127579,"line_start":77,"line_end":77,"column_start":1,"column_end":65}},{"value":"! CSPRNG that the output is basically indistinguishable from true randomness","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":127580,"byte_end":127658,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"! since any bias or correlation makes the output more predictable.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":127659,"byte_end":127727,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":127728,"byte_end":127731,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! There is a close relationship between CSPRNGs and cryptographic ciphers.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":127732,"byte_end":127808,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"! Any block cipher can be turned into a CSPRNG by encrypting a counter. Stream","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":127809,"byte_end":127889,"line_start":82,"line_end":82,"column_start":1,"column_end":81}},{"value":"! ciphers are basically a CSPRNG and a combining operation, usually XOR. This","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":127890,"byte_end":127969,"line_start":83,"line_end":83,"column_start":1,"column_end":80}},{"value":"! means that we can easily use any stream cipher as a CSPRNG.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":127970,"byte_end":128033,"line_start":84,"line_end":84,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128034,"byte_end":128037,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! Rand currently provides two trustworthy CSPRNGs and two CSPRNG-like PRNGs:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128038,"byte_end":128116,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128117,"byte_end":128120,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! | name | full name |  performance | initialization | memory | predictability | forward secrecy |","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128121,"byte_end":128221,"line_start":88,"line_end":88,"column_start":1,"column_end":101}},{"value":"! |------|-----------|--------------|--------------|----------|----------------|-------------------------|","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128222,"byte_end":128330,"line_start":89,"line_end":89,"column_start":1,"column_end":109}},{"value":"! | [`ChaChaRng`] | ChaCha20 | ★☆☆☆☆ | fast | 136 bytes | secure | no |","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128331,"byte_end":128414,"line_start":90,"line_end":90,"column_start":1,"column_end":74}},{"value":"! | [`Hc128Rng`] | HC-128 | ★★☆☆☆ | slow | 4176 bytes | secure | no |","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128415,"byte_end":128496,"line_start":91,"line_end":91,"column_start":1,"column_end":72}},{"value":"! | [`IsaacRng`] | ISAAC | ★★☆☆☆ | slow | 2072 bytes | unknown | unknown |","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128497,"byte_end":128583,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"! | [`Isaac64Rng`] | ISAAC-64 | ★★☆☆☆ | slow | 4136 bytes| unknown | unknown |","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128584,"byte_end":128674,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128675,"byte_end":128678,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! It should be noted that the ISAAC generators are only included for","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128679,"byte_end":128749,"line_start":95,"line_end":95,"column_start":1,"column_end":71}},{"value":"! historical reasons, they have been with the Rust language since the very","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128750,"byte_end":128826,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"! beginning. They have good quality output and no attacks are known, but have","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128827,"byte_end":128906,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"! received little attention from cryptography experts.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128907,"byte_end":128963,"line_start":98,"line_end":98,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128964,"byte_end":128967,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128968,"byte_end":128971,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! # Performance","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128972,"byte_end":128989,"line_start":101,"line_end":101,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128990,"byte_end":128993,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! First it has to be said most PRNGs are very fast, and will rarely be a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":128994,"byte_end":129068,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"! performance bottleneck.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129069,"byte_end":129096,"line_start":104,"line_end":104,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129097,"byte_end":129100,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"! Performance of basic PRNGs is a bit of a subtle thing. It depends a lot on","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129101,"byte_end":129179,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"! the CPU architecture (32 vs. 64 bits), inlining, and also on the number of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129180,"byte_end":129258,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"! available registers. This often causes the performance to be affected by","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129259,"byte_end":129335,"line_start":108,"line_end":108,"column_start":1,"column_end":77}},{"value":"! surrounding code due to inlining and other usage of registers.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129336,"byte_end":129402,"line_start":109,"line_end":109,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129403,"byte_end":129406,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! When choosing a PRNG for performance it is important to benchmark your own","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129407,"byte_end":129485,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"! application due to interactions between PRNGs and surrounding code and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129486,"byte_end":129560,"line_start":112,"line_end":112,"column_start":1,"column_end":75}},{"value":"! dependence on the CPU architecture as well as the impact of the size of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129561,"byte_end":129636,"line_start":113,"line_end":113,"column_start":1,"column_end":76}},{"value":"! data requested. Because of all this, we do not include performance numbers","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129637,"byte_end":129715,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"! here but merely a qualitative rating.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129716,"byte_end":129757,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129758,"byte_end":129761,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! CSPRNGs are a little different in that they typically generate a block of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129762,"byte_end":129839,"line_start":117,"line_end":117,"column_start":1,"column_end":78}},{"value":"! output in a cache, and pull outputs from the cache. This allows them to have","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129840,"byte_end":129920,"line_start":118,"line_end":118,"column_start":1,"column_end":81}},{"value":"! good amortised performance, and reduces or completely removes the influence","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":129921,"byte_end":130000,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"! of surrounding code on the CSPRNG performance.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130001,"byte_end":130051,"line_start":120,"line_end":120,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130052,"byte_end":130055,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! ### Worst-case performance","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130056,"byte_end":130086,"line_start":122,"line_end":122,"column_start":1,"column_end":31}},{"value":"! Because CSPRNGs usually produce a block of values into a cache, they have","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130087,"byte_end":130164,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"! poor worst case performance (in contrast to basic PRNGs, where the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130165,"byte_end":130235,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"! performance is usually quite regular).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130236,"byte_end":130278,"line_start":125,"line_end":125,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130279,"byte_end":130282,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! ## State size","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130283,"byte_end":130300,"line_start":127,"line_end":127,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130301,"byte_end":130304,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! Simple PRNGs often use very little memory, commonly only a few words, where","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130305,"byte_end":130384,"line_start":129,"line_end":129,"column_start":1,"column_end":80}},{"value":"! a *word* is usually either `u32` or `u64`. This is not true for all","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130385,"byte_end":130456,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"! non-cryptographic PRNGs however, for example the historically popular","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130457,"byte_end":130530,"line_start":131,"line_end":131,"column_start":1,"column_end":74}},{"value":"! Mersenne Twister MT19937 algorithm requires 2.5 kB of state.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130531,"byte_end":130595,"line_start":132,"line_end":132,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130596,"byte_end":130599,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"! CSPRNGs typically require more memory; since the seed size is recommended","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130600,"byte_end":130677,"line_start":134,"line_end":134,"column_start":1,"column_end":78}},{"value":"! to be at least 192 bits and some more may be required for the algorithm,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130678,"byte_end":130754,"line_start":135,"line_end":135,"column_start":1,"column_end":77}},{"value":"! 256 bits would be approximately the minimum secure size. In practice,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130755,"byte_end":130828,"line_start":136,"line_end":136,"column_start":1,"column_end":74}},{"value":"! CSPRNGs tend to use quite a bit more, [`ChaChaRng`] is relatively small with","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130829,"byte_end":130909,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"! 136 bytes of state.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130910,"byte_end":130933,"line_start":138,"line_end":138,"column_start":1,"column_end":24}},{"value":"! ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130934,"byte_end":130938,"line_start":139,"line_end":139,"column_start":1,"column_end":5}},{"value":"! ## Initialization time","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130939,"byte_end":130965,"line_start":140,"line_end":140,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130966,"byte_end":130969,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"! The time required to initialize new generators varies significantly. Many","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":130970,"byte_end":131047,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"! simple PRNGs and even some cryptographic ones (including [`ChaChaRng`])","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131048,"byte_end":131123,"line_start":143,"line_end":143,"column_start":1,"column_end":76}},{"value":"! only need to copy the seed value and some constants into their state, and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131124,"byte_end":131201,"line_start":144,"line_end":144,"column_start":1,"column_end":78}},{"value":"! thus can be constructed very quickly. In contrast, CSPRNGs with large state","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131202,"byte_end":131281,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"! require an expensive key-expansion.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131282,"byte_end":131321,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131322,"byte_end":131325,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"! # Quality","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131326,"byte_end":131339,"line_start":148,"line_end":148,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131340,"byte_end":131343,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! Many basic PRNGs are not much more than a couple of bitwise and arithmetic","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131344,"byte_end":131422,"line_start":150,"line_end":150,"column_start":1,"column_end":79}},{"value":"! operations. Their simplicity gives good performance, but also means there","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131423,"byte_end":131500,"line_start":151,"line_end":151,"column_start":1,"column_end":78}},{"value":"! are small regularities hidden in the generated random number stream.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131501,"byte_end":131573,"line_start":152,"line_end":152,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131574,"byte_end":131577,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! How much do those hidden regularities matter? That is hard to say, and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131578,"byte_end":131652,"line_start":154,"line_end":154,"column_start":1,"column_end":75}},{"value":"! depends on how the RNG gets used. If there happen to be correlations between","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131653,"byte_end":131733,"line_start":155,"line_end":155,"column_start":1,"column_end":81}},{"value":"! the random numbers and the algorithm they are used in, the results can be","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131734,"byte_end":131811,"line_start":156,"line_end":156,"column_start":1,"column_end":78}},{"value":"! wrong or misleading.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131812,"byte_end":131836,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131837,"byte_end":131840,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! A random number generator can be considered good if it gives the correct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131841,"byte_end":131917,"line_start":159,"line_end":159,"column_start":1,"column_end":77}},{"value":"! results in as many applications as possible. The quality of PRNG","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131918,"byte_end":131986,"line_start":160,"line_end":160,"column_start":1,"column_end":69}},{"value":"! algorithms can be evaluated to some extend analytically, to determine the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":131987,"byte_end":132064,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"! cycle length and to rule out some correlations. Then there are empirical","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132065,"byte_end":132141,"line_start":162,"line_end":162,"column_start":1,"column_end":77}},{"value":"! test suites designed to test how well a PRNG performs on a wide range of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132142,"byte_end":132218,"line_start":163,"line_end":163,"column_start":1,"column_end":77}},{"value":"! possible uses, the latest and most complete of which are [TestU01] and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132219,"byte_end":132293,"line_start":164,"line_end":164,"column_start":1,"column_end":75}},{"value":"! [PractRand].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132294,"byte_end":132310,"line_start":165,"line_end":165,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132311,"byte_end":132314,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"! CSPRNGs tend to be more complex, and have an explicit requirement to be","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132315,"byte_end":132390,"line_start":167,"line_end":167,"column_start":1,"column_end":76}},{"value":"! unpredictable. This implies there must be no obvious correlations between","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132391,"byte_end":132468,"line_start":168,"line_end":168,"column_start":1,"column_end":78}},{"value":"! output values.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132469,"byte_end":132487,"line_start":169,"line_end":169,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132488,"byte_end":132491,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"! ### Quality stars:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132492,"byte_end":132514,"line_start":171,"line_end":171,"column_start":1,"column_end":23}},{"value":"! PRNGs with 3 stars or more should be good enough for any purpose.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132515,"byte_end":132584,"line_start":172,"line_end":172,"column_start":1,"column_end":70}},{"value":"! 1 or 2 stars may be good enough for typical apps and games, but do not work","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132585,"byte_end":132664,"line_start":173,"line_end":173,"column_start":1,"column_end":80}},{"value":"! well with all algorithms.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132665,"byte_end":132694,"line_start":174,"line_end":174,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132695,"byte_end":132698,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"! ## Period","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132699,"byte_end":132712,"line_start":176,"line_end":176,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132713,"byte_end":132716,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! The *period* or *cycle length* of a PRNG is the number of values that can be","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132717,"byte_end":132797,"line_start":178,"line_end":178,"column_start":1,"column_end":81}},{"value":"! generated after which it starts repeating the same random number stream.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132798,"byte_end":132874,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"! Many PRNGs have a fixed-size period, but for some only an expected average","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132875,"byte_end":132953,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"! cycle length can be given, where the exact length depends on the seed.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":132954,"byte_end":133028,"line_start":181,"line_end":181,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133029,"byte_end":133032,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"! On today's hardware, even a fast RNG with a cycle length of *only*","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133033,"byte_end":133103,"line_start":183,"line_end":183,"column_start":1,"column_end":71}},{"value":"! 2<sup>64</sup> can be used for centuries before cycling. Yet we recommend a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133104,"byte_end":133183,"line_start":184,"line_end":184,"column_start":1,"column_end":80}},{"value":"! period of 2<sup>128</sup> or more, which most modern PRNGs satisfy.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133184,"byte_end":133255,"line_start":185,"line_end":185,"column_start":1,"column_end":72}},{"value":"! Alternatively a PRNG with shorter period but support for multiple streams","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133256,"byte_end":133333,"line_start":186,"line_end":186,"column_start":1,"column_end":78}},{"value":"! may be chosen. There are two reasons for this, as follows.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133334,"byte_end":133396,"line_start":187,"line_end":187,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133397,"byte_end":133400,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"! If we see the entire period of an RNG as one long random number stream,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133401,"byte_end":133476,"line_start":189,"line_end":189,"column_start":1,"column_end":76}},{"value":"! every independently seeded RNG returns a slice of that stream. When multiple","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133477,"byte_end":133557,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"! RNG are seeded randomly, there is an increasingly large chance to end up","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133558,"byte_end":133634,"line_start":191,"line_end":191,"column_start":1,"column_end":77}},{"value":"! with a partially overlapping slice of the stream.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133635,"byte_end":133688,"line_start":192,"line_end":192,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133689,"byte_end":133692,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"! If the period of the RNG is 2<sup>128</sup>, and an application consumes","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133693,"byte_end":133769,"line_start":194,"line_end":194,"column_start":1,"column_end":77}},{"value":"! 2<sup>48</sup> values, it then takes about 2<sup>32</sup> random","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133770,"byte_end":133838,"line_start":195,"line_end":195,"column_start":1,"column_end":69}},{"value":"! initializations to have a chance of 1 in a million to repeat part of an","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133839,"byte_end":133914,"line_start":196,"line_end":196,"column_start":1,"column_end":76}},{"value":"! already used stream. This seems good enough for common usage of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133915,"byte_end":133982,"line_start":197,"line_end":197,"column_start":1,"column_end":68}},{"value":"! non-cryptographic generators, hence the recommendation of at least","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":133983,"byte_end":134053,"line_start":198,"line_end":198,"column_start":1,"column_end":71}},{"value":"! 2<sup>128</sup>. As an estimate, the chance of any overlap in a period of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134054,"byte_end":134131,"line_start":199,"line_end":199,"column_start":1,"column_end":78}},{"value":"! size `p` with `n` independent seeds and `u` values used per seed is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134132,"byte_end":134203,"line_start":200,"line_end":200,"column_start":1,"column_end":72}},{"value":"! approximately `1 - e^(-u * n^2 / (2 * p))`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134204,"byte_end":134251,"line_start":201,"line_end":201,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134252,"byte_end":134255,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"! Further, it is not recommended to use the full period of an RNG. Many","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134256,"byte_end":134329,"line_start":203,"line_end":203,"column_start":1,"column_end":74}},{"value":"! PRNGs have a property called *k-dimensional equidistribution*, meaning that","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134330,"byte_end":134409,"line_start":204,"line_end":204,"column_start":1,"column_end":80}},{"value":"! for values of some size (potentially larger than the output size), all","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134410,"byte_end":134484,"line_start":205,"line_end":205,"column_start":1,"column_end":75}},{"value":"! possible values are produced the same number of times over the generator's","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134485,"byte_end":134563,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"! period. This is not a property of true randomness. This is known as the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134564,"byte_end":134639,"line_start":207,"line_end":207,"column_start":1,"column_end":76}},{"value":"! generalized birthday problem, see the [PCG paper] for a good explanation.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134640,"byte_end":134717,"line_start":208,"line_end":208,"column_start":1,"column_end":78}},{"value":"! This results in a noticable bias on output after generating more values","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134718,"byte_end":134793,"line_start":209,"line_end":209,"column_start":1,"column_end":76}},{"value":"! than the square root of the period (after 2<sup>64</sup> values for a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134794,"byte_end":134867,"line_start":210,"line_end":210,"column_start":1,"column_end":74}},{"value":"! period of 2<sup>128</sup>).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134868,"byte_end":134899,"line_start":211,"line_end":211,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134900,"byte_end":134903,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134904,"byte_end":134907,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"! # Security","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134908,"byte_end":134922,"line_start":214,"line_end":214,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134923,"byte_end":134926,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"! ## Predictability","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134927,"byte_end":134948,"line_start":216,"line_end":216,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134949,"byte_end":134952,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"! From the context of any PRNG, one can ask the question *given some previous","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":134953,"byte_end":135032,"line_start":218,"line_end":218,"column_start":1,"column_end":80}},{"value":"! output from the PRNG, is it possible to predict the next output value?*","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135033,"byte_end":135108,"line_start":219,"line_end":219,"column_start":1,"column_end":76}},{"value":"! This is an important property in any situation where there might be an","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135109,"byte_end":135183,"line_start":220,"line_end":220,"column_start":1,"column_end":75}},{"value":"! adversary.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135184,"byte_end":135198,"line_start":221,"line_end":221,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135199,"byte_end":135202,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"! Regular PRNGs tend to be predictable, although with varying difficulty. In","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135203,"byte_end":135281,"line_start":223,"line_end":223,"column_start":1,"column_end":79}},{"value":"! some cases prediction is trivial, for example plain Xorshift outputs part of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135282,"byte_end":135362,"line_start":224,"line_end":224,"column_start":1,"column_end":81}},{"value":"! its state without mutation, and prediction is as simple as seeding a new","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135363,"byte_end":135439,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"! Xorshift generator from four `u32` outputs. Other generators, like","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135440,"byte_end":135510,"line_start":226,"line_end":226,"column_start":1,"column_end":71}},{"value":"! [PCG](http://www.pcg-random.org/predictability.html) and truncated Xorshift*","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135511,"byte_end":135591,"line_start":227,"line_end":227,"column_start":1,"column_end":81}},{"value":"! are harder to predict, but not outside the realm of common mathematics and a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135592,"byte_end":135672,"line_start":228,"line_end":228,"column_start":1,"column_end":81}},{"value":"! desktop PC.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135673,"byte_end":135688,"line_start":229,"line_end":229,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135689,"byte_end":135692,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"! The basic security that CSPRNGs must provide is the infeasibility to predict","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135693,"byte_end":135773,"line_start":231,"line_end":231,"column_start":1,"column_end":81}},{"value":"! output. This requirement is formalized as the [next-bit test]; this is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135774,"byte_end":135848,"line_start":232,"line_end":232,"column_start":1,"column_end":75}},{"value":"! roughly stated as: given the first *k* bits of a random sequence, the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135849,"byte_end":135922,"line_start":233,"line_end":233,"column_start":1,"column_end":74}},{"value":"! sequence satisfies the next-bit test if there is no algorithm able to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135923,"byte_end":135996,"line_start":234,"line_end":234,"column_start":1,"column_end":74}},{"value":"! predict the next bit using reasonable computing power.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":135997,"byte_end":136055,"line_start":235,"line_end":235,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136056,"byte_end":136059,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"! A further security that *some* CSPRNGs provide is forward secrecy:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136060,"byte_end":136130,"line_start":237,"line_end":237,"column_start":1,"column_end":71}},{"value":"! in the event that the CSPRNGs state is revealed at some point, it must be","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136131,"byte_end":136208,"line_start":238,"line_end":238,"column_start":1,"column_end":78}},{"value":"! infeasible to reconstruct previous states or output. Note that many CSPRNGs","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136209,"byte_end":136288,"line_start":239,"line_end":239,"column_start":1,"column_end":80}},{"value":"! *do not* have forward secrecy in their usual formulations.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136289,"byte_end":136351,"line_start":240,"line_end":240,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136352,"byte_end":136355,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"! As an outsider it is hard to get a good idea about the security of an","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136356,"byte_end":136429,"line_start":242,"line_end":242,"column_start":1,"column_end":74}},{"value":"! algorithm. People in the field of cryptography spend a lot of effort","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136430,"byte_end":136502,"line_start":243,"line_end":243,"column_start":1,"column_end":73}},{"value":"! analyzing existing designs, and what was once considered good may now turn","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136503,"byte_end":136581,"line_start":244,"line_end":244,"column_start":1,"column_end":79}},{"value":"! out to be weaker. Generally it is best to use algorithms well-analyzed by","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136582,"byte_end":136659,"line_start":245,"line_end":245,"column_start":1,"column_end":78}},{"value":"! experts, such as those recommended by NIST or ECRYPT.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136660,"byte_end":136717,"line_start":246,"line_end":246,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136718,"byte_end":136721,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"! ## State and seeding","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136722,"byte_end":136746,"line_start":248,"line_end":248,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136747,"byte_end":136750,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"! It is worth noting that a CSPRNG's security relies absolutely on being","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136751,"byte_end":136825,"line_start":250,"line_end":250,"column_start":1,"column_end":75}},{"value":"! seeded with a secure random key. Should the key be known or guessable, all","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136826,"byte_end":136904,"line_start":251,"line_end":251,"column_start":1,"column_end":79}},{"value":"! output of the CSPRNG is easy to guess. This implies that the seed should","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136905,"byte_end":136981,"line_start":252,"line_end":252,"column_start":1,"column_end":77}},{"value":"! come from a trusted source; usually either the OS or another CSPRNG. Our","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":136982,"byte_end":137058,"line_start":253,"line_end":253,"column_start":1,"column_end":77}},{"value":"! seeding helper trait, [`FromEntropy`], and the source it uses","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137059,"byte_end":137124,"line_start":254,"line_end":254,"column_start":1,"column_end":66}},{"value":"! ([`EntropyRng`]), should be secure. Additionally, [`ThreadRng`] is a CSPRNG,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137125,"byte_end":137205,"line_start":255,"line_end":255,"column_start":1,"column_end":81}},{"value":"! thus it is acceptable to seed from this (although for security applications","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137206,"byte_end":137285,"line_start":256,"line_end":256,"column_start":1,"column_end":80}},{"value":"! fresh/external entropy should be preferred).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137286,"byte_end":137334,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137335,"byte_end":137338,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"! Further, it should be obvious that the internal state of a CSPRNG must be","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137339,"byte_end":137416,"line_start":259,"line_end":259,"column_start":1,"column_end":78}},{"value":"! kept secret. With that in mind, our implementations do not provide direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137417,"byte_end":137494,"line_start":260,"line_end":260,"column_start":1,"column_end":78}},{"value":"! access to most of their internal state, and `Debug` implementations do not","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137495,"byte_end":137573,"line_start":261,"line_end":261,"column_start":1,"column_end":79}},{"value":"! print any internal state. This does not fully protect CSPRNG state; code","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137574,"byte_end":137650,"line_start":262,"line_end":262,"column_start":1,"column_end":77}},{"value":"! within the same process may read this memory (and we allow cloning and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137651,"byte_end":137725,"line_start":263,"line_end":263,"column_start":1,"column_end":75}},{"value":"! serialisation of CSPRNGs for convenience). Further, a running process may be","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137726,"byte_end":137806,"line_start":264,"line_end":264,"column_start":1,"column_end":81}},{"value":"! forked by the operating system, which may leave both processes with a copy","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137807,"byte_end":137885,"line_start":265,"line_end":265,"column_start":1,"column_end":79}},{"value":"! of the same generator.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137886,"byte_end":137912,"line_start":266,"line_end":266,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137913,"byte_end":137916,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"! ## Not a crypto library","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137917,"byte_end":137944,"line_start":268,"line_end":268,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137945,"byte_end":137948,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"! It should be emphasised that this is not a cryptography library; although","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":137949,"byte_end":138026,"line_start":270,"line_end":270,"column_start":1,"column_end":78}},{"value":"! Rand does take some measures to provide secure random numbers, it does not","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138027,"byte_end":138105,"line_start":271,"line_end":271,"column_start":1,"column_end":79}},{"value":"! necessarily take all recommended measures. Further, cryptographic processes","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138106,"byte_end":138185,"line_start":272,"line_end":272,"column_start":1,"column_end":80}},{"value":"! such as encryption and authentication are complex and must be implemented","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138186,"byte_end":138263,"line_start":273,"line_end":273,"column_start":1,"column_end":78}},{"value":"! very carefully to avoid flaws and resist known attacks. It is therefore","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138264,"byte_end":138339,"line_start":274,"line_end":274,"column_start":1,"column_end":76}},{"value":"! recommended to use specialized libraries where possible, for example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138340,"byte_end":138412,"line_start":275,"line_end":275,"column_start":1,"column_end":73}},{"value":"! [openssl], [ring] and the [RustCrypto libraries].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138413,"byte_end":138466,"line_start":276,"line_end":276,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138467,"byte_end":138470,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138471,"byte_end":138474,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"! # Extra features","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138475,"byte_end":138495,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138496,"byte_end":138499,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"! Some PRNGs may provide extra features, like:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138500,"byte_end":138548,"line_start":281,"line_end":281,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138549,"byte_end":138552,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"! - Support for multiple streams, which can help with parallel tasks.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138553,"byte_end":138624,"line_start":283,"line_end":283,"column_start":1,"column_end":72}},{"value":"! - The ability to jump or seek around in the random number stream;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138625,"byte_end":138694,"line_start":284,"line_end":284,"column_start":1,"column_end":70}},{"value":"!   with large periood this can be used as an alternative to streams.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138695,"byte_end":138766,"line_start":285,"line_end":285,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138767,"byte_end":138770,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138771,"byte_end":138774,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"! # Further reading","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138775,"byte_end":138796,"line_start":288,"line_end":288,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138797,"byte_end":138800,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"! There is quite a lot that can be said about PRNGs. The [PCG paper] is a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138801,"byte_end":138876,"line_start":290,"line_end":290,"column_start":1,"column_end":76}},{"value":"! very approachable explaining more concepts.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138877,"byte_end":138924,"line_start":291,"line_end":291,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138925,"byte_end":138928,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"! A good paper about RNG quality is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138929,"byte_end":138966,"line_start":293,"line_end":293,"column_start":1,"column_end":38}},{"value":"! [\"Good random number generators are (not so) easy to find\"](","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":138967,"byte_end":139031,"line_start":294,"line_end":294,"column_start":1,"column_end":65}},{"value":"! http://random.mat.sbg.ac.at/results/peter/A19final.pdf) by P. Hellekalek.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139032,"byte_end":139109,"line_start":295,"line_end":295,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139110,"byte_end":139113,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139114,"byte_end":139117,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"! [`rngs` module]: ../rngs/index.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139118,"byte_end":139157,"line_start":298,"line_end":298,"column_start":1,"column_end":40}},{"value":"! [basic PRNGs]: #basic-pseudo-random-number-generators-prngs","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139158,"byte_end":139221,"line_start":299,"line_end":299,"column_start":1,"column_end":64}},{"value":"! [CSPRNGs]: #cryptographically-secure-pseudo-random-number-generators-csprngs","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139222,"byte_end":139302,"line_start":300,"line_end":300,"column_start":1,"column_end":81}},{"value":"! [`XorShiftRng`]: struct.XorShiftRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139303,"byte_end":139347,"line_start":301,"line_end":301,"column_start":1,"column_end":45}},{"value":"! [`ChaChaRng`]: chacha/struct.ChaChaRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139348,"byte_end":139395,"line_start":302,"line_end":302,"column_start":1,"column_end":48}},{"value":"! [`Hc128Rng`]: hc128/struct.Hc128Rng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139396,"byte_end":139440,"line_start":303,"line_end":303,"column_start":1,"column_end":45}},{"value":"! [`IsaacRng`]: isaac/struct.IsaacRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139441,"byte_end":139485,"line_start":304,"line_end":304,"column_start":1,"column_end":45}},{"value":"! [`Isaac64Rng`]: isaac64/struct.Isaac64Rng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139486,"byte_end":139536,"line_start":305,"line_end":305,"column_start":1,"column_end":51}},{"value":"! [`ThreadRng`]: ../rngs/struct.ThreadRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139537,"byte_end":139585,"line_start":306,"line_end":306,"column_start":1,"column_end":49}},{"value":"! [`FromEntropy`]: ../trait.FromEntropy.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139586,"byte_end":139632,"line_start":307,"line_end":307,"column_start":1,"column_end":47}},{"value":"! [`EntropyRng`]: ../rngs/struct.EntropyRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139633,"byte_end":139683,"line_start":308,"line_end":308,"column_start":1,"column_end":51}},{"value":"! [TestU01]: http://simul.iro.umontreal.ca/testu01/tu01.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139684,"byte_end":139746,"line_start":309,"line_end":309,"column_start":1,"column_end":63}},{"value":"! [PractRand]: http://pracrand.sourceforge.net/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139747,"byte_end":139796,"line_start":310,"line_end":310,"column_start":1,"column_end":50}},{"value":"! [PCG paper]: http://www.pcg-random.org/pdf/hmc-cs-2014-0905.pdf","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139797,"byte_end":139864,"line_start":311,"line_end":311,"column_start":1,"column_end":68}},{"value":"! [openssl]: https://crates.io/crates/openssl","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139865,"byte_end":139912,"line_start":312,"line_end":312,"column_start":1,"column_end":48}},{"value":"! [ring]: https://crates.io/crates/ring","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139913,"byte_end":139954,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"! [RustCrypto libraries]: https://github.com/RustCrypto","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":139955,"byte_end":140012,"line_start":314,"line_end":314,"column_start":1,"column_end":58}},{"value":"! [next-bit test]: https://en.wikipedia.org/wiki/Next-bit_test","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":140013,"byte_end":140077,"line_start":315,"line_end":315,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":218},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"chacha","qualname":"::prng::chacha","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":1333},{"krate":0,"index":1338},{"krate":0,"index":1336},{"krate":0,"index":231},{"krate":0,"index":236},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":1340},{"krate":0,"index":1343},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":258},{"krate":0,"index":263},{"krate":0,"index":264}],"decl_id":null,"docs":" The ChaCha random number generator.\n","sig":null,"attributes":[{"value":"! The ChaCha random number generator.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":140818,"byte_end":140857,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1333},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":143409,"byte_end":143418,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"ChaChaRng","qualname":"::prng::chacha::ChaChaRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A cryptographically secure random number generator that uses the ChaCha\n algorithm.","sig":null,"attributes":[{"value":"/ A cryptographically secure random number generator that uses the ChaCha","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141076,"byte_end":141151,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ algorithm.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141152,"byte_end":141166,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141167,"byte_end":141170,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ChaCha is a stream cipher designed by Daniel J. Bernstein [^1], that we use","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141171,"byte_end":141250,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ as an RNG. It is an improved variant of the Salsa20 cipher family, which was","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141251,"byte_end":141331,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ selected as one of the \"stream ciphers suitable for widespread adoption\" by","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141332,"byte_end":141411,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ eSTREAM [^2].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141412,"byte_end":141429,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141430,"byte_end":141433,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141434,"byte_end":141510,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ against timing attacks, although that is mostly a concern for ciphers and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141511,"byte_end":141588,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ not for RNGs. Also it is very suitable for SIMD implementation.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141589,"byte_end":141656,"line_start":30,"line_end":30,"column_start":1,"column_end":68}},{"value":"/ Here we do not provide a SIMD implementation yet, except for what is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141657,"byte_end":141729,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ provided by auto-vectorisation.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141730,"byte_end":141765,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141766,"byte_end":141769,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ With the ChaCha algorithm it is possible to choose the number of rounds the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141770,"byte_end":141849,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ core algorithm should run. The number of rounds is a tradeoff between","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141850,"byte_end":141923,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ performance and security, where 8 rounds is the minimum potentially","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141924,"byte_end":141995,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/ secure configuration, and 20 rounds is widely used as a conservative choice.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":141996,"byte_end":142076,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ We use 20 rounds in this implementation, but hope to allow type-level","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142077,"byte_end":142150,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ configuration in the future.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142151,"byte_end":142183,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142184,"byte_end":142187,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ We use a 64-bit counter and 64-bit stream identifier as in Benstein's","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142188,"byte_end":142261,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"/ implementation [^1] except that we use a stream identifier in place of a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142262,"byte_end":142338,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ nonce. A 64-bit counter over 64-byte (16 word) blocks allows 1 ZiB of output","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142339,"byte_end":142419,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ before cycling, and the stream identifier allows 2<sup>64</sup> unique","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142420,"byte_end":142494,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ streams of output per seed. Both counter and stream are initialized to zero","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142495,"byte_end":142574,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ but may be set via [`set_word_pos`] and [`set_stream`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142575,"byte_end":142634,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142635,"byte_end":142638,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The word layout is:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142639,"byte_end":142662,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142663,"byte_end":142666,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142667,"byte_end":142678,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ constant constant constant constant","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142679,"byte_end":142718,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/ seed     seed     seed     seed","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142719,"byte_end":142754,"line_start":52,"line_end":52,"column_start":1,"column_end":36}},{"value":"/ seed     seed     seed     seed","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142755,"byte_end":142790,"line_start":53,"line_end":53,"column_start":1,"column_end":36}},{"value":"/ counter  counter  nonce    nonce","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142791,"byte_end":142827,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142828,"byte_end":142835,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142836,"byte_end":142839,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This implementation uses an output buffer of sixteen `u32` words, and uses","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142840,"byte_end":142918,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ [`BlockRng`] to implement the [`RngCore`] methods.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142919,"byte_end":142973,"line_start":58,"line_end":58,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142974,"byte_end":142977,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":142978,"byte_end":143038,"line_start":60,"line_end":60,"column_start":1,"column_end":61}},{"value":"/       https://cr.yp.to/chacha.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":143039,"byte_end":143078,"line_start":61,"line_end":61,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":143079,"byte_end":143082,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [^2]: [eSTREAM: the ECRYPT Stream Cipher Project](","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":143083,"byte_end":143137,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"/       http://www.ecrypt.eu.org/stream/)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":143138,"byte_end":143181,"line_start":64,"line_end":64,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":143182,"byte_end":143185,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`set_word_pos`]: #method.set_word_pos","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":143186,"byte_end":143228,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/ [`set_stream`]: #method.set_stream","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":143229,"byte_end":143267,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ [`BlockRng`]: ../../../rand_core/block/struct.BlockRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":143268,"byte_end":143331,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ [`RngCore`]: ../../trait.RngCore.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":143332,"byte_end":143373,"line_start":69,"line_end":69,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144957,"byte_end":144969,"line_start":131,"line_end":131,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<ChaChaRng>::new_unseeded","value":"fn () -> ChaChaRng","parent":null,"children":[],"decl_id":null,"docs":" Create an ChaCha random number generator using the default\n fixed key of 8 zero words.","sig":null,"attributes":[{"value":"/ Create an ChaCha random number generator using the default","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144252,"byte_end":144314,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/ fixed key of 8 zero words.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144319,"byte_end":144349,"line_start":111,"line_end":111,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144354,"byte_end":144357,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144362,"byte_end":144376,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144381,"byte_end":144384,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144389,"byte_end":144396,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144401,"byte_end":144428,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/ use rand::{RngCore, ChaChaRng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144433,"byte_end":144468,"line_start":117,"line_end":117,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144473,"byte_end":144476,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut ra = ChaChaRng::new_unseeded();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144481,"byte_end":144524,"line_start":119,"line_end":119,"column_start":5,"column_end":48}},{"value":"/ println!(\"{:?}\", ra.next_u32());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144529,"byte_end":144565,"line_start":120,"line_end":120,"column_start":5,"column_end":41}},{"value":"/ println!(\"{:?}\", ra.next_u32());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144570,"byte_end":144606,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144611,"byte_end":144618,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144623,"byte_end":144626,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Since this equivalent to a RNG with a fixed seed, repeated executions","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144631,"byte_end":144704,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ of an unseeded RNG will produce the same result. This code sample will","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144709,"byte_end":144783,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ consistently produce:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144788,"byte_end":144813,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144818,"byte_end":144821,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ - 2917185654","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144826,"byte_end":144842,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/ - 2419978656","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144847,"byte_end":144863,"line_start":129,"line_end":129,"column_start":5,"column_end":21}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use the FromEntropy or SeedableRng trait\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144868,"byte_end":144945,"line_start":130,"line_end":130,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":147514,"byte_end":147524,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"set_stream","qualname":"<ChaChaRng>::set_stream","value":"fn (&mut self, stream: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the stream number.","sig":null,"attributes":[{"value":"/ Set the stream number.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":146885,"byte_end":146911,"line_start":179,"line_end":179,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":146916,"byte_end":146919,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This is initialized to zero; 2<sup>64</sup> unique streams of output","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":146924,"byte_end":146996,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ are available per seed/key.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":147001,"byte_end":147032,"line_start":182,"line_end":182,"column_start":5,"column_end":36}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":147037,"byte_end":147041,"line_start":183,"line_end":183,"column_start":5,"column_end":9}},{"value":"/ Note that in order to reproduce ChaCha output with a specific 64-bit","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":147046,"byte_end":147118,"line_start":184,"line_end":184,"column_start":5,"column_end":77}},{"value":"/ nonce, one can convert that nonce to a `u64` in little-endian fashion","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":147123,"byte_end":147196,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/ and pass to this function. In theory a 96-bit nonce can be used by","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":147201,"byte_end":147271,"line_start":186,"line_end":186,"column_start":5,"column_end":75}},{"value":"/ passing the last 64-bits to this function and using the first 32-bits as","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":147276,"byte_end":147352,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ the most significant half of the 64-bit counter (which may be set","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":147357,"byte_end":147426,"line_start":188,"line_end":188,"column_start":5,"column_end":74}},{"value":"/ indirectly via `set_word_pos`), but this is not directly supported.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":147431,"byte_end":147502,"line_start":189,"line_end":189,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1340},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":148244,"byte_end":148254,"line_start":210,"line_end":210,"column_start":12,"column_end":22},"name":"ChaChaCore","qualname":"::prng::chacha::ChaChaCore","value":"ChaChaCore {  }","parent":null,"children":[{"krate":0,"index":1341}],"decl_id":null,"docs":" The core of `ChaChaRng`, used with `BlockRng`.\n","sig":null,"attributes":[{"value":"/ The core of `ChaChaRng`, used with `BlockRng`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":148165,"byte_end":148215,"line_start":208,"line_end":208,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":266},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hc128","qualname":"::prng::hc128","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":1345},{"krate":0,"index":1350},{"krate":0,"index":1348},{"krate":0,"index":278},{"krate":0,"index":283},{"krate":0,"index":288},{"krate":0,"index":1352},{"krate":0,"index":1356},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":296},{"krate":0,"index":305},{"krate":0,"index":310}],"decl_id":null,"docs":" The HC-128 random number generator.\n","sig":null,"attributes":[{"value":"! The HC-128 random number generator.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":158627,"byte_end":158666,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1345},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":161444,"byte_end":161452,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"Hc128Rng","qualname":"::prng::hc128::Hc128Rng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A cryptographically secure random number generator that uses the HC-128\n algorithm.","sig":null,"attributes":[{"value":"/ A cryptographically secure random number generator that uses the HC-128","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":158861,"byte_end":158936,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ algorithm.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":158937,"byte_end":158951,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":158952,"byte_end":158955,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ HC-128 is a stream cipher designed by Hongjun Wu[^1], that we use as an","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":158956,"byte_end":159031,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ RNG. It is selected as one of the \"stream ciphers suitable for widespread","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159032,"byte_end":159109,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ adoption\" by eSTREAM[^2].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159110,"byte_end":159139,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159140,"byte_end":159143,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ HC-128 is an array based RNG. In this it is similar to RC-4 and ISAAC before","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159144,"byte_end":159224,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ it, but those have never been proven cryptographically secure (or have even","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159225,"byte_end":159304,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ been significantly compromised, as in the case of RC-4[^5]).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159305,"byte_end":159369,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159370,"byte_end":159373,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because HC-128 works with simple indexing into a large array and with a few","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159374,"byte_end":159453,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ operations that parallelize well, it has very good performance. The size of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159454,"byte_end":159533,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ the array it needs, 4kb, can however be a disadvantage.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159534,"byte_end":159593,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159594,"byte_end":159597,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This implementation is not based on the version of HC-128 submitted to the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159598,"byte_end":159676,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ eSTREAM contest, but on a later version by the author with a few small","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159677,"byte_end":159751,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ improvements from December 15, 2009[^3].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159752,"byte_end":159796,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159797,"byte_end":159800,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ HC-128 has no known weaknesses that are easier to exploit than doing a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159801,"byte_end":159875,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ brute-force search of 2<sup>128</sup>. A very comprehensive analysis of the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159876,"byte_end":159955,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ current state of known attacks / weaknesses of HC-128 is given in *Some","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":159956,"byte_end":160031,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ Results On Analysis And Implementation Of HC-128 Stream Cipher*[^4].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160032,"byte_end":160104,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160105,"byte_end":160108,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The average cycle length is expected to be","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160109,"byte_end":160155,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/ 2<sup>1024*32+10-1</sup> = 2<sup>32777</sup>.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160156,"byte_end":160205,"line_start":44,"line_end":44,"column_start":1,"column_end":50}},{"value":"/ We support seeding with a 256-bit array, which matches the 128-bit key","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160206,"byte_end":160280,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/ concatenated with a 128-bit IV from the stream cipher.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160281,"byte_end":160339,"line_start":46,"line_end":46,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160340,"byte_end":160343,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This implementation uses an output buffer of sixteen `u32` words, and uses","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160344,"byte_end":160422,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ [`BlockRng`] to implement the [`RngCore`] methods.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160423,"byte_end":160477,"line_start":49,"line_end":49,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160478,"byte_end":160481,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ## References","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160482,"byte_end":160499,"line_start":51,"line_end":51,"column_start":1,"column_end":18}},{"value":"/ [^1]: Hongjun Wu (2008). [\"The Stream Cipher HC-128\"](","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160500,"byte_end":160558,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/       http://www.ecrypt.eu.org/stream/p3ciphers/hc/hc128_p3.pdf).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160559,"byte_end":160628,"line_start":53,"line_end":53,"column_start":1,"column_end":70}},{"value":"/       *The eSTREAM Finalists*, LNCS 4986, pp. 39–47, Springer-Verlag.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160629,"byte_end":160704,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160705,"byte_end":160708,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ [^2]: [eSTREAM: the ECRYPT Stream Cipher Project](","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160709,"byte_end":160763,"line_start":56,"line_end":56,"column_start":1,"column_end":55}},{"value":"/       http://www.ecrypt.eu.org/stream/)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160764,"byte_end":160807,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160808,"byte_end":160811,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [^3]: Hongjun Wu, [Stream Ciphers HC-128 and HC-256](","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160812,"byte_end":160869,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/       https://www.ntu.edu.sg/home/wuhj/research/hc/index.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160870,"byte_end":160936,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160937,"byte_end":160940,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [^4]: Shashwat Raizada (January 2015),[\"Some Results On Analysis And","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":160941,"byte_end":161013,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/       Implementation Of HC-128 Stream Cipher\"](","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":161014,"byte_end":161065,"line_start":63,"line_end":63,"column_start":1,"column_end":52}},{"value":"/       http://library.isical.ac.in:8080/jspui/bitstream/123456789/6636/1/TH431.pdf).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":161066,"byte_end":161153,"line_start":64,"line_end":64,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":161154,"byte_end":161157,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [^5]: Internet Engineering Task Force (February 2015),","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":161158,"byte_end":161216,"line_start":66,"line_end":66,"column_start":1,"column_end":59}},{"value":"/       [\"Prohibiting RC4 Cipher Suites\"](https://tools.ietf.org/html/rfc7465).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":161217,"byte_end":161298,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":161299,"byte_end":161302,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`BlockRng`]: ../../../rand_core/block/struct.BlockRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":161303,"byte_end":161366,"line_start":69,"line_end":69,"column_start":1,"column_end":64}},{"value":"/ [`RngCore`]: ../../trait.RngCore.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":161367,"byte_end":161408,"line_start":70,"line_end":70,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1352},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":162322,"byte_end":162331,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"Hc128Core","qualname":"::prng::hc128::Hc128Core","value":"Hc128Core {  }","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1355}],"decl_id":null,"docs":" The core of `Hc128Rng`, used with `BlockRng`.\n","sig":null,"attributes":[{"value":"/ The core of `Hc128Rng`, used with `BlockRng`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":162244,"byte_end":162293,"line_start":108,"line_end":108,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":311},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"isaac","qualname":"::prng::isaac","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":1358},{"krate":0,"index":1363},{"krate":0,"index":1361},{"krate":0,"index":328},{"krate":0,"index":333},{"krate":0,"index":340},{"krate":0,"index":1365},{"krate":0,"index":1371},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":357},{"krate":0,"index":362}],"decl_id":null,"docs":" The ISAAC random number generator.\n","sig":null,"attributes":[{"value":"! The ISAAC random number generator.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":178786,"byte_end":178824,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1358},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181873,"byte_end":181881,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"IsaacRng","qualname":"::prng::isaac::IsaacRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A random number generator that uses the ISAAC algorithm.","sig":null,"attributes":[{"value":"/ A random number generator that uses the ISAAC algorithm.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179143,"byte_end":179203,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179204,"byte_end":179207,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ISAAC stands for \"Indirection, Shift, Accumulate, Add, and Count\" which are","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179208,"byte_end":179287,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ the principal bitwise operations employed. It is the most advanced of a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179288,"byte_end":179363,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ series of array based random number generator designed by Robert Jenkins","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179364,"byte_end":179440,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ in 1996[^1][^2].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179441,"byte_end":179461,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179462,"byte_end":179465,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ISAAC is notably fast and produces excellent quality random numbers for","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179466,"byte_end":179541,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ non-cryptographic applications.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179542,"byte_end":179577,"line_start":33,"line_end":33,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179578,"byte_end":179581,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ In spite of being designed with cryptographic security in mind, ISAAC hasn't","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179582,"byte_end":179662,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ been stringently cryptanalyzed and thus cryptographers do not not","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179663,"byte_end":179732,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ consensually trust it to be secure. When looking for a secure RNG, prefer","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179733,"byte_end":179810,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ [`Hc128Rng`] instead, which, like ISAAC, is an array-based RNG and one of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179811,"byte_end":179888,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ the stream-ciphers selected the by eSTREAM contest.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179889,"byte_end":179944,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179945,"byte_end":179948,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ In 2006 an improvement to ISAAC was suggested by Jean-Philippe Aumasson,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":179949,"byte_end":180025,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ named ISAAC+[^3]. But because the specification is not complete, because","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180026,"byte_end":180102,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ there is no good implementation, and because the suggested bias may not","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180103,"byte_end":180178,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ exist, it is not implemented here.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180179,"byte_end":180217,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180218,"byte_end":180221,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Overview of the ISAAC algorithm:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180222,"byte_end":180261,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/ (in pseudo-code)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180262,"byte_end":180282,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180283,"byte_end":180286,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180287,"byte_end":180298,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/ Input: a, b, c, s[256] // state","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180299,"byte_end":180334,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/ Output: r[256]         // results","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180335,"byte_end":180372,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180373,"byte_end":180376,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ mix(a,i) = a ^ a << 13   if i = 0 mod 4","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180377,"byte_end":180420,"line_start":53,"line_end":53,"column_start":1,"column_end":44}},{"value":"/            a ^ a >>  6   if i = 1 mod 4","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180421,"byte_end":180464,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/            a ^ a <<  2   if i = 2 mod 4","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180465,"byte_end":180508,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/            a ^ a >> 16   if i = 3 mod 4","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180509,"byte_end":180552,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180553,"byte_end":180556,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ c = c + 1","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180557,"byte_end":180570,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/ b = b + c","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180571,"byte_end":180584,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180585,"byte_end":180588,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ for i in 0..256 {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180589,"byte_end":180610,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/     x = s_[i]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180611,"byte_end":180628,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/     a = f(a,i) + s[i+128 mod 256]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180629,"byte_end":180666,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/     y = a + b + s[x>>2 mod 256]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180667,"byte_end":180702,"line_start":64,"line_end":64,"column_start":1,"column_end":36}},{"value":"/     s[i] = y","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180703,"byte_end":180719,"line_start":65,"line_end":65,"column_start":1,"column_end":17}},{"value":"/     b = x + s[y>>10 mod 256]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180720,"byte_end":180752,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/     r[i] = b","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180753,"byte_end":180769,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180770,"byte_end":180775,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180776,"byte_end":180783,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180784,"byte_end":180787,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Numbers are generated in blocks of 256. This means the function above only","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180788,"byte_end":180866,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ runs once every 256 times you ask for a next random number. In all other","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180867,"byte_end":180943,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/ circumstances the last element of the results array is returned.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":180944,"byte_end":181012,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181013,"byte_end":181016,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ISAAC therefore needs a lot of memory, relative to other non-crypto RNGs.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181017,"byte_end":181094,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ 2 * 256 * 4 = 2 kb to hold the state and results.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181095,"byte_end":181148,"line_start":76,"line_end":76,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181149,"byte_end":181152,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ This implementation uses [`BlockRng`] to implement the [`RngCore`] methods.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181153,"byte_end":181232,"line_start":78,"line_end":78,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181233,"byte_end":181236,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ## References","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181237,"byte_end":181254,"line_start":80,"line_end":80,"column_start":1,"column_end":18}},{"value":"/ [^1]: Bob Jenkins, [*ISAAC: A fast cryptographic random number generator*](","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181255,"byte_end":181334,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/       http://burtleburtle.net/bob/rand/isaacafa.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181335,"byte_end":181392,"line_start":82,"line_end":82,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181393,"byte_end":181396,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [^2]: Bob Jenkins, [*ISAAC and RC4*](","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181397,"byte_end":181438,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/       http://burtleburtle.net/bob/rand/isaac.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181439,"byte_end":181493,"line_start":85,"line_end":85,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181494,"byte_end":181497,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [^3]: Jean-Philippe Aumasson, [*On the pseudo-random generator ISAAC*](","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181498,"byte_end":181573,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/       https://eprint.iacr.org/2006/438)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181574,"byte_end":181617,"line_start":88,"line_end":88,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181618,"byte_end":181621,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ [`Hc128Rng`]: ../hc128/struct.Hc128Rng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181622,"byte_end":181669,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/ [`BlockRng`]: ../../../rand_core/block/struct.BlockRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181670,"byte_end":181733,"line_start":91,"line_end":91,"column_start":1,"column_end":64}},{"value":"/ [`RngCore`]: ../../trait.RngCore.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181734,"byte_end":181775,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":183256,"byte_end":183268,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<IsaacRng>::new_unseeded","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an ISAAC random number generator using the default\n fixed seed.","sig":null,"attributes":[{"value":"/ Create an ISAAC random number generator using the default","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":182993,"byte_end":183054,"line_start":137,"line_end":137,"column_start":5,"column_end":66}},{"value":"/ fixed seed.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":183059,"byte_end":183074,"line_start":138,"line_end":138,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":183079,"byte_end":183082,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED. `IsaacRng::new_from_u64(0)` will produce identical results.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":183087,"byte_end":183162,"line_start":140,"line_end":140,"column_start":5,"column_end":80}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use the FromEntropy or SeedableRng trait\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":183167,"byte_end":183244,"line_start":141,"line_end":141,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":183617,"byte_end":183629,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"new_from_u64","qualname":"<IsaacRng>::new_from_u64","value":"fn (seed: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an ISAAC random number generator using an `u64` as seed.\n If `seed == 0` this will produce the same stream of random numbers as\n the reference implementation when used unseeded.\n","sig":null,"attributes":[{"value":"/ Create an ISAAC random number generator using an `u64` as seed.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":183323,"byte_end":183390,"line_start":146,"line_end":146,"column_start":5,"column_end":72}},{"value":"/ If `seed == 0` this will produce the same stream of random numbers as","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":183395,"byte_end":183468,"line_start":147,"line_end":147,"column_start":5,"column_end":78}},{"value":"/ the reference implementation when used unseeded.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":183473,"byte_end":183525,"line_start":148,"line_end":148,"column_start":5,"column_end":57}},{"value":"deprecated(since = \"0.6.0\", note =\n             \"use SeedableRng::seed_from_u64 instead\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":183530,"byte_end":183605,"line_start":149,"line_end":149,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1365},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":183834,"byte_end":183843,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"IsaacCore","qualname":"::prng::isaac::IsaacCore","value":"IsaacCore {  }","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370}],"decl_id":null,"docs":" The core of `IsaacRng`, used with `BlockRng`.\n","sig":null,"attributes":[{"value":"/ The core of `IsaacRng`, used with `BlockRng`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":183694,"byte_end":183743,"line_start":155,"line_end":155,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":373},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"isaac64","qualname":"::prng::isaac64","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":1373},{"krate":0,"index":1378},{"krate":0,"index":1376},{"krate":0,"index":390},{"krate":0,"index":395},{"krate":0,"index":402},{"krate":0,"index":1380},{"krate":0,"index":1386},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":419},{"krate":0,"index":425}],"decl_id":null,"docs":" The ISAAC-64 random number generator.\n","sig":null,"attributes":[{"value":"! The ISAAC-64 random number generator.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":197970,"byte_end":198011,"line_start":11,"line_end":11,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1373},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200597,"byte_end":200607,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"Isaac64Rng","qualname":"::prng::isaac64::Isaac64Rng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A random number generator that uses ISAAC-64, the 64-bit variant of the\n ISAAC algorithm.","sig":null,"attributes":[{"value":"/ A random number generator that uses ISAAC-64, the 64-bit variant of the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":198332,"byte_end":198407,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ ISAAC algorithm.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":198408,"byte_end":198428,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":198429,"byte_end":198432,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ISAAC stands for \"Indirection, Shift, Accumulate, Add, and Count\" which are","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":198433,"byte_end":198512,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ the principal bitwise operations employed. It is the most advanced of a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":198513,"byte_end":198588,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ series of array based random number generator designed by Robert Jenkins","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":198589,"byte_end":198665,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ in 1996[^1].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":198666,"byte_end":198682,"line_start":31,"line_end":31,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":198683,"byte_end":198686,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ISAAC-64 is mostly similar to ISAAC. Because it operates on 64-bit integers","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":198687,"byte_end":198766,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ instead of 32-bit, it uses twice as much memory to hold its state and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":198767,"byte_end":198840,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ results. Also it uses different constants for shifts and indirect indexing,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":198841,"byte_end":198920,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ optimized to give good results for 64bit arithmetic.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":198921,"byte_end":198977,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":198978,"byte_end":198981,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ISAAC-64 is notably fast and produces excellent quality random numbers for","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":198982,"byte_end":199060,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ non-cryptographic applications.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199061,"byte_end":199096,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199097,"byte_end":199100,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ In spite of being designed with cryptographic security in mind, ISAAC hasn't","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199101,"byte_end":199181,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ been stringently cryptanalyzed and thus cryptographers do not not","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199182,"byte_end":199251,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/ consensually trust it to be secure. When looking for a secure RNG, prefer","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199252,"byte_end":199329,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ [`Hc128Rng`] instead, which, like ISAAC, is an array-based RNG and one of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199330,"byte_end":199407,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"/ the stream-ciphers selected the by eSTREAM contest.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199408,"byte_end":199463,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199464,"byte_end":199467,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Overview of the ISAAC-64 algorithm:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199468,"byte_end":199510,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ (in pseudo-code)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199511,"byte_end":199531,"line_start":48,"line_end":48,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199532,"byte_end":199535,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199536,"byte_end":199547,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ Input: a, b, c, s[256] // state","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199548,"byte_end":199583,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/ Output: r[256] // results","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199584,"byte_end":199613,"line_start":52,"line_end":52,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199614,"byte_end":199617,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ mix(a,i) = !(a ^ a << 21)  if i = 0 mod 4","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199618,"byte_end":199663,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"/              a ^ a >>  5   if i = 1 mod 4","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199664,"byte_end":199709,"line_start":55,"line_end":55,"column_start":1,"column_end":46}},{"value":"/              a ^ a << 12   if i = 2 mod 4","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199710,"byte_end":199755,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/              a ^ a >> 33   if i = 3 mod 4","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199756,"byte_end":199801,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199802,"byte_end":199805,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ c = c + 1","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199806,"byte_end":199819,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/ b = b + c","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199820,"byte_end":199833,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199834,"byte_end":199837,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ for i in 0..256 {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199838,"byte_end":199859,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/     x = s_[i]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199860,"byte_end":199877,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/     a = mix(a,i) + s[i+128 mod 256]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199878,"byte_end":199917,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/     y = a + b + s[x>>3 mod 256]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199918,"byte_end":199953,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/     s[i] = y","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199954,"byte_end":199970,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/     b = x + s[y>>11 mod 256]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":199971,"byte_end":200003,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/     r[i] = b","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200004,"byte_end":200020,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200021,"byte_end":200026,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200027,"byte_end":200034,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200035,"byte_end":200038,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This implementation uses [`BlockRng64`] to implement the [`RngCore`] methods.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200039,"byte_end":200120,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200121,"byte_end":200124,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ See for more information the documentation of [`IsaacRng`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200125,"byte_end":200188,"line_start":74,"line_end":74,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200189,"byte_end":200192,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [^1]: Bob Jenkins, [*ISAAC and RC4*](","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200193,"byte_end":200234,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/       http://burtleburtle.net/bob/rand/isaac.html)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200235,"byte_end":200289,"line_start":77,"line_end":77,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200290,"byte_end":200293,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`IsaacRng`]: ../isaac/struct.IsaacRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200294,"byte_end":200341,"line_start":79,"line_end":79,"column_start":1,"column_end":48}},{"value":"/ [`Hc128Rng`]: ../hc128/struct.Hc128Rng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200342,"byte_end":200389,"line_start":80,"line_end":80,"column_start":1,"column_end":48}},{"value":"/ [`BlockRng64`]: ../../../rand_core/block/struct.BlockRng64.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200390,"byte_end":200457,"line_start":81,"line_end":81,"column_start":1,"column_end":68}},{"value":"/ [`RngCore`]: ../../trait.RngCore.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200458,"byte_end":200499,"line_start":82,"line_end":82,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":202016,"byte_end":202028,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<Isaac64Rng>::new_unseeded","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 64-bit ISAAC random number generator using the\n default fixed seed.","sig":null,"attributes":[{"value":"/ Create a 64-bit ISAAC random number generator using the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":201745,"byte_end":201804,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/ default fixed seed.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":201809,"byte_end":201832,"line_start":128,"line_end":128,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":201837,"byte_end":201840,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED. `Isaac64Rng::new_from_u64(0)` will produce identical results.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":201845,"byte_end":201922,"line_start":130,"line_end":130,"column_start":5,"column_end":82}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use the FromEntropy or SeedableRng trait\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":201927,"byte_end":202004,"line_start":131,"line_end":131,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":202380,"byte_end":202392,"line_start":140,"line_end":140,"column_start":12,"column_end":24},"name":"new_from_u64","qualname":"<Isaac64Rng>::new_from_u64","value":"fn (seed: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an ISAAC-64 random number generator using an `u64` as seed.\n If `seed == 0` this will produce the same stream of random numbers as\n the reference implementation when used unseeded.\n","sig":null,"attributes":[{"value":"/ Create an ISAAC-64 random number generator using an `u64` as seed.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":202083,"byte_end":202153,"line_start":136,"line_end":136,"column_start":5,"column_end":75}},{"value":"/ If `seed == 0` this will produce the same stream of random numbers as","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":202158,"byte_end":202231,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ the reference implementation when used unseeded.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":202236,"byte_end":202288,"line_start":138,"line_end":138,"column_start":5,"column_end":57}},{"value":"deprecated(since = \"0.6.0\", note =\n             \"use SeedableRng::seed_from_u64 instead\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":202293,"byte_end":202368,"line_start":139,"line_end":139,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1380},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":202599,"byte_end":202610,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"Isaac64Core","qualname":"::prng::isaac64::Isaac64Core","value":"Isaac64Core {  }","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385}],"decl_id":null,"docs":" The core of `Isaac64Rng`, used with `BlockRng`.\n","sig":null,"attributes":[{"value":"/ The core of `Isaac64Rng`, used with `BlockRng`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":202457,"byte_end":202508,"line_start":145,"line_end":145,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":208480,"byte_end":208492,"line_start":292,"line_end":292,"column_start":12,"column_end":24},"name":"new_from_u64","qualname":"<Isaac64Core>::new_from_u64","value":"fn (seed: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an ISAAC-64 random number generator using an `u64` as seed.\n If `seed == 0` this will produce the same stream of random numbers as\n the reference implementation when used unseeded.\n","sig":null,"attributes":[{"value":"/ Create an ISAAC-64 random number generator using an `u64` as seed.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":208183,"byte_end":208253,"line_start":288,"line_end":288,"column_start":5,"column_end":75}},{"value":"/ If `seed == 0` this will produce the same stream of random numbers as","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":208258,"byte_end":208331,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ the reference implementation when used unseeded.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":208336,"byte_end":208388,"line_start":290,"line_end":290,"column_start":5,"column_end":57}},{"value":"deprecated(since = \"0.6.0\", note =\n             \"use SeedableRng::seed_from_u64 instead\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":208393,"byte_end":208468,"line_start":291,"line_end":291,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1388},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217500,"byte_end":217511,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"XorShiftRng","qualname":"::prng::xorshift::XorShiftRng","value":"XorShiftRng {  }","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392}],"decl_id":null,"docs":" An Xorshift random number generator.","sig":null,"attributes":[{"value":"/ An Xorshift random number generator.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":216974,"byte_end":217014,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217015,"byte_end":217018,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The Xorshift[^1] algorithm is not suitable for cryptographic purposes","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217019,"byte_end":217092,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ but is very fast. If you do not know for sure that it fits your","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217093,"byte_end":217160,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ requirements, use a more secure one such as `IsaacRng` or `OsRng`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217161,"byte_end":217231,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217232,"byte_end":217235,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [^1]: Marsaglia, George (July 2003).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217236,"byte_end":217276,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/       [\"Xorshift RNGs\"](https://www.jstatsoft.org/v08/i14/paper).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217277,"byte_end":217346,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/       *Journal of Statistical Software*. Vol. 8 (Issue 14).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217347,"byte_end":217410,"line_start":25,"line_end":25,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":218232,"byte_end":218244,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<XorShiftRng>::new_unseeded","value":"fn () -> XorShiftRng","parent":null,"children":[],"decl_id":null,"docs":" Creates a new XorShiftRng instance which is not seeded.","sig":null,"attributes":[{"value":"/ Creates a new XorShiftRng instance which is not seeded.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217811,"byte_end":217870,"line_start":43,"line_end":43,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217875,"byte_end":217878,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The initial values of this RNG are constants, so all generators created","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217883,"byte_end":217958,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ by this function will yield the same stream of random numbers. It is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217963,"byte_end":218035,"line_start":46,"line_end":46,"column_start":5,"column_end":77}},{"value":"/ highly recommended that this is created through `SeedableRng` instead of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":218040,"byte_end":218116,"line_start":47,"line_end":47,"column_start":5,"column_end":81}},{"value":"/ this function","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":218121,"byte_end":218138,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use the FromEntropy or SeedableRng trait\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":218143,"byte_end":218220,"line_start":49,"line_end":49,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1395},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":224741,"byte_end":224751,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"IsaacArray","qualname":"::prng::isaac_array::IsaacArray","value":"IsaacArray {  }","parent":null,"children":[{"krate":0,"index":1397}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":224628,"byte_end":224667,"line_start":24,"line_end":24,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":493},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rngs","qualname":"::rngs","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":546},{"krate":0,"index":611},{"krate":0,"index":623},{"krate":0,"index":639},{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":661}],"decl_id":null,"docs":" Random number generators and adapters for common usage:","sig":null,"attributes":[{"value":"! Random number generators and adapters for common usage:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228149,"byte_end":228208,"line_start":11,"line_end":11,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228209,"byte_end":228212,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! - [`ThreadRng`], a fast, secure, auto-seeded thread-local generator","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228213,"byte_end":228284,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"! - [`StdRng`] and [`SmallRng`], algorithms to cover typical usage","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228285,"byte_end":228353,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"! - [`EntropyRng`], [`OsRng`] and [`JitterRng`] as entropy sources","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228354,"byte_end":228422,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"! - [`mock::StepRng`] as a simple counter for tests","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228423,"byte_end":228476,"line_start":16,"line_end":16,"column_start":1,"column_end":54}},{"value":"! - [`adapter::ReadRng`] to read from a file/stream","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228477,"byte_end":228530,"line_start":17,"line_end":17,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228531,"byte_end":228534,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! # Background — Random number generators (RNGs)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228535,"byte_end":228587,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228588,"byte_end":228591,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! Computers are inherently deterministic, so to get *random* numbers one","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228592,"byte_end":228666,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"! either has to use a hardware generator or collect bits of *entropy* from","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228667,"byte_end":228743,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"! various sources (e.g. event timestamps, or jitter). This is a relatively","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228744,"byte_end":228820,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"! slow and complicated operation.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228821,"byte_end":228856,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228857,"byte_end":228860,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Generally the operating system will collect some entropy, remove bias, and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228861,"byte_end":228939,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"! use that to seed its own PRNG; [`OsRng`] provides an interface to this.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":228940,"byte_end":229015,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"! [`JitterRng`] is an entropy collector included with Rand that measures","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229016,"byte_end":229090,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"! jitter in the CPU execution time, and jitter in memory access time.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229091,"byte_end":229162,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"! [`EntropyRng`] is a wrapper that uses the best entropy source that is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229163,"byte_end":229236,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"! available.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229237,"byte_end":229251,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229252,"byte_end":229255,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! ## Pseudo-random number generators","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229256,"byte_end":229294,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229295,"byte_end":229298,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! What is commonly used instead of \"true\" random number renerators, are","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229299,"byte_end":229372,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"! *pseudo-random number generators* (PRNGs), deterministic algorithms that","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229373,"byte_end":229449,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"! produce an infinite stream of pseudo-random numbers from a small random","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229450,"byte_end":229525,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"! seed. PRNGs are faster, and have better provable properties. The numbers","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229526,"byte_end":229602,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"! produced can be statistically of very high quality and can be impossible to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229603,"byte_end":229682,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"! predict. (They can also have obvious correlations and be trivial to predict;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229683,"byte_end":229763,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"! quality varies.)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229764,"byte_end":229784,"line_start":41,"line_end":41,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229785,"byte_end":229788,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! There are two different types of PRNGs: those developed for simulations","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229789,"byte_end":229864,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"! and statistics, and those developed for use in cryptography; the latter are","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229865,"byte_end":229944,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"! called Cryptographically Secure PRNGs (CSPRNG or CPRNG). Both types can","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":229945,"byte_end":230020,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"! have good statistical quality but the latter also have to be impossible to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230021,"byte_end":230099,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"! predict, even after seeing many previous output values. Rand provides a good","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230100,"byte_end":230180,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"! default algorithm from each class:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230181,"byte_end":230219,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230220,"byte_end":230223,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! - [`SmallRng`] is a PRNG chosen for low memory usage, high performance and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230224,"byte_end":230302,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"!   good statistical quality.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230303,"byte_end":230334,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"!   The current algorithm (plain Xorshift) unfortunately performs","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230335,"byte_end":230402,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"!   poorly in statistical quality test suites (TestU01 and PractRand) and will","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230403,"byte_end":230483,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"!   be replaced in the next major release.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230484,"byte_end":230528,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"! - [`StdRng`] is a CSPRNG chosen for good performance and trust of security","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230529,"byte_end":230607,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"!   (based on reviews, maturity and usage). The current algorithm is HC-128,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230608,"byte_end":230686,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"!   which is one of the recommendations by ECRYPT's eSTREAM project.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230687,"byte_end":230757,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230758,"byte_end":230761,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! The above PRNGs do not cover all use-cases; more algorithms can be found in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230762,"byte_end":230841,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"! the [`prng` module], as well as in several other crates. For example, you","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230842,"byte_end":230919,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"! may wish a CSPRNG with significantly lower memory usage than [`StdRng`]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230920,"byte_end":230995,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"! while being less concerned about performance, in which case [`ChaChaRng`]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":230996,"byte_end":231073,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"! is a good choice.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231074,"byte_end":231095,"line_start":63,"line_end":63,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231096,"byte_end":231099,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! One complexity is that the internal state of a PRNG must change with every","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231100,"byte_end":231178,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"! generated number. For APIs this generally means a mutable reference to the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231179,"byte_end":231257,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"! state of the PRNG has to be passed around.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231258,"byte_end":231304,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231305,"byte_end":231308,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! A solution is [`ThreadRng`]. This is a thread-local implementation of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231309,"byte_end":231382,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"! [`StdRng`] with automatic seeding on first use. It is the best choice if you","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231383,"byte_end":231463,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"! \"just\" want a convenient, secure, fast random number source. Use via the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231464,"byte_end":231540,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"! [`thread_rng`] function, which gets a reference to the current thread's","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231541,"byte_end":231616,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"! local instance.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231617,"byte_end":231636,"line_start":73,"line_end":73,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231637,"byte_end":231640,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! ## Seeding","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231641,"byte_end":231655,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231656,"byte_end":231659,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! As mentioned above, PRNGs require a random seed in order to produce random","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231660,"byte_end":231738,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"! output. This is especially important for CSPRNGs, which are still","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231739,"byte_end":231808,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"! deterministic algorithms, thus can only be secure if their seed value is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231809,"byte_end":231885,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"! also secure. To seed a PRNG, use one of:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231886,"byte_end":231930,"line_start":80,"line_end":80,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231931,"byte_end":231934,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"! - [`FromEntropy::from_entropy`]; this is the most convenient way to seed","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":231935,"byte_end":232011,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"!   with fresh, secure random data.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232012,"byte_end":232049,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"! - [`SeedableRng::from_rng`]; this allows seeding from another PRNG or","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232050,"byte_end":232123,"line_start":84,"line_end":84,"column_start":1,"column_end":74}},{"value":"!   from an entropy source such as [`EntropyRng`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232124,"byte_end":232176,"line_start":85,"line_end":85,"column_start":1,"column_end":53}},{"value":"! - [`SeedableRng::from_seed`]; this is mostly useful if you wish to be able","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232177,"byte_end":232255,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"!   to reproduce the output sequence by using a fixed seed. (Don't use","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232256,"byte_end":232328,"line_start":87,"line_end":87,"column_start":1,"column_end":73}},{"value":"!   [`StdRng`] or [`SmallRng`] in this case since different algorithms may be","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232329,"byte_end":232408,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"!   used by future versions of Rand; use an algorithm from the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232409,"byte_end":232473,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"!   [`prng` module].)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232474,"byte_end":232497,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232498,"byte_end":232501,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ## Conclusion","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232502,"byte_end":232519,"line_start":92,"line_end":92,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232520,"byte_end":232523,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! - [`thread_rng`] is what you often want to use.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232524,"byte_end":232575,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"! - If you want more control, flexibility, or better performance, use","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232576,"byte_end":232647,"line_start":95,"line_end":95,"column_start":1,"column_end":72}},{"value":"!   [`StdRng`], [`SmallRng`] or an algorithm from the [`prng` module].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232648,"byte_end":232720,"line_start":96,"line_end":96,"column_start":1,"column_end":73}},{"value":"! - Use [`FromEntropy::from_entropy`] to seed new PRNGs.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232721,"byte_end":232779,"line_start":97,"line_end":97,"column_start":1,"column_end":59}},{"value":"! - If you need reproducibility, use [`SeedableRng::from_seed`] combined with","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232780,"byte_end":232859,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"!   a named PRNG.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232860,"byte_end":232879,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232880,"byte_end":232883,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! More information and notes on cryptographic security can be found","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232884,"byte_end":232953,"line_start":101,"line_end":101,"column_start":1,"column_end":70}},{"value":"! in the [`prng` module].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232954,"byte_end":232981,"line_start":102,"line_end":102,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232982,"byte_end":232985,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"! ## Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":232986,"byte_end":233001,"line_start":104,"line_end":104,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233002,"byte_end":233005,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"! Examples of seeding PRNGs:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233006,"byte_end":233036,"line_start":106,"line_end":106,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233037,"byte_end":233040,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233041,"byte_end":233048,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"! use rand::prelude::*;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233049,"byte_end":233074,"line_start":109,"line_end":109,"column_start":1,"column_end":26}},{"value":"! # use rand::Error;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233075,"byte_end":233097,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233098,"byte_end":233101,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! // StdRng seeded securely by the OS or local entropy collector:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233102,"byte_end":233169,"line_start":112,"line_end":112,"column_start":1,"column_end":68}},{"value":"! let mut rng = StdRng::from_entropy();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233170,"byte_end":233211,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"! # let v: u32 = rng.gen();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233212,"byte_end":233241,"line_start":114,"line_end":114,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233242,"byte_end":233245,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! // SmallRng seeded from thread_rng:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233246,"byte_end":233285,"line_start":116,"line_end":116,"column_start":1,"column_end":40}},{"value":"! # fn try_inner() -> Result<(), Error> {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233286,"byte_end":233329,"line_start":117,"line_end":117,"column_start":1,"column_end":44}},{"value":"! let mut rng = SmallRng::from_rng(thread_rng())?;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233330,"byte_end":233382,"line_start":118,"line_end":118,"column_start":1,"column_end":53}},{"value":"! # let v: u32 = rng.gen();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233383,"byte_end":233412,"line_start":119,"line_end":119,"column_start":1,"column_end":30}},{"value":"! # Ok(())","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233413,"byte_end":233425,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233426,"byte_end":233433,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"! # try_inner().unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233434,"byte_end":233461,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233462,"byte_end":233465,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! // SmallRng seeded by a constant, for deterministic results:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233466,"byte_end":233530,"line_start":124,"line_end":124,"column_start":1,"column_end":65}},{"value":"! let seed = [1,2,3,4, 5,6,7,8, 9,10,11,12, 13,14,15,16]; // byte array","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233531,"byte_end":233604,"line_start":125,"line_end":125,"column_start":1,"column_end":74}},{"value":"! let mut rng = SmallRng::from_seed(seed);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233605,"byte_end":233649,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"! # let v: u32 = rng.gen();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233650,"byte_end":233679,"line_start":127,"line_end":127,"column_start":1,"column_end":30}},{"value":"! ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233680,"byte_end":233687,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233688,"byte_end":233691,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233692,"byte_end":233695,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! # Implementing custom RNGs","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233696,"byte_end":233726,"line_start":131,"line_end":131,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233727,"byte_end":233730,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! If you want to implement custom RNG, see the [`rand_core`] crate. The RNG","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233731,"byte_end":233808,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"! will have to implement the [`RngCore`] trait, where the [`Rng`] trait is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233809,"byte_end":233885,"line_start":134,"line_end":134,"column_start":1,"column_end":77}},{"value":"! build on top of.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233886,"byte_end":233906,"line_start":135,"line_end":135,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233907,"byte_end":233910,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! If the RNG needs seeding, also implement the [`SeedableRng`] trait.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233911,"byte_end":233982,"line_start":137,"line_end":137,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233983,"byte_end":233986,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! [`CryptoRng`] is a marker trait cryptographically secure PRNGs can","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":233987,"byte_end":234057,"line_start":139,"line_end":139,"column_start":1,"column_end":71}},{"value":"! implement.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234058,"byte_end":234072,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234073,"byte_end":234076,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234077,"byte_end":234080,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! [`ThreadRng`]: struct.ThreadRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234097,"byte_end":234137,"line_start":144,"line_end":144,"column_start":1,"column_end":41}},{"value":"! [`StdRng`]: struct.StdRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234138,"byte_end":234172,"line_start":145,"line_end":145,"column_start":1,"column_end":35}},{"value":"! [`SmallRng`]: struct.SmallRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234173,"byte_end":234211,"line_start":146,"line_end":146,"column_start":1,"column_end":39}},{"value":"! [`EntropyRng`]: struct.EntropyRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234212,"byte_end":234254,"line_start":147,"line_end":147,"column_start":1,"column_end":43}},{"value":"! [`OsRng`]: struct.OsRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234255,"byte_end":234287,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"! [`JitterRng`]: struct.JitterRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234288,"byte_end":234328,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"! [`rand_core`]: https://crates.io/crates/rand_core","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234360,"byte_end":234413,"line_start":151,"line_end":151,"column_start":1,"column_end":54}},{"value":"! [`prng` module]: ../prng/index.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234414,"byte_end":234453,"line_start":152,"line_end":152,"column_start":1,"column_end":40}},{"value":"! [`CryptoRng`]: ../trait.CryptoRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234454,"byte_end":234496,"line_start":153,"line_end":153,"column_start":1,"column_end":43}},{"value":"! [`FromEntropy`]: ../trait.FromEntropy.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234497,"byte_end":234543,"line_start":154,"line_end":154,"column_start":1,"column_end":47}},{"value":"! [`FromEntropy::from_entropy`]: ../trait.FromEntropy.html#tymethod.from_entropy","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234544,"byte_end":234626,"line_start":155,"line_end":155,"column_start":1,"column_end":83}},{"value":"! [`RngCore`]: ../trait.RngCore.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234627,"byte_end":234665,"line_start":156,"line_end":156,"column_start":1,"column_end":39}},{"value":"! [`Rng`]: ../trait.Rng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234666,"byte_end":234696,"line_start":157,"line_end":157,"column_start":1,"column_end":31}},{"value":"! [`SeedableRng`]: ../trait.SeedableRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234697,"byte_end":234743,"line_start":158,"line_end":158,"column_start":1,"column_end":47}},{"value":"! [`SeedableRng::from_rng`]: ../trait.SeedableRng.html#tymethod.from_rng","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234744,"byte_end":234818,"line_start":159,"line_end":159,"column_start":1,"column_end":75}},{"value":"! [`SeedableRng::from_seed`]: ../trait.SeedableRng.html#tymethod.from_seed","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234819,"byte_end":234895,"line_start":160,"line_end":160,"column_start":1,"column_end":77}},{"value":"! [`thread_rng`]: ../fn.thread_rng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234896,"byte_end":234937,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"! [`mock::StepRng`]: mock/struct.StepRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234938,"byte_end":234985,"line_start":162,"line_end":162,"column_start":1,"column_end":48}},{"value":"! [`adapter::ReadRng`]: adapter/struct.ReadRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":234986,"byte_end":235039,"line_start":163,"line_end":163,"column_start":1,"column_end":54}},{"value":"! [`ChaChaRng`]: ../prng/chacha/struct.ChaChaRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":235040,"byte_end":235095,"line_start":164,"line_end":164,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":494},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"adapter","qualname":"::rngs::adapter","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/mod.rs","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":545}],"decl_id":null,"docs":" Wrappers / adapters forming RNGs\n","sig":null,"attributes":[{"value":"! Wrappers / adapters forming RNGs","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/mod.rs","byte_start":237351,"byte_end":237387,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1404},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240466,"byte_end":240478,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"ReseedingRng","qualname":"::rngs::adapter::reseeding::ReseedingRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around any PRNG which reseeds the underlying PRNG after it has\n generated a certain number of random bytes.","sig":null,"attributes":[{"value":"/ A wrapper around any PRNG which reseeds the underlying PRNG after it has","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":238267,"byte_end":238343,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ generated a certain number of random bytes.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":238344,"byte_end":238391,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":238392,"byte_end":238395,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ When the RNG gets cloned, the clone is reseeded on first use.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":238396,"byte_end":238461,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":238462,"byte_end":238465,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reseeding is never strictly *necessary*. Cryptographic PRNGs don't have a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":238466,"byte_end":238543,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ limited number of bytes they can output, or at least not a limit reachable","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":238544,"byte_end":238622,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ in any practical way. There is no such thing as 'running out of entropy'.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":238623,"byte_end":238700,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":238701,"byte_end":238704,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Some small non-cryptographic PRNGs can have very small periods, for","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":238705,"byte_end":238776,"line_start":28,"line_end":28,"column_start":1,"column_end":72}},{"value":"/ example less than 2<sup>64</sup>. Would reseeding help to ensure that you do","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":238777,"byte_end":238857,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ not wrap around at the end of the period? A period of 2<sup>64</sup> still","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":238858,"byte_end":238936,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ takes several centuries of CPU-years on current hardware. Reseeding will","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":238937,"byte_end":239013,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ actually make things worse, because the reseeded PRNG will just continue","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239014,"byte_end":239090,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ somewhere else *in the same period*, with a high chance of overlapping with","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239091,"byte_end":239170,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ previously used parts of it.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239171,"byte_end":239203,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239204,"byte_end":239207,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # When should you use `ReseedingRng`?","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239208,"byte_end":239249,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239250,"byte_end":239253,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - Reseeding can be seen as some form of 'security in depth'. Even if in the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239254,"byte_end":239333,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/   future a cryptographic weakness is found in the CSPRNG being used,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239334,"byte_end":239406,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/   occasionally reseeding should make exploiting it much more difficult or","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239407,"byte_end":239484,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/   even impossible.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239485,"byte_end":239507,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/ - It can be used as a poor man's cryptography (not recommended, just use a","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239508,"byte_end":239586,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/   good CSPRNG). Previous implementations of `thread_rng` for example used","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239587,"byte_end":239664,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/   `ReseedingRng` with the ISAAC RNG. That algorithm, although apparently","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239665,"byte_end":239741,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/   strong and with no known attack, does not come with any proof of security","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239742,"byte_end":239821,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/   and does not meet the current standards for a cryptographically secure","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239822,"byte_end":239898,"line_start":46,"line_end":46,"column_start":1,"column_end":77}},{"value":"/   PRNG. By reseeding it frequently (every 32 kiB) it seems safe to assume","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239899,"byte_end":239976,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/   there is no attack that can operate on the tiny window between reseeds.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":239977,"byte_end":240054,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240055,"byte_end":240058,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Error handling","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240059,"byte_end":240079,"line_start":50,"line_end":50,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240080,"byte_end":240083,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Although extremely unlikely, reseeding the wrapped PRNG can fail.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240084,"byte_end":240153,"line_start":52,"line_end":52,"column_start":1,"column_end":70}},{"value":"/ `ReseedingRng` will never panic but try to handle the error intelligently","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240154,"byte_end":240231,"line_start":53,"line_end":53,"column_start":1,"column_end":78}},{"value":"/ through some combination of retrying and delaying reseeding until later.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240232,"byte_end":240308,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ If handling the source error fails `ReseedingRng` will continue generating","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240309,"byte_end":240387,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ data from the wrapped PRNG without reseeding.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240388,"byte_end":240437,"line_start":56,"line_end":56,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240975,"byte_end":240978,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<ReseedingRng<R, Rsdr>>::new","value":"fn (rng: R, threshold: u64, reseeder: Rsdr) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReseedingRng` with the given parameters.","sig":null,"attributes":[{"value":"/ Create a new `ReseedingRng` with the given parameters.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240680,"byte_end":240738,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240743,"byte_end":240746,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240751,"byte_end":240766,"line_start":68,"line_end":68,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240771,"byte_end":240774,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ * `rng`: the random number generator to use.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240779,"byte_end":240827,"line_start":70,"line_end":70,"column_start":5,"column_end":53}},{"value":"/ * `threshold`: the number of generated bytes after which to reseed the RNG.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240832,"byte_end":240911,"line_start":71,"line_end":71,"column_start":5,"column_end":84}},{"value":"/ * `reseeder`: the RNG to use for reseeding.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240916,"byte_end":240963,"line_start":72,"line_end":72,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":241163,"byte_end":241169,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"reseed","qualname":"<ReseedingRng<R, Rsdr>>::reseed","value":"fn (&mut self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Reseed the internal PRNG.\n","sig":null,"attributes":[{"value":"/ Reseed the internal PRNG.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":241122,"byte_end":241151,"line_start":77,"line_end":77,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":546},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jitter","qualname":"::rngs::jitter","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":553},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":566},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":1424},{"krate":0,"index":1445},{"krate":0,"index":1443},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":610}],"decl_id":null,"docs":" Non-physical true random number generator based on timing jitter.\n","sig":null,"attributes":[{"value":"! Non-physical true random number generator based on timing jitter.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":247599,"byte_end":247668,"line_start":17,"line_end":17,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":560},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":252659,"byte_end":252668,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"JitterRng","qualname":"::rngs::jitter::JitterRng","value":"JitterRng {  }","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565}],"decl_id":null,"docs":" A true random number generator based on jitter in the CPU execution time,\n and jitter in memory access time.","sig":null,"attributes":[{"value":"/ A true random number generator based on jitter in the CPU execution time,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":248272,"byte_end":248349,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ and jitter in memory access time.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":248350,"byte_end":248387,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":248388,"byte_end":248391,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This is a true random number generator, as opposed to pseudo-random","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":248392,"byte_end":248463,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ generators. Random numbers generated by `JitterRng` can be seen as fresh","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":248464,"byte_end":248540,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ entropy. A consequence is that is orders of magnitude slower than [`OsRng`]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":248541,"byte_end":248620,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ and PRNGs (about 10<sup>3</sup>..10<sup>6</sup> slower).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":248621,"byte_end":248681,"line_start":40,"line_end":40,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":248682,"byte_end":248685,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There are very few situations where using this RNG is appropriate. Only very","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":248686,"byte_end":248766,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ few applications require true entropy. A normal PRNG can be statistically","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":248767,"byte_end":248844,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ indistinguishable, and a cryptographic PRNG should also be as impossible to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":248845,"byte_end":248924,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ predict.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":248925,"byte_end":248937,"line_start":45,"line_end":45,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":248938,"byte_end":248941,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Use of `JitterRng` is recommended for initializing cryptographic PRNGs when","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":248942,"byte_end":249021,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ [`OsRng`] is not available.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249022,"byte_end":249053,"line_start":48,"line_end":48,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249054,"byte_end":249057,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ `JitterRng` can be used without the standard library, but not conveniently,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249058,"byte_end":249137,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ you must provide a high-precision timer and carefully have to follow the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249138,"byte_end":249214,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ instructions of [`new_with_timer`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249215,"byte_end":249254,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249255,"byte_end":249258,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ This implementation is based on","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249259,"byte_end":249294,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/ [Jitterentropy](http://www.chronox.de/jent.html) version 2.1.0.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249295,"byte_end":249362,"line_start":55,"line_end":55,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249363,"byte_end":249366,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Note: There is no accurate timer available on Wasm platforms, to help","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249367,"byte_end":249440,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ prevent fingerprinting or timing side-channel attacks. Therefore","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249441,"byte_end":249509,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ [`JitterRng::new()`] is not available on Wasm.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249510,"byte_end":249560,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249561,"byte_end":249564,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Quality testing","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249565,"byte_end":249586,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249587,"byte_end":249590,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [`JitterRng::new()`] has build-in, but limited, quality testing, however","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249591,"byte_end":249667,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ before using `JitterRng` on untested hardware, or after changes that could","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249668,"byte_end":249746,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ effect how the code is optimized (such as a new LLVM version), it is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249747,"byte_end":249819,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ recommend to run the much more stringent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249820,"byte_end":249864,"line_start":66,"line_end":66,"column_start":1,"column_end":45}},{"value":"/ [NIST SP 800-90B Entropy Estimation Suite](","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249865,"byte_end":249912,"line_start":67,"line_end":67,"column_start":1,"column_end":48}},{"value":"/ https://github.com/usnistgov/SP800-90B_EntropyAssessment).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249913,"byte_end":249975,"line_start":68,"line_end":68,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249976,"byte_end":249979,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Use the following code using [`timer_stats`] to collect the data:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":249980,"byte_end":250049,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250050,"byte_end":250053,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250054,"byte_end":250067,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/ use rand::jitter::JitterRng;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250068,"byte_end":250100,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250101,"byte_end":250106,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250107,"byte_end":250135,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/ # use std::fs::File;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250136,"byte_end":250160,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/ # use std::io::Write;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250161,"byte_end":250186,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250187,"byte_end":250192,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/ # fn try_main() -> Result<(), Box<Error>> {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250193,"byte_end":250240,"line_start":79,"line_end":79,"column_start":1,"column_end":48}},{"value":"/ let mut rng = JitterRng::new()?;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250241,"byte_end":250277,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250278,"byte_end":250281,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // 1_000_000 results are required for the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250282,"byte_end":250327,"line_start":82,"line_end":82,"column_start":1,"column_end":46}},{"value":"/ // NIST SP 800-90B Entropy Estimation Suite","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250328,"byte_end":250375,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/ const ROUNDS: usize = 1_000_000;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250376,"byte_end":250412,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/ let mut deltas_variable: Vec<u8> = Vec::with_capacity(ROUNDS);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250413,"byte_end":250479,"line_start":85,"line_end":85,"column_start":1,"column_end":67}},{"value":"/ let mut deltas_minimal: Vec<u8> = Vec::with_capacity(ROUNDS);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250480,"byte_end":250545,"line_start":86,"line_end":86,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250546,"byte_end":250549,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..ROUNDS {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250550,"byte_end":250574,"line_start":88,"line_end":88,"column_start":1,"column_end":25}},{"value":"/     deltas_variable.push(rng.timer_stats(true) as u8);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250575,"byte_end":250633,"line_start":89,"line_end":89,"column_start":1,"column_end":59}},{"value":"/     deltas_minimal.push(rng.timer_stats(false) as u8);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250634,"byte_end":250692,"line_start":90,"line_end":90,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250693,"byte_end":250698,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250699,"byte_end":250702,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ // Write out after the statistics collection loop, to not disturb the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250703,"byte_end":250776,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/ // test results.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250777,"byte_end":250797,"line_start":94,"line_end":94,"column_start":1,"column_end":21}},{"value":"/ File::create(\"jitter_rng_var.bin\")?.write(&deltas_variable)?;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250798,"byte_end":250863,"line_start":95,"line_end":95,"column_start":1,"column_end":66}},{"value":"/ File::create(\"jitter_rng_min.bin\")?.write(&deltas_minimal)?;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250864,"byte_end":250928,"line_start":96,"line_end":96,"column_start":1,"column_end":65}},{"value":"/ #","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250929,"byte_end":250934,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/ # Ok(())","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250935,"byte_end":250947,"line_start":98,"line_end":98,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250948,"byte_end":250955,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250956,"byte_end":250961,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250962,"byte_end":250979,"line_start":101,"line_end":101,"column_start":1,"column_end":18}},{"value":"/ #     try_main().unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":250980,"byte_end":251010,"line_start":102,"line_end":102,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251011,"byte_end":251018,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251019,"byte_end":251026,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251027,"byte_end":251030,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This will produce two files: `jitter_rng_var.bin` and `jitter_rng_min.bin`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251031,"byte_end":251110,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ Run the Entropy Estimation Suite in three configurations, as outlined below.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251111,"byte_end":251191,"line_start":107,"line_end":107,"column_start":1,"column_end":81}},{"value":"/ Every run has two steps. One step to produce an estimation, another to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251192,"byte_end":251266,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ validate the estimation.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251267,"byte_end":251295,"line_start":109,"line_end":109,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251296,"byte_end":251299,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ 1. Estimate the expected amount of entropy that is at least available with","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251300,"byte_end":251378,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/    each round of the entropy collector. This number should be greater than","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251379,"byte_end":251457,"line_start":112,"line_end":112,"column_start":1,"column_end":79}},{"value":"/    the amount estimated with `64 / test_timer()`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251458,"byte_end":251511,"line_start":113,"line_end":113,"column_start":1,"column_end":54}},{"value":"/    ```sh","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251512,"byte_end":251524,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/    python noniid_main.py -v jitter_rng_var.bin 8","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251525,"byte_end":251577,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/    restart.py -v jitter_rng_var.bin 8 <min-entropy>","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251578,"byte_end":251633,"line_start":116,"line_end":116,"column_start":1,"column_end":56}},{"value":"/    ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251634,"byte_end":251644,"line_start":117,"line_end":117,"column_start":1,"column_end":11}},{"value":"/ 2. Estimate the expected amount of entropy that is available in the last 4","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251645,"byte_end":251723,"line_start":118,"line_end":118,"column_start":1,"column_end":79}},{"value":"/    bits of the timer delta after running noice sources. Note that a value of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251724,"byte_end":251804,"line_start":119,"line_end":119,"column_start":1,"column_end":81}},{"value":"/    `3.70` is the minimum estimated entropy for true randomness.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251805,"byte_end":251872,"line_start":120,"line_end":120,"column_start":1,"column_end":68}},{"value":"/    ```sh","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251873,"byte_end":251885,"line_start":121,"line_end":121,"column_start":1,"column_end":13}},{"value":"/    python noniid_main.py -v -u 4 jitter_rng_var.bin 4","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251886,"byte_end":251943,"line_start":122,"line_end":122,"column_start":1,"column_end":58}},{"value":"/    restart.py -v -u 4 jitter_rng_var.bin 4 <min-entropy>","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":251944,"byte_end":252004,"line_start":123,"line_end":123,"column_start":1,"column_end":61}},{"value":"/    ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":252005,"byte_end":252015,"line_start":124,"line_end":124,"column_start":1,"column_end":11}},{"value":"/ 3. Estimate the expected amount of entropy that is available to the entropy","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":252016,"byte_end":252095,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/    collector if both noice sources only run their minimal number of times.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":252096,"byte_end":252174,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/    This measures the absolute worst-case, and gives a lower bound for the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":252175,"byte_end":252252,"line_start":127,"line_end":127,"column_start":1,"column_end":78}},{"value":"/    available entropy.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":252253,"byte_end":252278,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/    ```sh","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":252279,"byte_end":252291,"line_start":129,"line_end":129,"column_start":1,"column_end":13}},{"value":"/    python noniid_main.py -v -u 4 jitter_rng_min.bin 4","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":252292,"byte_end":252349,"line_start":130,"line_end":130,"column_start":1,"column_end":58}},{"value":"/    restart.py -v -u 4 jitter_rng_min.bin 4 <min-entropy>","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":252350,"byte_end":252410,"line_start":131,"line_end":131,"column_start":1,"column_end":61}},{"value":"/    ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":252411,"byte_end":252421,"line_start":132,"line_end":132,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":252422,"byte_end":252425,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ [`OsRng`]: struct.OsRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":252426,"byte_end":252458,"line_start":134,"line_end":134,"column_start":1,"column_end":33}},{"value":"/ [`JitterRng::new()`]: struct.JitterRng.html#method.new","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":252459,"byte_end":252517,"line_start":135,"line_end":135,"column_start":1,"column_end":59}},{"value":"/ [`new_with_timer`]: struct.JitterRng.html#method.new_with_timer","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":252518,"byte_end":252585,"line_start":136,"line_end":136,"column_start":1,"column_end":68}},{"value":"/ [`timer_stats`]: struct.JitterRng.html#method.timer_stats","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":252586,"byte_end":252647,"line_start":137,"line_end":137,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1425},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":256033,"byte_end":256040,"line_start":226,"line_end":226,"column_start":5,"column_end":12},"name":"NoTimer","qualname":"::rngs::jitter::TimerError::NoTimer","value":"TimerError::NoTimer","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" No timer available.\n","sig":null,"attributes":[{"value":"/ No timer available.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":256005,"byte_end":256028,"line_start":225,"line_end":225,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1427},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":256100,"byte_end":256111,"line_start":228,"line_end":228,"column_start":5,"column_end":16},"name":"CoarseTimer","qualname":"::rngs::jitter::TimerError::CoarseTimer","value":"TimerError::CoarseTimer","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" Timer too coarse to use as an entropy source.\n","sig":null,"attributes":[{"value":"/ Timer too coarse to use as an entropy source.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":256046,"byte_end":256095,"line_start":227,"line_end":227,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1429},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":256164,"byte_end":256176,"line_start":230,"line_end":230,"column_start":5,"column_end":17},"name":"NotMonotonic","qualname":"::rngs::jitter::TimerError::NotMonotonic","value":"TimerError::NotMonotonic","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" Timer is not monotonically increasing.\n","sig":null,"attributes":[{"value":"/ Timer is not monotonically increasing.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":256117,"byte_end":256159,"line_start":229,"line_end":229,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1431},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":256230,"byte_end":256245,"line_start":232,"line_end":232,"column_start":5,"column_end":20},"name":"TinyVariantions","qualname":"::rngs::jitter::TimerError::TinyVariantions","value":"TimerError::TinyVariantions","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" Variations of deltas of time too small.\n","sig":null,"attributes":[{"value":"/ Variations of deltas of time too small.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":256182,"byte_end":256225,"line_start":231,"line_end":231,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1433},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":256313,"byte_end":256325,"line_start":234,"line_end":234,"column_start":5,"column_end":17},"name":"TooManyStuck","qualname":"::rngs::jitter::TimerError::TooManyStuck","value":"TimerError::TooManyStuck","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" Too many stuck results (indicating no added entropy).\n","sig":null,"attributes":[{"value":"/ Too many stuck results (indicating no added entropy).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":256251,"byte_end":256308,"line_start":233,"line_end":233,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1435},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":256350,"byte_end":256365,"line_start":236,"line_end":236,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::rngs::jitter::TimerError::__Nonexhaustive","value":"TimerError::__Nonexhaustive","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1424},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":255988,"byte_end":255998,"line_start":224,"line_end":224,"column_start":10,"column_end":20},"name":"TimerError","qualname":"::rngs::jitter::TimerError","value":"TimerError::{NoTimer, CoarseTimer, NotMonotonic, TinyVariantions, TooManyStuck, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1433},{"krate":0,"index":1435}],"decl_id":null,"docs":" An error that can occur when [`JitterRng::test_timer`] fails.","sig":null,"attributes":[{"value":"/ An error that can occur when [`JitterRng::test_timer`] fails.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":255799,"byte_end":255864,"line_start":220,"line_end":220,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":255865,"byte_end":255868,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ [`JitterRng::test_timer`]: struct.JitterRng.html#method.test_timer","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":255869,"byte_end":255939,"line_start":222,"line_end":222,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260528,"byte_end":260542,"line_start":349,"line_end":349,"column_start":12,"column_end":26},"name":"new_with_timer","qualname":"<JitterRng>::new_with_timer","value":"fn (timer: fn() -> u64) -> JitterRng","parent":null,"children":[],"decl_id":null,"docs":" Create a new `JitterRng`.\n A custom timer can be supplied, making it possible to use `JitterRng` in\n `no_std` environments.","sig":null,"attributes":[{"value":"/ Create a new `JitterRng`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":258805,"byte_end":258834,"line_start":304,"line_end":304,"column_start":5,"column_end":34}},{"value":"/ A custom timer can be supplied, making it possible to use `JitterRng` in","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":258839,"byte_end":258915,"line_start":305,"line_end":305,"column_start":5,"column_end":81}},{"value":"/ `no_std` environments.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":258920,"byte_end":258946,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":258951,"byte_end":258954,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The timer must have nanosecond precision.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":258959,"byte_end":259004,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259009,"byte_end":259012,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This method is more low-level than `new()`. It is the responsibility of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259017,"byte_end":259092,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ the caller to run [`test_timer`] before using any numbers generated with","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259097,"byte_end":259173,"line_start":311,"line_end":311,"column_start":5,"column_end":81}},{"value":"/ `JitterRng`, and optionally call [`set_rounds`]. Also it is important to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259178,"byte_end":259254,"line_start":312,"line_end":312,"column_start":5,"column_end":81}},{"value":"/ consume at least one `u64` before using the first result to initialize","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259259,"byte_end":259333,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ the entropy collection pool.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259338,"byte_end":259370,"line_start":314,"line_end":314,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259375,"byte_end":259378,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259383,"byte_end":259396,"line_start":316,"line_end":316,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259401,"byte_end":259404,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259409,"byte_end":259416,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # use rand::{Rng, Error};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259421,"byte_end":259450,"line_start":319,"line_end":319,"column_start":5,"column_end":34}},{"value":"/ use rand::jitter::JitterRng;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259455,"byte_end":259487,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259492,"byte_end":259495,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # fn try_inner() -> Result<(), Error> {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259500,"byte_end":259543,"line_start":322,"line_end":322,"column_start":5,"column_end":48}},{"value":"/ fn get_nstime() -> u64 {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259548,"byte_end":259576,"line_start":323,"line_end":323,"column_start":5,"column_end":33}},{"value":"/     use std::time::{SystemTime, UNIX_EPOCH};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259581,"byte_end":259629,"line_start":324,"line_end":324,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259634,"byte_end":259637,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/     let dur = SystemTime::now().duration_since(UNIX_EPOCH).unwrap();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259642,"byte_end":259714,"line_start":326,"line_end":326,"column_start":5,"column_end":77}},{"value":"/     // The correct way to calculate the current time is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259719,"byte_end":259778,"line_start":327,"line_end":327,"column_start":5,"column_end":64}},{"value":"/     // `dur.as_secs() * 1_000_000_000 + dur.subsec_nanos() as u64`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259783,"byte_end":259853,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/     // But this is faster, and the difference in terms of entropy is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259858,"byte_end":259930,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/     // negligible (log2(10^9) == 29.9).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259935,"byte_end":259978,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/     dur.as_secs() << 30 | dur.subsec_nanos() as u64","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":259983,"byte_end":260038,"line_start":331,"line_end":331,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260043,"byte_end":260048,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260053,"byte_end":260056,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ let mut rng = JitterRng::new_with_timer(get_nstime);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260061,"byte_end":260117,"line_start":334,"line_end":334,"column_start":5,"column_end":61}},{"value":"/ let rounds = rng.test_timer()?;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260122,"byte_end":260157,"line_start":335,"line_end":335,"column_start":5,"column_end":40}},{"value":"/ rng.set_rounds(rounds); // optional","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260162,"byte_end":260201,"line_start":336,"line_end":336,"column_start":5,"column_end":44}},{"value":"/ let _ = rng.gen::<u64>();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260206,"byte_end":260235,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260240,"byte_end":260243,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ // Ready for use","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260248,"byte_end":260268,"line_start":339,"line_end":339,"column_start":5,"column_end":25}},{"value":"/ let v: u64 = rng.gen();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260273,"byte_end":260300,"line_start":340,"line_end":340,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260305,"byte_end":260317,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260322,"byte_end":260329,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260334,"byte_end":260337,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # let _ = try_inner();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260342,"byte_end":260368,"line_start":344,"line_end":344,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260373,"byte_end":260380,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260385,"byte_end":260388,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ [`test_timer`]: struct.JitterRng.html#method.test_timer","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260393,"byte_end":260452,"line_start":347,"line_end":347,"column_start":5,"column_end":64}},{"value":"/ [`set_rounds`]: struct.JitterRng.html#method.set_rounds","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260457,"byte_end":260516,"line_start":348,"line_end":348,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":261326,"byte_end":261336,"line_start":369,"line_end":369,"column_start":12,"column_end":22},"name":"set_rounds","qualname":"<JitterRng>::set_rounds","value":"fn (&mut self, rounds: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configures how many rounds are used to generate each 64-bit value.\n This must be greater than zero, and has a big impact on performance\n and output quality.","sig":null,"attributes":[{"value":"/ Configures how many rounds are used to generate each 64-bit value.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260749,"byte_end":260819,"line_start":359,"line_end":359,"column_start":5,"column_end":75}},{"value":"/ This must be greater than zero, and has a big impact on performance","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260824,"byte_end":260895,"line_start":360,"line_end":360,"column_start":5,"column_end":76}},{"value":"/ and output quality.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260900,"byte_end":260923,"line_start":361,"line_end":361,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260928,"byte_end":260931,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`new_with_timer`] conservatively uses 64 rounds, but often less rounds","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":260936,"byte_end":261011,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ can be used. The `test_timer()` function returns the minimum number of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":261016,"byte_end":261090,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ rounds required for full strength (platform dependent), so one may use","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":261095,"byte_end":261169,"line_start":365,"line_end":365,"column_start":5,"column_end":79}},{"value":"/ `rng.set_rounds(rng.test_timer()?);` or cache the value.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":261174,"byte_end":261234,"line_start":366,"line_end":366,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":261239,"byte_end":261242,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ [`new_with_timer`]: struct.JitterRng.html#method.new_with_timer","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":261247,"byte_end":261314,"line_start":368,"line_end":368,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":271850,"byte_end":271860,"line_start":614,"line_end":614,"column_start":12,"column_end":22},"name":"test_timer","qualname":"<JitterRng>::test_timer","value":"fn (&mut self) -> Result<u8, TimerError>","parent":null,"children":[],"decl_id":null,"docs":" Basic quality tests on the timer, by measuring CPU timing jitter a few\n hundred times.","sig":null,"attributes":[{"value":"/ Basic quality tests on the timer, by measuring CPU timing jitter a few","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":271478,"byte_end":271552,"line_start":606,"line_end":606,"column_start":5,"column_end":79}},{"value":"/ hundred times.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":271557,"byte_end":271575,"line_start":607,"line_end":607,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":271580,"byte_end":271583,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ If succesful, this will return the estimated number of rounds necessary","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":271588,"byte_end":271663,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/ to collect 64 bits of entropy. Otherwise a [`TimerError`] with the cause","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":271668,"byte_end":271744,"line_start":610,"line_end":610,"column_start":5,"column_end":81}},{"value":"/ of the failure will be returned.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":271749,"byte_end":271785,"line_start":611,"line_end":611,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":271790,"byte_end":271793,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ [`TimerError`]: enum.TimerError.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":271798,"byte_end":271838,"line_start":613,"line_end":613,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":278385,"byte_end":278396,"line_start":765,"line_end":765,"column_start":12,"column_end":23},"name":"timer_stats","qualname":"<JitterRng>::timer_stats","value":"fn (&mut self, var_rounds: bool) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Statistical test: return the timer delta of one normal run of the\n `JitterRng` entropy collector.","sig":null,"attributes":[{"value":"/ Statistical test: return the timer delta of one normal run of the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":277668,"byte_end":277737,"line_start":751,"line_end":751,"column_start":5,"column_end":74}},{"value":"/ `JitterRng` entropy collector.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":277742,"byte_end":277776,"line_start":752,"line_end":752,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":277781,"byte_end":277784,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ Setting `var_rounds` to `true` will execute the memory access and the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":277789,"byte_end":277862,"line_start":754,"line_end":754,"column_start":5,"column_end":78}},{"value":"/ CPU jitter noice sources a variable amount of times (just like a real","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":277867,"byte_end":277940,"line_start":755,"line_end":755,"column_start":5,"column_end":78}},{"value":"/ `JitterRng` round).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":277945,"byte_end":277968,"line_start":756,"line_end":756,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":277973,"byte_end":277976,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Setting `var_rounds` to `false` will execute the noice sources the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":277981,"byte_end":278051,"line_start":758,"line_end":758,"column_start":5,"column_end":75}},{"value":"/ minimal number of times. This can be used to measure the minimum amount","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":278056,"byte_end":278131,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of entropy one round of the entropy collector can collect in the worst","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":278136,"byte_end":278210,"line_start":760,"line_end":760,"column_start":5,"column_end":79}},{"value":"/ case.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":278215,"byte_end":278224,"line_start":761,"line_end":761,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":278229,"byte_end":278232,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ See [Quality testing](struct.JitterRng.html#quality-testing) on how to","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":278237,"byte_end":278311,"line_start":763,"line_end":763,"column_start":5,"column_end":79}},{"value":"/ use `timer_stats` to test the quality of `JitterRng`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":278316,"byte_end":278373,"line_start":764,"line_end":764,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":611},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mock","qualname":"::rngs::mock","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":1447},{"krate":0,"index":1452},{"krate":0,"index":1450},{"krate":0,"index":616},{"krate":0,"index":618}],"decl_id":null,"docs":" Mock random number generator\n","sig":null,"attributes":[{"value":"! Mock random number generator","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":282863,"byte_end":282895,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1447},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283424,"byte_end":283431,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"StepRng","qualname":"::rngs::mock::StepRng","value":"StepRng {  }","parent":null,"children":[{"krate":0,"index":1448},{"krate":0,"index":1449}],"decl_id":null,"docs":" A simple implementation of `RngCore` for testing purposes.\n \n This generates an arithmetic sequence (i.e. adds a constant each step)\n over a `u64` number, using wrapping arithmetic. If the increment is 0\n the generator yields a constant.\n \n ```\n use rand::Rng;\n use rand::rngs::mock::StepRng;\n \n let mut my_rng = StepRng::new(2, 1);\n let sample: [u64; 3] = my_rng.gen();\n assert_eq!(sample, [2, 3, 4]);\n ```\n","sig":null,"attributes":[{"value":"/ A simple implementation of `RngCore` for testing purposes.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":282938,"byte_end":283000,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283001,"byte_end":283005,"line_start":16,"line_end":16,"column_start":1,"column_end":5}},{"value":"/ This generates an arithmetic sequence (i.e. adds a constant each step)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283006,"byte_end":283080,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ over a `u64` number, using wrapping arithmetic. If the increment is 0","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283081,"byte_end":283154,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ the generator yields a constant.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283155,"byte_end":283191,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283192,"byte_end":283196,"line_start":20,"line_end":20,"column_start":1,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283197,"byte_end":283204,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use rand::Rng;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283205,"byte_end":283223,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/ use rand::rngs::mock::StepRng;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283224,"byte_end":283258,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283259,"byte_end":283263,"line_start":24,"line_end":24,"column_start":1,"column_end":5}},{"value":"/ let mut my_rng = StepRng::new(2, 1);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283264,"byte_end":283304,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/ let sample: [u64; 3] = my_rng.gen();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283305,"byte_end":283345,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(sample, [2, 3, 4]);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283346,"byte_end":283380,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283381,"byte_end":283388,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283621,"byte_end":283624,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<StepRng>::new","value":"fn (initial: u64, increment: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `StepRng`, yielding an arithmetic sequence starting with\n `initial` and incremented by `increment` each time.\n","sig":null,"attributes":[{"value":"/ Create a `StepRng`, yielding an arithmetic sequence starting with","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283480,"byte_end":283549,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ `initial` and incremented by `increment` each time.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283554,"byte_end":283609,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1454},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286819,"byte_end":286827,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"SmallRng","qualname":"::rngs::small::SmallRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" An RNG recommended when small state, cheap initialization and good\n performance are required. The PRNG algorithm in `SmallRng` is chosen to be\n efficient on the current platform, **without consideration for cryptography\n or security**. The size of its state is much smaller than for [`StdRng`].","sig":null,"attributes":[{"value":"/ An RNG recommended when small state, cheap initialization and good","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":284723,"byte_end":284793,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/ performance are required. The PRNG algorithm in `SmallRng` is chosen to be","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":284794,"byte_end":284872,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ efficient on the current platform, **without consideration for cryptography","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":284873,"byte_end":284952,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ or security**. The size of its state is much smaller than for [`StdRng`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":284953,"byte_end":285030,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285031,"byte_end":285034,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Reproducibility of output from this generator is however not required, thus","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285035,"byte_end":285114,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ future library versions may use a different internal generator with","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285115,"byte_end":285186,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/ different output. Further, this generator may not be portable and can","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285187,"byte_end":285260,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ produce different output depending on the architecture. If you require","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285261,"byte_end":285335,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ reproducible output, use a named RNG, for example [`XorShiftRng`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285336,"byte_end":285406,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285407,"byte_end":285410,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The current algorithm used on all platforms is [Xorshift].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285411,"byte_end":285473,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285474,"byte_end":285477,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285478,"byte_end":285492,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285493,"byte_end":285496,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Initializing `SmallRng` with a random seed can be done using [`FromEntropy`]:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285497,"byte_end":285578,"line_start":31,"line_end":31,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285579,"byte_end":285582,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285583,"byte_end":285590,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # use rand::Rng;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285591,"byte_end":285611,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ use rand::FromEntropy;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285612,"byte_end":285638,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/ use rand::rngs::SmallRng;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285639,"byte_end":285668,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285669,"byte_end":285672,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Create small, cheap to initialize and fast RNG with a random seed.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285673,"byte_end":285746,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ // The randomness is supplied by the operating system.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285747,"byte_end":285805,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/ let mut small_rng = SmallRng::from_entropy();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285806,"byte_end":285855,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/ # let v: u32 = small_rng.gen();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285856,"byte_end":285891,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285892,"byte_end":285899,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285900,"byte_end":285903,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ When initializing a lot of `SmallRng`'s, using [`thread_rng`] can be more","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285904,"byte_end":285981,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"/ efficient:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285982,"byte_end":285996,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":285997,"byte_end":286000,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286001,"byte_end":286008,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use std::iter;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286009,"byte_end":286027,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ use rand::{SeedableRng, thread_rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286028,"byte_end":286068,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ use rand::rngs::SmallRng;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286069,"byte_end":286098,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286099,"byte_end":286102,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Create a big, expensive to initialize and slower, but unpredictable RNG.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286103,"byte_end":286182,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ // This is cached and done only once per thread.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286183,"byte_end":286235,"line_start":53,"line_end":53,"column_start":1,"column_end":53}},{"value":"/ let mut thread_rng = thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286236,"byte_end":286274,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ // Create small, cheap to initialize and fast RNGs with random seeds.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286275,"byte_end":286348,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/ // One can generally assume this won't fail.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286349,"byte_end":286397,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/ let rngs: Vec<SmallRng> = iter::repeat(())","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286398,"byte_end":286444,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/     .map(|()| SmallRng::from_rng(&mut thread_rng).unwrap())","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286445,"byte_end":286508,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/     .take(10)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286509,"byte_end":286526,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/     .collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286527,"byte_end":286546,"line_start":60,"line_end":60,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286547,"byte_end":286554,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286555,"byte_end":286558,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [`FromEntropy`]: ../trait.FromEntropy.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286559,"byte_end":286605,"line_start":63,"line_end":63,"column_start":1,"column_end":47}},{"value":"/ [`StdRng`]: struct.StdRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286606,"byte_end":286640,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/ [`thread_rng`]: ../fn.thread_rng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286641,"byte_end":286682,"line_start":65,"line_end":65,"column_start":1,"column_end":42}},{"value":"/ [Xorshift]: ../prng/struct.XorShiftRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286683,"byte_end":286730,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/ [`XorShiftRng`]: ../prng/struct.XorShiftRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286731,"byte_end":286783,"line_start":67,"line_end":67,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1461},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288904,"byte_end":288910,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"StdRng","qualname":"::rngs::std::StdRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" The standard RNG. The PRNG algorithm in `StdRng` is chosen to be efficient\n on the current platform, to be statistically strong and unpredictable\n (meaning a cryptographically secure PRNG).","sig":null,"attributes":[{"value":"/ The standard RNG. The PRNG algorithm in `StdRng` is chosen to be efficient","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288121,"byte_end":288199,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ on the current platform, to be statistically strong and unpredictable","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288200,"byte_end":288273,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ (meaning a cryptographically secure PRNG).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288274,"byte_end":288320,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288321,"byte_end":288324,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The current algorithm used on all platforms is [HC-128].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288325,"byte_end":288385,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288386,"byte_end":288389,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reproducibility of output from this generator is however not required, thus","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288390,"byte_end":288469,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ future library versions may use a different internal generator with","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288470,"byte_end":288541,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/ different output. Further, this generator may not be portable and can","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288542,"byte_end":288615,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ produce different output depending on the architecture. If you require","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288616,"byte_end":288690,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ reproducible output, use a named RNG, for example [`ChaChaRng`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288691,"byte_end":288759,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288760,"byte_end":288763,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [HC-128]: ../prng/hc128/struct.Hc128Rng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288764,"byte_end":288812,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ [`ChaChaRng`]: ../prng/chacha/struct.ChaChaRng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288813,"byte_end":288868,"line_start":29,"line_end":29,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":669},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12843,"byte_end":12849,"line_start":314,"line_end":314,"column_start":9,"column_end":15},"name":"jitter","qualname":"::jitter","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":670}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12799,"byte_end":12819,"line_start":312,"line_end":312,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":673},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13637,"byte_end":13643,"line_start":340,"line_end":340,"column_start":9,"column_end":15},"name":"chacha","qualname":"::chacha","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":674}],"decl_id":null,"docs":" The ChaCha random number generator.\n","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13593,"byte_end":13613,"line_start":338,"line_end":338,"column_start":1,"column_end":21}},{"value":"! The ChaCha random number generator.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13650,"byte_end":13689,"line_start":341,"line_end":341,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":675},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13744,"byte_end":13749,"line_start":345,"line_end":345,"column_start":9,"column_end":14},"name":"isaac","qualname":"::isaac","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":676}],"decl_id":null,"docs":" The ISAAC random number generator.\n","sig":null,"attributes":[{"value":"! The ISAAC random number generator.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13756,"byte_end":13794,"line_start":346,"line_end":346,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":689},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14476,"byte_end":14480,"line_start":368,"line_end":368,"column_start":11,"column_end":15},"name":"Rand","qualname":"::Rand","value":"Rand: Sized","parent":null,"children":[{"krate":0,"index":690}],"decl_id":null,"docs":" A type that can be randomly generated using an [`Rng`].\n \n This is merely an adapter around the [`Standard`] distribution for\n convenience and backwards-compatibility.\n \n [`Rng`]: trait.Rng.html\n [`Standard`]: distributions/struct.Standard.html\n","sig":null,"attributes":[{"value":"/ A type that can be randomly generated using an [`Rng`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14126,"byte_end":14185,"line_start":360,"line_end":360,"column_start":1,"column_end":60}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14186,"byte_end":14190,"line_start":361,"line_end":361,"column_start":1,"column_end":5}},{"value":"/ This is merely an adapter around the [`Standard`] distribution for","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14191,"byte_end":14261,"line_start":362,"line_end":362,"column_start":1,"column_end":71}},{"value":"/ convenience and backwards-compatibility.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14262,"byte_end":14306,"line_start":363,"line_end":363,"column_start":1,"column_end":45}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14307,"byte_end":14311,"line_start":364,"line_end":364,"column_start":1,"column_end":5}},{"value":"/ [`Rng`]: trait.Rng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14312,"byte_end":14339,"line_start":365,"line_end":365,"column_start":1,"column_end":28}},{"value":"/ [`Standard`]: distributions/struct.Standard.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14340,"byte_end":14392,"line_start":366,"line_end":366,"column_start":1,"column_end":53}},{"value":"deprecated(since = \"0.5.0\", note = \"replaced by distributions::Standard\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14393,"byte_end":14465,"line_start":367,"line_end":367,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14597,"byte_end":14601,"line_start":371,"line_end":371,"column_start":8,"column_end":12},"name":"rand","qualname":"::Rand::rand","value":"fn <R> (rng: &mut R) -> Self","parent":{"krate":0,"index":689},"children":[],"decl_id":null,"docs":" Generates a random instance of this type using the specified source of\n randomness.\n","sig":null,"attributes":[{"value":"/ Generates a random instance of this type using the specified source of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14495,"byte_end":14569,"line_start":369,"line_end":369,"column_start":5,"column_end":79}},{"value":"/ randomness.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14574,"byte_end":14589,"line_start":370,"line_end":370,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":692},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16212,"byte_end":16215,"line_start":413,"line_end":413,"column_start":11,"column_end":14},"name":"Rng","qualname":"::Rng","value":"Rng: RngCore","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":720}],"decl_id":null,"docs":" An automatically-implemented extension trait on [`RngCore`] providing high-level\n generic methods for sampling values and other convenience methods.\n \n This is the primary trait to use when generating random values.\n \n # Generic usage\n \n The basic pattern is `fn foo<R: Rng + ?Sized>(rng: &mut R)`. Some\n things are worth noting here:\n \n - Since `Rng: RngCore` and every `RngCore` implements `Rng`, it makes no\n   difference whether we use `R: Rng` or `R: RngCore`.\n - The `+ ?Sized` un-bounding allows functions to be called directly on\n   type-erased references; i.e. `foo(r)` where `r: &mut RngCore`. Without\n   this it would be necessary to write `foo(&mut r)`.\n \n An alternative pattern is possible: `fn foo<R: Rng>(rng: R)`. This has some\n trade-offs. It allows the argument to be consumed directly without a `&mut`\n (which is how `from_rng(thread_rng())` works); also it still works directly\n on references (including type-erased references). Unfortunately within the\n function `foo` it is not known whether `rng` is a reference type or not,\n hence many uses of `rng` require an extra reference, either explicitly\n (`distr.sample(&mut rng)`) or implicitly (`rng.gen()`); one may hope the\n optimiser can remove redundant references later.\n \n Example:\n \n ```\n # use rand::thread_rng;\n use rand::Rng;\n \n fn foo<R: Rng + ?Sized>(rng: &mut R) -> f32 {\n     rng.gen()\n }","sig":null,"attributes":[{"value":"/ An automatically-implemented extension trait on [`RngCore`] providing high-level","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14635,"byte_end":14719,"line_start":374,"line_end":374,"column_start":1,"column_end":85}},{"value":"/ generic methods for sampling values and other convenience methods.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14720,"byte_end":14790,"line_start":375,"line_end":375,"column_start":1,"column_end":71}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14791,"byte_end":14795,"line_start":376,"line_end":376,"column_start":1,"column_end":5}},{"value":"/ This is the primary trait to use when generating random values.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14796,"byte_end":14863,"line_start":377,"line_end":377,"column_start":1,"column_end":68}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14864,"byte_end":14868,"line_start":378,"line_end":378,"column_start":1,"column_end":5}},{"value":"/ # Generic usage","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14869,"byte_end":14888,"line_start":379,"line_end":379,"column_start":1,"column_end":20}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14889,"byte_end":14893,"line_start":380,"line_end":380,"column_start":1,"column_end":5}},{"value":"/ The basic pattern is `fn foo<R: Rng + ?Sized>(rng: &mut R)`. Some","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14894,"byte_end":14964,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/ things are worth noting here:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14965,"byte_end":14998,"line_start":382,"line_end":382,"column_start":1,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14999,"byte_end":15003,"line_start":383,"line_end":383,"column_start":1,"column_end":5}},{"value":"/ - Since `Rng: RngCore` and every `RngCore` implements `Rng`, it makes no","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15004,"byte_end":15080,"line_start":384,"line_end":384,"column_start":1,"column_end":77}},{"value":"/   difference whether we use `R: Rng` or `R: RngCore`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15081,"byte_end":15138,"line_start":385,"line_end":385,"column_start":1,"column_end":58}},{"value":"/ - The `+ ?Sized` un-bounding allows functions to be called directly on","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15139,"byte_end":15213,"line_start":386,"line_end":386,"column_start":1,"column_end":75}},{"value":"/   type-erased references; i.e. `foo(r)` where `r: &mut RngCore`. Without","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15214,"byte_end":15290,"line_start":387,"line_end":387,"column_start":1,"column_end":77}},{"value":"/   this it would be necessary to write `foo(&mut r)`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15291,"byte_end":15347,"line_start":388,"line_end":388,"column_start":1,"column_end":57}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15348,"byte_end":15352,"line_start":389,"line_end":389,"column_start":1,"column_end":5}},{"value":"/ An alternative pattern is possible: `fn foo<R: Rng>(rng: R)`. This has some","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15353,"byte_end":15432,"line_start":390,"line_end":390,"column_start":1,"column_end":80}},{"value":"/ trade-offs. It allows the argument to be consumed directly without a `&mut`","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15433,"byte_end":15512,"line_start":391,"line_end":391,"column_start":1,"column_end":80}},{"value":"/ (which is how `from_rng(thread_rng())` works); also it still works directly","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15513,"byte_end":15592,"line_start":392,"line_end":392,"column_start":1,"column_end":80}},{"value":"/ on references (including type-erased references). Unfortunately within the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15593,"byte_end":15671,"line_start":393,"line_end":393,"column_start":1,"column_end":79}},{"value":"/ function `foo` it is not known whether `rng` is a reference type or not,","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15672,"byte_end":15748,"line_start":394,"line_end":394,"column_start":1,"column_end":77}},{"value":"/ hence many uses of `rng` require an extra reference, either explicitly","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15749,"byte_end":15823,"line_start":395,"line_end":395,"column_start":1,"column_end":75}},{"value":"/ (`distr.sample(&mut rng)`) or implicitly (`rng.gen()`); one may hope the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15824,"byte_end":15900,"line_start":396,"line_end":396,"column_start":1,"column_end":77}},{"value":"/ optimiser can remove redundant references later.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15901,"byte_end":15953,"line_start":397,"line_end":397,"column_start":1,"column_end":53}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15954,"byte_end":15958,"line_start":398,"line_end":398,"column_start":1,"column_end":5}},{"value":"/ Example:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15959,"byte_end":15971,"line_start":399,"line_end":399,"column_start":1,"column_end":13}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15972,"byte_end":15976,"line_start":400,"line_end":400,"column_start":1,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15977,"byte_end":15984,"line_start":401,"line_end":401,"column_start":1,"column_end":8}},{"value":"/ # use rand::thread_rng;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":15985,"byte_end":16012,"line_start":402,"line_end":402,"column_start":1,"column_end":28}},{"value":"/ use rand::Rng;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16013,"byte_end":16031,"line_start":403,"line_end":403,"column_start":1,"column_end":19}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16032,"byte_end":16036,"line_start":404,"line_end":404,"column_start":1,"column_end":5}},{"value":"/ fn foo<R: Rng + ?Sized>(rng: &mut R) -> f32 {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16037,"byte_end":16086,"line_start":405,"line_end":405,"column_start":1,"column_end":50}},{"value":"/     rng.gen()","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16087,"byte_end":16104,"line_start":406,"line_end":406,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16105,"byte_end":16110,"line_start":407,"line_end":407,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16111,"byte_end":16114,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ # let v = foo(&mut thread_rng());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16115,"byte_end":16152,"line_start":409,"line_end":409,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16153,"byte_end":16160,"line_start":410,"line_end":410,"column_start":1,"column_end":8}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16161,"byte_end":16165,"line_start":411,"line_end":411,"column_start":1,"column_end":5}},{"value":"/ [`RngCore`]: trait.RngCore.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16166,"byte_end":16201,"line_start":412,"line_end":412,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16635,"byte_end":16638,"line_start":429,"line_end":429,"column_start":8,"column_end":11},"name":"gen","qualname":"::Rng::gen","value":"fn <T> (&mut self) -> T","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" Return a random value supporting the [`Standard`] distribution.","sig":null,"attributes":[{"value":"/ Return a random value supporting the [`Standard`] distribution.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16231,"byte_end":16298,"line_start":414,"line_end":414,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16303,"byte_end":16306,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ [`Standard`]: distributions/struct.Standard.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16311,"byte_end":16363,"line_start":416,"line_end":416,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16368,"byte_end":16371,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16376,"byte_end":16389,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16394,"byte_end":16397,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16402,"byte_end":16409,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16414,"byte_end":16446,"line_start":421,"line_end":421,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16451,"byte_end":16454,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16459,"byte_end":16490,"line_start":423,"line_end":423,"column_start":5,"column_end":36}},{"value":"/ let x: u32 = rng.gen();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16495,"byte_end":16522,"line_start":424,"line_end":424,"column_start":5,"column_end":32}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16527,"byte_end":16549,"line_start":425,"line_end":425,"column_start":5,"column_end":27}},{"value":"/ println!(\"{:?}\", rng.gen::<(f64, bool)>());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16554,"byte_end":16601,"line_start":426,"line_end":426,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16606,"byte_end":16613,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16618,"byte_end":16627,"line_start":428,"line_end":428,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17519,"byte_end":17528,"line_start":457,"line_end":457,"column_start":8,"column_end":17},"name":"gen_range","qualname":"::Rng::gen_range","value":"fn <T> (&mut self, low: T, high: T) -> T","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" Generate a random value in the range [`low`, `high`), i.e. inclusive of\n `low` and exclusive of `high`.","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`low`, `high`), i.e. inclusive of","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16733,"byte_end":16808,"line_start":433,"line_end":433,"column_start":5,"column_end":80}},{"value":"/ `low` and exclusive of `high`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16813,"byte_end":16847,"line_start":434,"line_end":434,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16852,"byte_end":16855,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This function is optimised for the case that only a single sample is","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16860,"byte_end":16932,"line_start":436,"line_end":436,"column_start":5,"column_end":77}},{"value":"/ made from the given range. See also the [`Uniform`] distribution","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16937,"byte_end":17005,"line_start":437,"line_end":437,"column_start":5,"column_end":73}},{"value":"/ type which may be faster if sampling from the same range repeatedly.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17010,"byte_end":17082,"line_start":438,"line_end":438,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17087,"byte_end":17090,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17095,"byte_end":17107,"line_start":440,"line_end":440,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17112,"byte_end":17115,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Panics if `low >= high`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17120,"byte_end":17148,"line_start":442,"line_end":442,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17153,"byte_end":17156,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17161,"byte_end":17174,"line_start":444,"line_end":444,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17179,"byte_end":17182,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17187,"byte_end":17194,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17199,"byte_end":17231,"line_start":447,"line_end":447,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17236,"byte_end":17239,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17244,"byte_end":17275,"line_start":449,"line_end":449,"column_start":5,"column_end":36}},{"value":"/ let n: u32 = rng.gen_range(0, 10);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17280,"byte_end":17318,"line_start":450,"line_end":450,"column_start":5,"column_end":43}},{"value":"/ println!(\"{}\", n);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17323,"byte_end":17345,"line_start":451,"line_end":451,"column_start":5,"column_end":27}},{"value":"/ let m: f64 = rng.gen_range(-40.0f64, 1.3e5f64);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17350,"byte_end":17401,"line_start":452,"line_end":452,"column_start":5,"column_end":56}},{"value":"/ println!(\"{}\", m);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17406,"byte_end":17428,"line_start":453,"line_end":453,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17433,"byte_end":17440,"line_start":454,"line_end":454,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17445,"byte_end":17448,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Uniform`]: distributions/uniform/struct.Uniform.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17453,"byte_end":17511,"line_start":456,"line_end":456,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18133,"byte_end":18139,"line_start":475,"line_end":475,"column_start":8,"column_end":14},"name":"sample","qualname":"::Rng::sample","value":"fn <T, D> (&mut self, distr: D) -> T","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" Sample a new value, using the given distribution.","sig":null,"attributes":[{"value":"/ Sample a new value, using the given distribution.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17657,"byte_end":17710,"line_start":461,"line_end":461,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17715,"byte_end":17718,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ### Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17723,"byte_end":17738,"line_start":463,"line_end":463,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17743,"byte_end":17746,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17751,"byte_end":17758,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17763,"byte_end":17795,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/ use rand::distributions::Uniform;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17800,"byte_end":17837,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17842,"byte_end":17845,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17850,"byte_end":17881,"line_start":469,"line_end":469,"column_start":5,"column_end":36}},{"value":"/ let x = rng.sample(Uniform::new(10u32, 15));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17886,"byte_end":17934,"line_start":470,"line_end":470,"column_start":5,"column_end":53}},{"value":"/ // Type annotation requires two types, the type and distribution; the","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17939,"byte_end":18012,"line_start":471,"line_end":471,"column_start":5,"column_end":78}},{"value":"/ // distribution can be inferred.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18017,"byte_end":18053,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ let y = rng.sample::<u16, _>(Uniform::new(10, 15));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18058,"byte_end":18113,"line_start":473,"line_end":473,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18118,"byte_end":18125,"line_start":474,"line_end":474,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19159,"byte_end":19170,"line_start":506,"line_end":506,"column_start":8,"column_end":19},"name":"sample_iter","qualname":"::Rng::sample_iter","value":"fn <'a, T, D> (&'a mut self, distr: &'a D) -> distributions::DistIter<'a, D, Self, T>","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" Create an iterator that generates values using the given distribution.","sig":null,"attributes":[{"value":"/ Create an iterator that generates values using the given distribution.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18229,"byte_end":18303,"line_start":479,"line_end":479,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18308,"byte_end":18311,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18316,"byte_end":18329,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18334,"byte_end":18337,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18342,"byte_end":18349,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18354,"byte_end":18386,"line_start":484,"line_end":484,"column_start":5,"column_end":37}},{"value":"/ use rand::distributions::{Alphanumeric, Uniform, Standard};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18391,"byte_end":18454,"line_start":485,"line_end":485,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18459,"byte_end":18462,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18467,"byte_end":18498,"line_start":487,"line_end":487,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18503,"byte_end":18506,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ // Vec of 16 x f32:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18511,"byte_end":18534,"line_start":489,"line_end":489,"column_start":5,"column_end":28}},{"value":"/ let v: Vec<f32> = thread_rng().sample_iter(&Standard).take(16).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18539,"byte_end":18616,"line_start":490,"line_end":490,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18621,"byte_end":18624,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ // String:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18629,"byte_end":18643,"line_start":492,"line_end":492,"column_start":5,"column_end":19}},{"value":"/ let s: String = rng.sample_iter(&Alphanumeric).take(7).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18648,"byte_end":18717,"line_start":493,"line_end":493,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18722,"byte_end":18725,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ // Combined values","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18730,"byte_end":18752,"line_start":495,"line_end":495,"column_start":5,"column_end":27}},{"value":"/ println!(\"{:?}\", thread_rng().sample_iter(&Standard).take(5)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18757,"byte_end":18821,"line_start":496,"line_end":496,"column_start":5,"column_end":69}},{"value":"/                              .collect::<Vec<(f64, bool)>>());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18826,"byte_end":18891,"line_start":497,"line_end":497,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18896,"byte_end":18899,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ // Dice-rolling:","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18904,"byte_end":18924,"line_start":499,"line_end":499,"column_start":5,"column_end":25}},{"value":"/ let die_range = Uniform::new_inclusive(1, 6);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18929,"byte_end":18978,"line_start":500,"line_end":500,"column_start":5,"column_end":54}},{"value":"/ let mut roll_die = rng.sample_iter(&die_range);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18983,"byte_end":19034,"line_start":501,"line_end":501,"column_start":5,"column_end":56}},{"value":"/ while roll_die.next().unwrap() != 6 {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19039,"byte_end":19080,"line_start":502,"line_end":502,"column_start":5,"column_end":46}},{"value":"/     println!(\"Not a 6; rolling again!\");","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19085,"byte_end":19129,"line_start":503,"line_end":503,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19134,"byte_end":19139,"line_start":504,"line_end":504,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19144,"byte_end":19151,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20303,"byte_end":20307,"line_start":535,"line_end":535,"column_start":8,"column_end":12},"name":"fill","qualname":"::Rng::fill","value":"fn <T> (&mut self, dest: &mut T) -> ()","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" Fill `dest` entirely with random bytes (uniform value distribution),\n where `dest` is any type supporting [`AsByteSliceMut`], namely slices\n and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).","sig":null,"attributes":[{"value":"/ Fill `dest` entirely with random bytes (uniform value distribution),","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19344,"byte_end":19416,"line_start":512,"line_end":512,"column_start":5,"column_end":77}},{"value":"/ where `dest` is any type supporting [`AsByteSliceMut`], namely slices","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19421,"byte_end":19494,"line_start":513,"line_end":513,"column_start":5,"column_end":78}},{"value":"/ and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19499,"byte_end":19570,"line_start":514,"line_end":514,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19575,"byte_end":19578,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ On big-endian platforms this performs byte-swapping to ensure","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19583,"byte_end":19648,"line_start":516,"line_end":516,"column_start":5,"column_end":70}},{"value":"/ portability of results from reproducible generators.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19653,"byte_end":19709,"line_start":517,"line_end":517,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19714,"byte_end":19717,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ This uses [`fill_bytes`] internally which may handle some RNG errors","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19722,"byte_end":19794,"line_start":519,"line_end":519,"column_start":5,"column_end":77}},{"value":"/ implicitly (e.g. waiting if the OS generator is not ready), but panics","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19799,"byte_end":19873,"line_start":520,"line_end":520,"column_start":5,"column_end":79}},{"value":"/ on other errors. See also [`try_fill`] which returns errors.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19878,"byte_end":19942,"line_start":521,"line_end":521,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19947,"byte_end":19950,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19955,"byte_end":19968,"line_start":523,"line_end":523,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19973,"byte_end":19976,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19981,"byte_end":19988,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19993,"byte_end":20025,"line_start":526,"line_end":526,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20030,"byte_end":20033,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ let mut arr = [0i8; 20];","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20038,"byte_end":20066,"line_start":528,"line_end":528,"column_start":5,"column_end":33}},{"value":"/ thread_rng().fill(&mut arr[..]);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20071,"byte_end":20107,"line_start":529,"line_end":529,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20112,"byte_end":20119,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20124,"byte_end":20127,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ [`fill_bytes`]: trait.RngCore.html#method.fill_bytes","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20132,"byte_end":20188,"line_start":532,"line_end":532,"column_start":5,"column_end":61}},{"value":"/ [`try_fill`]: trait.Rng.html#method.try_fill","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20193,"byte_end":20241,"line_start":533,"line_end":533,"column_start":5,"column_end":53}},{"value":"/ [`AsByteSliceMut`]: trait.AsByteSliceMut.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20246,"byte_end":20295,"line_start":534,"line_end":534,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21643,"byte_end":21651,"line_start":571,"line_end":571,"column_start":8,"column_end":16},"name":"try_fill","qualname":"::Rng::try_fill","value":"fn <T> (&mut self, dest: &mut T) -> Result<(), Error>","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" Fill `dest` entirely with random bytes (uniform value distribution),\n where `dest` is any type supporting [`AsByteSliceMut`], namely slices\n and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).","sig":null,"attributes":[{"value":"/ Fill `dest` entirely with random bytes (uniform value distribution),","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20447,"byte_end":20519,"line_start":540,"line_end":540,"column_start":5,"column_end":77}},{"value":"/ where `dest` is any type supporting [`AsByteSliceMut`], namely slices","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20524,"byte_end":20597,"line_start":541,"line_end":541,"column_start":5,"column_end":78}},{"value":"/ and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20602,"byte_end":20673,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20678,"byte_end":20681,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ On big-endian platforms this performs byte-swapping to ensure","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20686,"byte_end":20751,"line_start":544,"line_end":544,"column_start":5,"column_end":70}},{"value":"/ portability of results from reproducible generators.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20756,"byte_end":20812,"line_start":545,"line_end":545,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20817,"byte_end":20820,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This uses [`try_fill_bytes`] internally and forwards all RNG errors. In","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20825,"byte_end":20900,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ some cases errors may be resolvable; see [`ErrorKind`] and","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20905,"byte_end":20967,"line_start":548,"line_end":548,"column_start":5,"column_end":67}},{"value":"/ documentation for the RNG in use. If you do not plan to handle these","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20972,"byte_end":21044,"line_start":549,"line_end":549,"column_start":5,"column_end":77}},{"value":"/ errors you may prefer to use [`fill`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21049,"byte_end":21091,"line_start":550,"line_end":550,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21096,"byte_end":21099,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21104,"byte_end":21117,"line_start":552,"line_end":552,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21122,"byte_end":21125,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21130,"byte_end":21137,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ # use rand::Error;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21142,"byte_end":21164,"line_start":555,"line_end":555,"column_start":5,"column_end":27}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21169,"byte_end":21201,"line_start":556,"line_end":556,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21206,"byte_end":21209,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # fn try_inner() -> Result<(), Error> {","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21214,"byte_end":21257,"line_start":558,"line_end":558,"column_start":5,"column_end":48}},{"value":"/ let mut arr = [0u64; 4];","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21262,"byte_end":21290,"line_start":559,"line_end":559,"column_start":5,"column_end":33}},{"value":"/ thread_rng().try_fill(&mut arr[..])?;","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21295,"byte_end":21336,"line_start":560,"line_end":560,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21341,"byte_end":21353,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21358,"byte_end":21365,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21370,"byte_end":21373,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # try_inner().unwrap()","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21378,"byte_end":21404,"line_start":564,"line_end":564,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21409,"byte_end":21416,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21421,"byte_end":21424,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind`]: enum.ErrorKind.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21429,"byte_end":21467,"line_start":567,"line_end":567,"column_start":5,"column_end":43}},{"value":"/ [`try_fill_bytes`]: trait.RngCore.html#method.try_fill_bytes","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21472,"byte_end":21536,"line_start":568,"line_end":568,"column_start":5,"column_end":69}},{"value":"/ [`fill`]: trait.Rng.html#method.fill","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21541,"byte_end":21581,"line_start":569,"line_end":569,"column_start":5,"column_end":45}},{"value":"/ [`AsByteSliceMut`]: trait.AsByteSliceMut.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21586,"byte_end":21635,"line_start":570,"line_end":570,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22324,"byte_end":22332,"line_start":596,"line_end":596,"column_start":8,"column_end":16},"name":"gen_bool","qualname":"::Rng::gen_bool","value":"fn (&mut self, p: f64) -> bool","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" Return a bool with a probability `p` of being true.","sig":null,"attributes":[{"value":"/ Return a bool with a probability `p` of being true.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21832,"byte_end":21887,"line_start":577,"line_end":577,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21892,"byte_end":21895,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ This is a wrapper around [`distributions::Bernoulli`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21900,"byte_end":21958,"line_start":579,"line_end":579,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21963,"byte_end":21966,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21971,"byte_end":21984,"line_start":581,"line_end":581,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21989,"byte_end":21992,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21997,"byte_end":22004,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22009,"byte_end":22041,"line_start":584,"line_end":584,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22046,"byte_end":22049,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22054,"byte_end":22085,"line_start":586,"line_end":586,"column_start":5,"column_end":36}},{"value":"/ println!(\"{}\", rng.gen_bool(1.0 / 3.0));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22090,"byte_end":22134,"line_start":587,"line_end":587,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22139,"byte_end":22146,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22151,"byte_end":22154,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22159,"byte_end":22171,"line_start":590,"line_end":590,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22176,"byte_end":22179,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ If `p` < 0 or `p` > 1.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22184,"byte_end":22210,"line_start":592,"line_end":592,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22215,"byte_end":22218,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ [`distributions::Bernoulli`]: distributions/bernoulli/struct.Bernoulli.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22223,"byte_end":22302,"line_start":594,"line_end":594,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22307,"byte_end":22316,"line_start":595,"line_end":595,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22832,"byte_end":22838,"line_start":615,"line_end":615,"column_start":8,"column_end":14},"name":"choose","qualname":"::Rng::choose","value":"fn <'a, T> (&mut self, values: &'a [T]) -> Option<&'a T>","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" Return a random element from `values`.","sig":null,"attributes":[{"value":"/ Return a random element from `values`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22446,"byte_end":22488,"line_start":601,"line_end":601,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22493,"byte_end":22496,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `values` is empty.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22501,"byte_end":22540,"line_start":603,"line_end":603,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22545,"byte_end":22548,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22553,"byte_end":22566,"line_start":605,"line_end":605,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22571,"byte_end":22574,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22579,"byte_end":22586,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22591,"byte_end":22623,"line_start":608,"line_end":608,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22628,"byte_end":22631,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ let choices = [1, 2, 4, 8, 16, 32];","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22636,"byte_end":22675,"line_start":610,"line_end":610,"column_start":5,"column_end":44}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22680,"byte_end":22711,"line_start":611,"line_end":611,"column_start":5,"column_end":36}},{"value":"/ println!(\"{:?}\", rng.choose(&choices));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22716,"byte_end":22759,"line_start":612,"line_end":612,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(rng.choose(&choices[..0]), None);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22764,"byte_end":22812,"line_start":613,"line_end":613,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22817,"byte_end":22824,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23161,"byte_end":23171,"line_start":626,"line_end":626,"column_start":8,"column_end":18},"name":"choose_mut","qualname":"::Rng::choose_mut","value":"fn <'a, T> (&mut self, values: &'a mut [T]) -> Option<&'a mut T>","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" Return a mutable pointer to a random element from `values`.","sig":null,"attributes":[{"value":"/ Return a mutable pointer to a random element from `values`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23038,"byte_end":23101,"line_start":623,"line_end":623,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23106,"byte_end":23109,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `values` is empty.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23114,"byte_end":23153,"line_start":625,"line_end":625,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23965,"byte_end":23972,"line_start":653,"line_end":653,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::Rng::shuffle","value":"fn <T> (&mut self, values: &mut [T]) -> ()","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" Shuffle a mutable slice in place.","sig":null,"attributes":[{"value":"/ Shuffle a mutable slice in place.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23410,"byte_end":23447,"line_start":635,"line_end":635,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23452,"byte_end":23455,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This applies Durstenfeld's algorithm for the [Fisher–Yates shuffle](","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23460,"byte_end":23534,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/ https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23539,"byte_end":23623,"line_start":638,"line_end":638,"column_start":5,"column_end":89}},{"value":"/ which produces an unbiased permutation.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23628,"byte_end":23671,"line_start":639,"line_end":639,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23676,"byte_end":23679,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23684,"byte_end":23697,"line_start":641,"line_end":641,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23702,"byte_end":23705,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23710,"byte_end":23717,"line_start":643,"line_end":643,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23722,"byte_end":23754,"line_start":644,"line_end":644,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23759,"byte_end":23762,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23767,"byte_end":23798,"line_start":646,"line_end":646,"column_start":5,"column_end":36}},{"value":"/ let mut y = [1, 2, 3];","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23803,"byte_end":23829,"line_start":647,"line_end":647,"column_start":5,"column_end":31}},{"value":"/ rng.shuffle(&mut y);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23834,"byte_end":23858,"line_start":648,"line_end":648,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", y);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23863,"byte_end":23887,"line_start":649,"line_end":649,"column_start":5,"column_end":29}},{"value":"/ rng.shuffle(&mut y);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23892,"byte_end":23916,"line_start":650,"line_end":650,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", y);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23921,"byte_end":23945,"line_start":651,"line_end":651,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23950,"byte_end":23957,"line_start":652,"line_end":652,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24879,"byte_end":24887,"line_start":680,"line_end":680,"column_start":8,"column_end":16},"name":"gen_iter","qualname":"::Rng::gen_iter","value":"fn <T> (&mut self) -> Generator<T, &mut Self>","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" Return an iterator that will yield an infinite number of randomly\n generated items.","sig":null,"attributes":[{"value":"/ Return an iterator that will yield an infinite number of randomly","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24277,"byte_end":24346,"line_start":663,"line_end":663,"column_start":5,"column_end":74}},{"value":"/ generated items.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24351,"byte_end":24371,"line_start":664,"line_end":664,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24376,"byte_end":24379,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24384,"byte_end":24397,"line_start":666,"line_end":666,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24402,"byte_end":24405,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24410,"byte_end":24417,"line_start":668,"line_end":668,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24422,"byte_end":24449,"line_start":669,"line_end":669,"column_start":5,"column_end":32}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24454,"byte_end":24486,"line_start":670,"line_end":670,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24491,"byte_end":24494,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24499,"byte_end":24530,"line_start":672,"line_end":672,"column_start":5,"column_end":36}},{"value":"/ let x = rng.gen_iter::<u32>().take(10).collect::<Vec<u32>>();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24535,"byte_end":24600,"line_start":673,"line_end":673,"column_start":5,"column_end":70}},{"value":"/ println!(\"{:?}\", x);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24605,"byte_end":24629,"line_start":674,"line_end":674,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", rng.gen_iter::<(f64, bool)>().take(5)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24634,"byte_end":24692,"line_start":675,"line_end":675,"column_start":5,"column_end":63}},{"value":"/                     .collect::<Vec<(f64, bool)>>());","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24697,"byte_end":24753,"line_start":676,"line_end":676,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24758,"byte_end":24765,"line_start":677,"line_end":677,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24770,"byte_end":24790,"line_start":678,"line_end":678,"column_start":5,"column_end":25}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use Rng::sample_iter(&Standard) instead\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24795,"byte_end":24871,"line_start":679,"line_end":679,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25702,"byte_end":25719,"line_start":702,"line_end":702,"column_start":8,"column_end":25},"name":"gen_weighted_bool","qualname":"::Rng::gen_weighted_bool","value":"fn (&mut self, n: u32) -> bool","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" Return a bool with a 1 in n chance of true","sig":null,"attributes":[{"value":"/ Return a bool with a 1 in n chance of true","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25036,"byte_end":25082,"line_start":684,"line_end":684,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25087,"byte_end":25090,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25095,"byte_end":25108,"line_start":686,"line_end":686,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25113,"byte_end":25116,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25121,"byte_end":25128,"line_start":688,"line_end":688,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25133,"byte_end":25160,"line_start":689,"line_end":689,"column_start":5,"column_end":32}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25165,"byte_end":25197,"line_start":690,"line_end":690,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25202,"byte_end":25205,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25210,"byte_end":25241,"line_start":692,"line_end":692,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(rng.gen_weighted_bool(0), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25246,"byte_end":25293,"line_start":693,"line_end":693,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(rng.gen_weighted_bool(1), true);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25298,"byte_end":25345,"line_start":694,"line_end":694,"column_start":5,"column_end":52}},{"value":"/ // Just like `rng.gen::<bool>()` a 50-50% chance, but using a slower","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25350,"byte_end":25422,"line_start":695,"line_end":695,"column_start":5,"column_end":77}},{"value":"/ // method with different results.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25427,"byte_end":25464,"line_start":696,"line_end":696,"column_start":5,"column_end":42}},{"value":"/ println!(\"{}\", rng.gen_weighted_bool(2));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25469,"byte_end":25514,"line_start":697,"line_end":697,"column_start":5,"column_end":50}},{"value":"/ // First meaningful use of `gen_weighted_bool`.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25519,"byte_end":25570,"line_start":698,"line_end":698,"column_start":5,"column_end":56}},{"value":"/ println!(\"{}\", rng.gen_weighted_bool(3));","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25575,"byte_end":25620,"line_start":699,"line_end":699,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25625,"byte_end":25632,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"0.5.0\", note = \"use gen_bool instead\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25637,"byte_end":25694,"line_start":701,"line_end":701,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26293,"byte_end":26308,"line_start":720,"line_end":720,"column_start":8,"column_end":23},"name":"gen_ascii_chars","qualname":"::Rng::gen_ascii_chars","value":"fn (&mut self) -> AsciiGenerator<&mut Self>","parent":{"krate":0,"index":692},"children":[],"decl_id":null,"docs":" Return an iterator of random characters from the set A-Z,a-z,0-9.","sig":null,"attributes":[{"value":"/ Return an iterator of random characters from the set A-Z,a-z,0-9.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25874,"byte_end":25943,"line_start":707,"line_end":707,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25948,"byte_end":25951,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25956,"byte_end":25969,"line_start":709,"line_end":709,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25974,"byte_end":25977,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25982,"byte_end":25989,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25994,"byte_end":26021,"line_start":712,"line_end":712,"column_start":5,"column_end":32}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26026,"byte_end":26058,"line_start":713,"line_end":713,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26063,"byte_end":26066,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ let s: String = thread_rng().gen_ascii_chars().take(10).collect();","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26071,"byte_end":26141,"line_start":715,"line_end":715,"column_start":5,"column_end":75}},{"value":"/ println!(\"{}\", s);","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26146,"byte_end":26168,"line_start":716,"line_end":716,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26173,"byte_end":26180,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26185,"byte_end":26205,"line_start":718,"line_end":718,"column_start":5,"column_end":25}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use sample_iter(&Alphanumeric) instead\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26210,"byte_end":26285,"line_start":719,"line_end":719,"column_start":5,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":723},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26649,"byte_end":26663,"line_start":733,"line_end":733,"column_start":11,"column_end":25},"name":"AsByteSliceMut","qualname":"::AsByteSliceMut","value":"AsByteSliceMut","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"decl_id":null,"docs":" Trait for casting types to byte slices\n \n This is used by the [`fill`] and [`try_fill`] methods.\n \n [`fill`]: trait.Rng.html#method.fill\n [`try_fill`]: trait.Rng.html#method.try_fill\n","sig":null,"attributes":[{"value":"/ Trait for casting types to byte slices","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26437,"byte_end":26479,"line_start":727,"line_end":727,"column_start":1,"column_end":43}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26480,"byte_end":26484,"line_start":728,"line_end":728,"column_start":1,"column_end":5}},{"value":"/ This is used by the [`fill`] and [`try_fill`] methods.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26485,"byte_end":26543,"line_start":729,"line_end":729,"column_start":1,"column_end":59}},{"value":"/ ","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26544,"byte_end":26548,"line_start":730,"line_end":730,"column_start":1,"column_end":5}},{"value":"/ [`fill`]: trait.Rng.html#method.fill","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26549,"byte_end":26589,"line_start":731,"line_end":731,"column_start":1,"column_end":41}},{"value":"/ [`try_fill`]: trait.Rng.html#method.try_fill","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26590,"byte_end":26638,"line_start":732,"line_end":732,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26732,"byte_end":26749,"line_start":735,"line_end":735,"column_start":8,"column_end":25},"name":"as_byte_slice_mut","qualname":"::AsByteSliceMut::as_byte_slice_mut","value":"fn (&mut self) -> &mut [u8]","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Return a mutable reference to self as a byte slice\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to self as a byte slice","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26670,"byte_end":26724,"line_start":734,"line_end":734,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26866,"byte_end":26871,"line_start":738,"line_end":738,"column_start":8,"column_end":13},"name":"to_le","qualname":"::AsByteSliceMut::to_le","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Call `to_le` on each element (i.e. byte-swap on Big Endian platforms).\n","sig":null,"attributes":[{"value":"/ Call `to_le` on each element (i.e. byte-swap on Big Endian platforms).","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26784,"byte_end":26858,"line_start":737,"line_end":737,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1695},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29622,"byte_end":29631,"line_start":832,"line_end":832,"column_start":12,"column_end":21},"name":"Generator","qualname":"::Generator","value":"Generator {  }","parent":null,"children":[{"krate":0,"index":1698},{"krate":0,"index":1699}],"decl_id":null,"docs":" Iterator which will generate a stream of random items.","sig":null,"attributes":[{"value":"/ Iterator which will generate a stream of random items.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29294,"byte_end":29352,"line_start":823,"line_end":823,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29353,"byte_end":29356,"line_start":824,"line_end":824,"column_start":1,"column_end":4}},{"value":"/ This iterator is created via the [`gen_iter`] method on [`Rng`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29357,"byte_end":29425,"line_start":825,"line_end":825,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29426,"byte_end":29429,"line_start":826,"line_end":826,"column_start":1,"column_end":4}},{"value":"/ [`gen_iter`]: trait.Rng.html#method.gen_iter","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29430,"byte_end":29478,"line_start":827,"line_end":827,"column_start":1,"column_end":49}},{"value":"/ [`Rng`]: trait.Rng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29479,"byte_end":29506,"line_start":828,"line_end":828,"column_start":1,"column_end":28}},{"value":"allow(deprecated)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29524,"byte_end":29544,"line_start":830,"line_end":830,"column_start":1,"column_end":21}},{"value":"deprecated(since = \"0.5.0\", note = \"use Rng::sample_iter instead\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29545,"byte_end":29610,"line_start":831,"line_end":831,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1704},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":30281,"byte_end":30295,"line_start":855,"line_end":855,"column_start":12,"column_end":26},"name":"AsciiGenerator","qualname":"::AsciiGenerator","value":"AsciiGenerator {  }","parent":null,"children":[{"krate":0,"index":1706}],"decl_id":null,"docs":" Iterator which will continuously generate random ascii characters.","sig":null,"attributes":[{"value":"/ Iterator which will continuously generate random ascii characters.","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29909,"byte_end":29979,"line_start":846,"line_end":846,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29980,"byte_end":29983,"line_start":847,"line_end":847,"column_start":1,"column_end":4}},{"value":"/ This iterator is created via the [`gen_ascii_chars`] method on [`Rng`].","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29984,"byte_end":30059,"line_start":848,"line_end":848,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":30060,"byte_end":30063,"line_start":849,"line_end":849,"column_start":1,"column_end":4}},{"value":"/ [`gen_ascii_chars`]: trait.Rng.html#method.gen_ascii_chars","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":30064,"byte_end":30126,"line_start":850,"line_end":850,"column_start":1,"column_end":63}},{"value":"/ [`Rng`]: trait.Rng.html","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":30127,"byte_end":30154,"line_start":851,"line_end":851,"column_start":1,"column_end":28}},{"value":"allow(deprecated)","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":30172,"byte_end":30192,"line_start":853,"line_end":853,"column_start":1,"column_end":21}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use distributions::Alphanumeric instead\")","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":30193,"byte_end":30269,"line_start":854,"line_end":854,"column_start":1,"column_end":77}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76485,"byte_end":76492,"line_start":155,"line_end":155,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77082,"byte_end":77089,"line_start":169,"line_end":169,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79757,"byte_end":79764,"line_start":240,"line_end":240,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102732,"byte_end":102741,"line_start":40,"line_end":40,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":103963,"byte_end":103972,"line_start":72,"line_end":72,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":113646,"byte_end":113654,"line_start":16,"line_end":16,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":113795,"byte_end":113803,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":113946,"byte_end":113954,"line_start":30,"line_end":30,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":114090,"byte_end":114098,"line_start":37,"line_end":37,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":114563,"byte_end":114571,"line_start":55,"line_end":55,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117439,"byte_end":117447,"line_start":44,"line_end":44,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117892,"byte_end":117904,"line_start":59,"line_end":59,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":118694,"byte_end":118702,"line_start":79,"line_end":79,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":119883,"byte_end":119891,"line_start":114,"line_end":114,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":121126,"byte_end":121134,"line_start":153,"line_end":153,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":121478,"byte_end":121486,"line_start":165,"line_end":165,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51325,"byte_end":51339,"line_start":259,"line_end":259,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51514,"byte_end":51528,"line_start":264,"line_end":264,"column_start":49,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51699,"byte_end":51704,"line_start":270,"line_end":270,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51877,"byte_end":51882,"line_start":275,"line_end":275,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55276,"byte_end":55284,"line_start":376,"line_end":376,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58389,"byte_end":58390,"line_start":453,"line_end":453,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59826,"byte_end":59840,"line_start":499,"line_end":499,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":61238,"byte_end":61252,"line_start":536,"line_end":536,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":143460,"byte_end":143469,"line_start":73,"line_end":73,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":143892,"byte_end":143901,"line_start":95,"line_end":95,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144217,"byte_end":144226,"line_start":107,"line_end":107,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144236,"byte_end":144245,"line_start":109,"line_end":109,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":148382,"byte_end":148392,"line_start":215,"line_end":215,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":149443,"byte_end":149453,"line_start":245,"line_end":245,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":150323,"byte_end":150333,"line_start":274,"line_end":274,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":150843,"byte_end":150853,"line_start":289,"line_end":289,"column_start":20,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":150884,"byte_end":150893,"line_start":291,"line_end":291,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":161493,"byte_end":161501,"line_start":74,"line_end":74,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":161912,"byte_end":161920,"line_start":94,"line_end":94,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":162231,"byte_end":162239,"line_start":106,"line_end":106,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":162472,"byte_end":162481,"line_start":116,"line_end":116,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":162610,"byte_end":162619,"line_start":122,"line_end":122,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":165436,"byte_end":165445,"line_start":174,"line_end":174,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":172146,"byte_end":172155,"line_start":322,"line_end":322,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":172611,"byte_end":172620,"line_start":335,"line_end":335,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181922,"byte_end":181930,"line_start":97,"line_end":97,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":182341,"byte_end":182349,"line_start":117,"line_end":117,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":182978,"byte_end":182986,"line_start":136,"line_end":136,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":184089,"byte_end":184098,"line_start":167,"line_end":167,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":184227,"byte_end":184236,"line_start":173,"line_end":173,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":187456,"byte_end":187465,"line_start":251,"line_end":251,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":190875,"byte_end":190884,"line_start":324,"line_end":324,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200652,"byte_end":200662,"line_start":87,"line_end":87,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":201073,"byte_end":201083,"line_start":107,"line_end":107,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":201728,"byte_end":201738,"line_start":126,"line_end":126,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":202856,"byte_end":202867,"line_start":157,"line_end":157,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":202998,"byte_end":203009,"line_start":163,"line_end":163,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":206253,"byte_end":206264,"line_start":241,"line_end":241,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":208578,"byte_end":208589,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217668,"byte_end":217679,"line_start":36,"line_end":36,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217793,"byte_end":217804,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":218442,"byte_end":218453,"line_start":60,"line_end":60,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":219084,"byte_end":219095,"line_start":88,"line_end":88,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":225039,"byte_end":225049,"line_start":34,"line_end":34,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":225181,"byte_end":225191,"line_start":41,"line_end":41,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":225326,"byte_end":225336,"line_start":48,"line_end":48,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":225500,"byte_end":225510,"line_start":56,"line_end":56,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":225661,"byte_end":225671,"line_start":63,"line_end":63,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240595,"byte_end":240607,"line_start":62,"line_end":62,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":241429,"byte_end":241441,"line_start":85,"line_end":85,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":241975,"byte_end":241987,"line_start":108,"line_end":108,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":242311,"byte_end":242323,"line_start":119,"line_end":119,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":242584,"byte_end":242597,"line_start":131,"line_end":131,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":243322,"byte_end":243335,"line_start":151,"line_end":151,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":245182,"byte_end":245195,"line_start":205,"line_end":205,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":245586,"byte_end":245599,"line_start":219,"line_end":219,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":254463,"byte_end":254470,"line_start":178,"line_end":178,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":255266,"byte_end":255275,"line_start":200,"line_end":200,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":255397,"byte_end":255406,"line_start":206,"line_end":206,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":256375,"byte_end":256385,"line_start":239,"line_end":239,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":256873,"byte_end":256883,"line_start":252,"line_end":252,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":257160,"byte_end":257165,"line_start":265,"line_end":265,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":257653,"byte_end":257662,"line_start":278,"line_end":278,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":280452,"byte_end":280461,"line_start":825,"line_end":825,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":281425,"byte_end":281434,"line_start":857,"line_end":857,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283466,"byte_end":283473,"line_start":35,"line_end":35,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283736,"byte_end":283743,"line_start":43,"line_end":43,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286860,"byte_end":286868,"line_start":71,"line_end":71,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":287280,"byte_end":287288,"line_start":91,"line_end":91,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288940,"byte_end":288946,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":289358,"byte_end":289364,"line_start":53,"line_end":53,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":289644,"byte_end":289650,"line_start":65,"line_end":65,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26431,"byte_end":26432,"line_start":725,"line_end":725,"column_start":35,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29763,"byte_end":29772,"line_start":838,"line_end":838,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":30376,"byte_end":30390,"line_start":860,"line_end":860,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11537,"byte_end":11550,"line_start":273,"line_end":273,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49251,"byte_end":49258,"line_start":192,"line_end":192,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":26}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49612,"byte_end":49621,"line_start":205,"line_end":205,"column_start":24,"column_end":33},"ref_id":{"krate":0,"index":60}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11560,"byte_end":11567,"line_start":274,"line_end":274,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":207}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11577,"byte_end":11581,"line_start":275,"line_end":275,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":217}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":140088,"byte_end":140094,"line_start":318,"line_end":318,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":218}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":140104,"byte_end":140109,"line_start":319,"line_end":319,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":266}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":140119,"byte_end":140124,"line_start":320,"line_end":320,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":311}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":140134,"byte_end":140141,"line_start":321,"line_end":321,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":373}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11591,"byte_end":11595,"line_start":276,"line_end":276,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":493}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":235105,"byte_end":235112,"line_start":166,"line_end":166,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":494}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":235173,"byte_end":235179,"line_start":169,"line_end":169,"column_start":24,"column_end":30},"ref_id":{"krate":0,"index":546}},{"kind":"Mod","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":235189,"byte_end":235193,"line_start":170,"line_end":170,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":611}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76485,"byte_end":76492,"line_start":155,"line_end":155,"column_start":24,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77082,"byte_end":77089,"line_start":169,"line_end":169,"column_start":44,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":741},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77577,"byte_end":77582,"line_start":184,"line_end":184,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":1857},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78192,"byte_end":78197,"line_start":200,"line_end":200,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":1857},"to":{"krate":0,"index":40}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79757,"byte_end":79764,"line_start":240,"line_end":240,"column_start":56,"column_end":63},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":741},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":102732,"byte_end":102741,"line_start":40,"line_end":40,"column_start":6,"column_end":15},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":103963,"byte_end":103972,"line_start":72,"line_end":72,"column_start":29,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":913},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":113646,"byte_end":113654,"line_start":16,"line_end":16,"column_start":27,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":113795,"byte_end":113803,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":113946,"byte_end":113954,"line_start":30,"line_end":30,"column_start":28,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":114090,"byte_end":114098,"line_start":37,"line_end":37,"column_start":28,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":114563,"byte_end":114571,"line_start":55,"line_end":55,"column_start":30,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117439,"byte_end":117447,"line_start":44,"line_end":44,"column_start":29,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":117892,"byte_end":117904,"line_start":59,"line_end":59,"column_start":29,"column_end":41},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":975},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":118694,"byte_end":118702,"line_start":79,"line_end":79,"column_start":29,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":119883,"byte_end":119891,"line_start":114,"line_end":114,"column_start":27,"column_end":35},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":121126,"byte_end":121134,"line_start":153,"line_end":153,"column_start":37,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":121478,"byte_end":121486,"line_start":165,"line_end":165,"column_start":39,"column_end":47},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50493,"byte_end":50499,"line_start":234,"line_end":234,"column_start":39,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":134},"to":{"krate":0,"index":138}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51325,"byte_end":51339,"line_start":259,"line_end":259,"column_start":38,"column_end":52},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1324},"to":{"krate":0,"index":134}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51514,"byte_end":51528,"line_start":264,"line_end":264,"column_start":49,"column_end":63},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1324},"to":{"krate":0,"index":138}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51699,"byte_end":51704,"line_start":270,"line_end":270,"column_start":40,"column_end":45},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":741},"to":{"krate":0,"index":134}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51877,"byte_end":51882,"line_start":275,"line_end":275,"column_start":51,"column_end":56},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":741},"to":{"krate":0,"index":138}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55276,"byte_end":55284,"line_start":376,"line_end":376,"column_start":32,"column_end":40},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1291},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58389,"byte_end":58390,"line_start":453,"line_end":453,"column_start":20,"column_end":21},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":195},"to":{"krate":0,"index":689}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59826,"byte_end":59840,"line_start":499,"line_end":499,"column_start":20,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":61238,"byte_end":61252,"line_start":536,"line_end":536,"column_start":40,"column_end":54},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1324},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":143460,"byte_end":143469,"line_start":73,"line_end":73,"column_start":18,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1333},"to":{"krate":5,"index":113}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":143892,"byte_end":143901,"line_start":95,"line_end":95,"column_start":22,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1333},"to":{"krate":5,"index":119}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144217,"byte_end":144226,"line_start":107,"line_end":107,"column_start":20,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1333},"to":{"krate":5,"index":118}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":144236,"byte_end":144245,"line_start":109,"line_end":109,"column_start":6,"column_end":15},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":148382,"byte_end":148392,"line_start":215,"line_end":215,"column_start":21,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1340},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":149443,"byte_end":149453,"line_start":245,"line_end":245,"column_start":23,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1340},"to":{"krate":5,"index":35}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":150323,"byte_end":150333,"line_start":274,"line_end":274,"column_start":22,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1340},"to":{"krate":5,"index":119}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":150843,"byte_end":150853,"line_start":289,"line_end":289,"column_start":20,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1340},"to":{"krate":5,"index":118}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":150884,"byte_end":150893,"line_start":291,"line_end":291,"column_start":27,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1333},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":161493,"byte_end":161501,"line_start":74,"line_end":74,"column_start":18,"column_end":26},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1345},"to":{"krate":5,"index":113}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":161912,"byte_end":161920,"line_start":94,"line_end":94,"column_start":22,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1345},"to":{"krate":5,"index":119}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":162231,"byte_end":162239,"line_start":106,"line_end":106,"column_start":20,"column_end":28},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1345},"to":{"krate":5,"index":118}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":162472,"byte_end":162481,"line_start":116,"line_end":116,"column_start":21,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1352},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":162610,"byte_end":162619,"line_start":122,"line_end":122,"column_start":23,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1352},"to":{"krate":5,"index":35}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":165436,"byte_end":165445,"line_start":174,"line_end":174,"column_start":6,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":172146,"byte_end":172155,"line_start":322,"line_end":322,"column_start":22,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1352},"to":{"krate":5,"index":119}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":172611,"byte_end":172620,"line_start":335,"line_end":335,"column_start":20,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1352},"to":{"krate":5,"index":118}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":181922,"byte_end":181930,"line_start":97,"line_end":97,"column_start":18,"column_end":26},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1358},"to":{"krate":5,"index":113}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":182341,"byte_end":182349,"line_start":117,"line_end":117,"column_start":22,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1358},"to":{"krate":5,"index":119}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":182978,"byte_end":182986,"line_start":136,"line_end":136,"column_start":6,"column_end":14},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":184089,"byte_end":184098,"line_start":167,"line_end":167,"column_start":21,"column_end":30},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1365},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":184227,"byte_end":184236,"line_start":173,"line_end":173,"column_start":23,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1365},"to":{"krate":5,"index":35}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":187456,"byte_end":187465,"line_start":251,"line_end":251,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":190875,"byte_end":190884,"line_start":324,"line_end":324,"column_start":22,"column_end":31},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1365},"to":{"krate":5,"index":119}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":200652,"byte_end":200662,"line_start":87,"line_end":87,"column_start":18,"column_end":28},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1373},"to":{"krate":5,"index":113}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":201073,"byte_end":201083,"line_start":107,"line_end":107,"column_start":22,"column_end":32},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1373},"to":{"krate":5,"index":119}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":201728,"byte_end":201738,"line_start":126,"line_end":126,"column_start":6,"column_end":16},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":202856,"byte_end":202867,"line_start":157,"line_end":157,"column_start":21,"column_end":32},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1380},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":202998,"byte_end":203009,"line_start":163,"line_end":163,"column_start":23,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1380},"to":{"krate":5,"index":35}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":206253,"byte_end":206264,"line_start":241,"line_end":241,"column_start":6,"column_end":17},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":208578,"byte_end":208589,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1380},"to":{"krate":5,"index":119}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217668,"byte_end":217679,"line_start":36,"line_end":36,"column_start":21,"column_end":32},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1388},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":217793,"byte_end":217804,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":218442,"byte_end":218453,"line_start":60,"line_end":60,"column_start":18,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1388},"to":{"krate":5,"index":113}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":219084,"byte_end":219095,"line_start":88,"line_end":88,"column_start":22,"column_end":33},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1388},"to":{"krate":5,"index":119}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":225039,"byte_end":225049,"line_start":34,"line_end":34,"column_start":41,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1395},"to":{"krate":1,"index":1767}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":225181,"byte_end":225191,"line_start":41,"line_end":41,"column_start":41,"column_end":51},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1395},"to":{"krate":1,"index":1770}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":225326,"byte_end":225336,"line_start":48,"line_end":48,"column_start":32,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1395},"to":{"krate":1,"index":2023}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":225500,"byte_end":225510,"line_start":56,"line_end":56,"column_start":35,"column_end":45},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1395},"to":{"krate":1,"index":2034}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":225661,"byte_end":225671,"line_start":63,"line_end":63,"column_start":38,"column_end":48},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1395},"to":{"krate":1,"index":1843}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":240595,"byte_end":240607,"line_start":62,"line_end":62,"column_start":15,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":241429,"byte_end":241441,"line_start":85,"line_end":85,"column_start":36,"column_end":48},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1404},"to":{"krate":5,"index":113}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":241975,"byte_end":241987,"line_start":108,"line_end":108,"column_start":25,"column_end":37},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1404},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":242311,"byte_end":242323,"line_start":119,"line_end":119,"column_start":29,"column_end":41},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1404},"to":{"krate":5,"index":118}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":242584,"byte_end":242597,"line_start":131,"line_end":131,"column_start":32,"column_end":45},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1413},"to":{"krate":5,"index":35}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":243322,"byte_end":243335,"line_start":151,"line_end":151,"column_start":15,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":245182,"byte_end":245195,"line_start":205,"line_end":205,"column_start":25,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1413},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":245586,"byte_end":245599,"line_start":219,"line_end":219,"column_start":29,"column_end":42},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1413},"to":{"krate":5,"index":118}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":254463,"byte_end":254470,"line_start":178,"line_end":178,"column_start":6,"column_end":13},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":255266,"byte_end":255275,"line_start":200,"line_end":200,"column_start":21,"column_end":30},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":255397,"byte_end":255406,"line_start":206,"line_end":206,"column_start":16,"column_end":25},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":256375,"byte_end":256385,"line_start":239,"line_end":239,"column_start":6,"column_end":16},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":256873,"byte_end":256883,"line_start":252,"line_end":252,"column_start":23,"column_end":33},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1424},"to":{"krate":1,"index":5921}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":257160,"byte_end":257165,"line_start":265,"line_end":265,"column_start":27,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":5,"index":159},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":257653,"byte_end":257662,"line_start":278,"line_end":278,"column_start":6,"column_end":15},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":280452,"byte_end":280461,"line_start":825,"line_end":825,"column_start":18,"column_end":27},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":560},"to":{"krate":5,"index":113}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":281425,"byte_end":281434,"line_start":857,"line_end":857,"column_start":20,"column_end":29},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":560},"to":{"krate":5,"index":118}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283466,"byte_end":283473,"line_start":35,"line_end":35,"column_start":6,"column_end":13},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":283736,"byte_end":283743,"line_start":43,"line_end":43,"column_start":18,"column_end":25},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1447},"to":{"krate":5,"index":113}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":286860,"byte_end":286868,"line_start":71,"line_end":71,"column_start":18,"column_end":26},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1454},"to":{"krate":5,"index":113}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":287280,"byte_end":287288,"line_start":91,"line_end":91,"column_start":22,"column_end":30},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1454},"to":{"krate":5,"index":119}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":288940,"byte_end":288946,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1461},"to":{"krate":5,"index":113}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":289358,"byte_end":289364,"line_start":53,"line_end":53,"column_start":22,"column_end":28},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1461},"to":{"krate":5,"index":119}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":289644,"byte_end":289650,"line_start":65,"line_end":65,"column_start":20,"column_end":26},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1461},"to":{"krate":5,"index":118}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14483,"byte_end":14488,"line_start":368,"line_end":368,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":1857},"to":{"krate":0,"index":689}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16217,"byte_end":16224,"line_start":413,"line_end":413,"column_start":16,"column_end":23},"kind":"SuperTrait","from":{"krate":5,"index":113},"to":{"krate":0,"index":692}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26431,"byte_end":26432,"line_start":725,"line_end":725,"column_start":35,"column_end":36},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":722},"to":{"krate":0,"index":692}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29763,"byte_end":29772,"line_start":838,"line_end":838,"column_start":34,"column_end":43},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1695},"to":{"krate":1,"index":4716}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":30376,"byte_end":30390,"line_start":860,"line_end":860,"column_start":31,"column_end":45},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1704},"to":{"krate":1,"index":4716}}]}
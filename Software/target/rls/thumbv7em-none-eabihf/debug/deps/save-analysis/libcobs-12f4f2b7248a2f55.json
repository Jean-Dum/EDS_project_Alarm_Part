{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4","program":"/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","cobs","/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=1","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=12f4f2b7248a2f55","-C","extra-filename=-12f4f2b7248a2f55","--out-dir","/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/jean/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/jean/Documents/EDS_project_Alarm_Part/Software/target/rls/thumbv7em-none-eabihf/debug/deps/libcobs-12f4f2b7248a2f55.rmeta"},"prelude":{"crate_id":{"name":"cobs","disambiguator":[5606040363538112386,10283902304794286917]},"crate_root":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src","external_crates":[{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6179814377341127279,15810806659018497542]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10095233927134609311,1311941312663600358]}},{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4961934893482737060,7310190255483934973]}}],"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":0,"byte_end":14139,"line_start":1,"line_end":403,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":0,"byte_end":14139,"line_start":1,"line_end":403,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":32},{"krate":0,"index":38},{"krate":0,"index":4},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":41},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":60},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":38,"byte_end":44,"line_start":1,"line_end":1,"column_start":39,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":32},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":76,"byte_end":87,"line_start":4,"line_end":4,"column_start":12,"column_end":23},"name":"CobsEncoder","qualname":"::CobsEncoder","value":"CobsEncoder {  }","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":267,"byte_end":270,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<CobsEncoder>::new","value":"fn (out_buf: &'a mut [u8]) -> CobsEncoder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Create a new streaming Cobs Encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":513,"byte_end":517,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"push","qualname":"<CobsEncoder>::push","value":"fn (&mut self, data: &[u8]) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Push a slice of data to be encoded\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":1623,"byte_end":1631,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"finalize","qualname":"<CobsEncoder>::finalize","value":"fn (self) -> Result<usize, ()>","parent":null,"children":[],"decl_id":null,"docs":" Complete encoding of the output message. Does NOT terminate\n the message with the sentinel value\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":12},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2408,"byte_end":2414,"line_start":81,"line_end":81,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode","value":"fn (source: &[u8], dest: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Encodes the `source` buffer into the `dest` buffer.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":13},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":2985,"byte_end":3005,"line_start":94,"line_end":94,"column_start":8,"column_end":28},"name":"encode_with_sentinel","qualname":"::encode_with_sentinel","value":"fn (source: &[u8], dest: &mut [u8], sentinel: u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Encodes the `source` buffer into the `dest` buffer using an\n arbitrary sentinel value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":41},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":3921,"byte_end":3932,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"CobsDecoder","qualname":"::CobsDecoder","value":"CobsDecoder {  }","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":4720,"byte_end":4723,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"new","qualname":"<CobsDecoder>::new","value":"fn (dest: &'a mut [u8]) -> CobsDecoder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Create a new streaming Cobs Decoder. Provide the output buffer\n for the decoded message to be placed in\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":5312,"byte_end":5316,"line_start":173,"line_end":173,"column_start":12,"column_end":16},"name":"feed","qualname":"<CobsDecoder>::feed","value":"fn (&mut self, data: u8) -> Result<Option<usize>, usize>","parent":null,"children":[],"decl_id":null,"docs":" Push a single byte into the streaming CobsDecoder. Return values mean:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":9851,"byte_end":9855,"line_start":273,"line_end":273,"column_start":12,"column_end":16},"name":"push","qualname":"<CobsDecoder>::push","value":"fn (&mut self, data: &[u8]) -> Result<Option<(usize, usize)>, usize>","parent":null,"children":[],"decl_id":null,"docs":" Push a slice of bytes into the streaming CobsDecoder. Return values mean:","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":11628,"byte_end":11634,"line_start":332,"line_end":332,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode","value":"fn (source: &[u8], dest: &mut [u8]) -> Result<usize, ()>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the `source` buffer into the `dest` buffer.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":12128,"byte_end":12143,"line_start":348,"line_end":348,"column_start":8,"column_end":23},"name":"decode_in_place","qualname":"::decode_in_place","value":"fn (buff: &mut [u8]) -> Result<usize, ()>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a message in-place.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":12557,"byte_end":12577,"line_start":357,"line_end":357,"column_start":8,"column_end":28},"name":"decode_with_sentinel","qualname":"::decode_with_sentinel","value":"fn (source: &[u8], dest: &mut [u8], sentinel: u8) -> Result<usize, ()>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the `source` buffer into the `dest` buffer using an arbitrary sentinel value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":12837,"byte_end":12866,"line_start":365,"line_end":365,"column_start":8,"column_end":37},"name":"decode_in_place_with_sentinel","qualname":"::decode_in_place_with_sentinel","value":"fn (buff: &mut [u8], sentinel: u8) -> Result<usize, ()>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a message in-place using an arbitrary sentinel value.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":14009,"byte_end":14028,"line_start":401,"line_end":401,"column_start":8,"column_end":27},"name":"max_encoding_length","qualname":"::max_encoding_length","value":"fn (source_len: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Calculates the maximum possible size of an encoded message given the length\n of the source message. This may be useful for calculating how large the\n `dest` buffer needs to be in the encoding functions.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":193,"byte_end":204,"line_start":11,"line_end":11,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":11}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":4571,"byte_end":4582,"line_start":153,"line_end":153,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":193,"byte_end":204,"line_start":11,"line_end":11,"column_start":10,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":32},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jean/.cargo/registry/src/github.com-1ecc6299db9ec823/cobs-0.1.4/src/lib.rs","byte_start":4571,"byte_end":4582,"line_start":153,"line_end":153,"column_start":10,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":41},"to":{"krate":4294967295,"index":4294967295}}]}